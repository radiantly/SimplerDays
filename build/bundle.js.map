{"version":3,"file":"bundle.js","sources":["../../node_modules/.pnpm/svelte@3.46.6/node_modules/svelte/internal/index.mjs","../../src/components/Hero.svelte","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/deflate.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/inflate.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/configuration.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/util/mime-type.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/crc32.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/util/encode-text.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/sjcl.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/aes-crypto.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/zip-crypto.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/codec.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/codec-pool-worker.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/codecs/codec-pool.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/util/stream-codec-shim.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/io.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/constants.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/util/cp437-decode.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/util/decode-text.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/engine.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/zip-entry.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/zip-reader.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/zip-writer.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/core/zip-fs-core.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/zip-fs.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/lib/z-worker-inline.js","../../node_modules/.pnpm/@zip.js+zip.js@2.4.9/node_modules/@zip.js/zip.js/index.js","../../src/components/Reader.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let file;\n\n  const handleFile = (f) => {\n    file = f;\n    console.log(f);\n  };\n\n  const handleDrop = (e) => {\n    const files = e.target.files || e.dataTransfer.files;\n    if (!files.length) return;\n    handleFile(files[0]);\n  };\n\n  const handleSelect = (e) => {\n    if (!e.target.files.length) return;\n    handleFile(e.target.files[0]);\n  };\n</script>\n\n<svelte:body on:drop|preventDefault={handleDrop} />\n\n<div class=\"main-container\">\n  <form class=\"container\">\n    <div class=\"heading\">Simpler<br />days</div>\n    <p>A delightful comic book reader for the web</p>\n    <p>\n      Drag and drop or\n      <label class=\"select-file\">\n        <input\n          type=\"file\"\n          accept=\".cbz,application/vnd.comicbook+zip\"\n          on:change|self={handleSelect}\n        />\n        select\n      </label>\n      a .cbz file to start reading\n    </p>\n  </form>\n</div>\n\n<style>\n  .main-container {\n    flex-grow: 1;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--red);\n    color: var(--whitish);\n  }\n  .main-container::selection {\n    color: inherit;\n    background: rgba(255, 255, 255, 0.1);\n  }\n  .heading {\n    font-family: \"Coolvetica Crammed\";\n    text-transform: uppercase;\n    font-size: 210px;\n    line-height: 0.82;\n    margin-bottom: 20px;\n  }\n  p {\n    font-family: \"Coolvetica Condensed\";\n    font-size: 54px;\n  }\n\n  .select-file {\n    cursor: pointer;\n    position: relative;\n    display: inline-flex;\n  }\n\n  .select-file::before {\n    content: \"\";\n    background-color: var(--whitish);\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 4px;\n    transform-origin: bottom center;\n  }\n\n  .select-file:hover {\n    color: var(--darkish);\n  }\n\n  .select-file:hover::before {\n    background-color: var(--darkish);\n  }\n\n  .select-file input[type=\"file\"] {\n    display: none;\n  }\n</style>\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// Global\n\nconst MAX_BITS = 15;\nconst D_CODES = 30;\nconst BL_CODES = 19;\n\nconst LENGTH_CODES = 29;\nconst LITERALS = 256;\nconst L_CODES = (LITERALS + 1 + LENGTH_CODES);\nconst HEAP_SIZE = (2 * L_CODES + 1);\n\nconst END_BLOCK = 256;\n\n// Bit length codes must not exceed MAX_BL_BITS bits\nconst MAX_BL_BITS = 7;\n\n// repeat previous bit length 3-6 times (2 bits of repeat count)\nconst REP_3_6 = 16;\n\n// repeat a zero length 3-10 times (3 bits of repeat count)\nconst REPZ_3_10 = 17;\n\n// repeat a zero length 11-138 times (7 bits of repeat count)\nconst REPZ_11_138 = 18;\n\n// The lengths of the bit length codes are sent in order of decreasing\n// probability, to avoid transmitting the lengths for unused bit\n// length codes.\n\nconst Buf_size = 8 * 2;\n\n// JZlib version : \"1.0.2\"\nconst Z_DEFAULT_COMPRESSION = -1;\n\n// compression strategy\nconst Z_FILTERED = 1;\nconst Z_HUFFMAN_ONLY = 2;\nconst Z_DEFAULT_STRATEGY = 0;\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_BUF_ERROR = -5;\n\n// Tree\n\nfunction extractArray(array) {\n\treturn flatArray(array.map(([length, value]) => (new Array(length)).fill(value, 0, length)));\n}\n\nfunction flatArray(array) {\n\treturn array.reduce((a, b) => a.concat(Array.isArray(b) ? flatArray(b) : b), []);\n}\n\n// see definition of array dist_code below\nconst _dist_code = [0, 1, 2, 3].concat(...extractArray([\n\t[2, 4], [2, 5], [4, 6], [4, 7], [8, 8], [8, 9], [16, 10], [16, 11], [32, 12], [32, 13], [64, 14], [64, 15], [2, 0], [1, 16],\n\t[1, 17], [2, 18], [2, 19], [4, 20], [4, 21], [8, 22], [8, 23], [16, 24], [16, 25], [32, 26], [32, 27], [64, 28], [64, 29]\n]));\n\nfunction Tree() {\n\tconst that = this;\n\n\t// dyn_tree; // the dynamic tree\n\t// max_code; // largest code with non zero frequency\n\t// stat_desc; // the corresponding static tree\n\n\t// Compute the optimal bit lengths for a tree and update the total bit\n\t// length\n\t// for the current block.\n\t// IN assertion: the fields freq and dad are set, heap[heap_max] and\n\t// above are the tree nodes sorted by increasing frequency.\n\t// OUT assertions: the field len is set to the optimal bit length, the\n\t// array bl_count contains the frequencies for each bit length.\n\t// The length opt_len is updated; static_len is also updated if stree is\n\t// not null.\n\tfunction gen_bitlen(s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst extra = that.stat_desc.extra_bits;\n\t\tconst base = that.stat_desc.extra_base;\n\t\tconst max_length = that.stat_desc.max_length;\n\t\tlet h; // heap index\n\t\tlet n, m; // iterate over the tree elements\n\t\tlet bits; // bit length\n\t\tlet xbits; // extra bits\n\t\tlet f; // frequency\n\t\tlet overflow = 0; // number of elements with bit length too large\n\n\t\tfor (bits = 0; bits <= MAX_BITS; bits++)\n\t\t\ts.bl_count[bits] = 0;\n\n\t\t// In a first pass, compute the optimal bit lengths (which may\n\t\t// overflow in the case of the bit length tree).\n\t\ttree[s.heap[s.heap_max] * 2 + 1] = 0; // root of the heap\n\n\t\tfor (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n\t\t\tn = s.heap[h];\n\t\t\tbits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\n\t\t\tif (bits > max_length) {\n\t\t\t\tbits = max_length;\n\t\t\t\toverflow++;\n\t\t\t}\n\t\t\ttree[n * 2 + 1] = bits;\n\t\t\t// We overwrite tree[n*2+1] which is no longer needed\n\n\t\t\tif (n > that.max_code)\n\t\t\t\tcontinue; // not a leaf node\n\n\t\t\ts.bl_count[bits]++;\n\t\t\txbits = 0;\n\t\t\tif (n >= base)\n\t\t\t\txbits = extra[n - base];\n\t\t\tf = tree[n * 2];\n\t\t\ts.opt_len += f * (bits + xbits);\n\t\t\tif (stree)\n\t\t\t\ts.static_len += f * (stree[n * 2 + 1] + xbits);\n\t\t}\n\t\tif (overflow === 0)\n\t\t\treturn;\n\n\t\t// This happens for example on obj2 and pic of the Calgary corpus\n\t\t// Find the first bit length which could increase:\n\t\tdo {\n\t\t\tbits = max_length - 1;\n\t\t\twhile (s.bl_count[bits] === 0)\n\t\t\t\tbits--;\n\t\t\ts.bl_count[bits]--; // move one leaf down the tree\n\t\t\ts.bl_count[bits + 1] += 2; // move one overflow item as its brother\n\t\t\ts.bl_count[max_length]--;\n\t\t\t// The brother of the overflow item also moves one step up,\n\t\t\t// but this does not affect bl_count[max_length]\n\t\t\toverflow -= 2;\n\t\t} while (overflow > 0);\n\n\t\tfor (bits = max_length; bits !== 0; bits--) {\n\t\t\tn = s.bl_count[bits];\n\t\t\twhile (n !== 0) {\n\t\t\t\tm = s.heap[--h];\n\t\t\t\tif (m > that.max_code)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (tree[m * 2 + 1] != bits) {\n\t\t\t\t\ts.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];\n\t\t\t\t\ttree[m * 2 + 1] = bits;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Reverse the first len bits of a code, using straightforward code (a\n\t// faster\n\t// method would use a table)\n\t// IN assertion: 1 <= len <= 15\n\tfunction bi_reverse(code, // the value to invert\n\t\tlen // its bit length\n\t) {\n\t\tlet res = 0;\n\t\tdo {\n\t\t\tres |= code & 1;\n\t\t\tcode >>>= 1;\n\t\t\tres <<= 1;\n\t\t} while (--len > 0);\n\t\treturn res >>> 1;\n\t}\n\n\t// Generate the codes for a given tree and bit counts (which need not be\n\t// optimal).\n\t// IN assertion: the array bl_count contains the bit length statistics for\n\t// the given tree and the field len is set for all tree elements.\n\t// OUT assertion: the field code is set for all tree elements of non\n\t// zero code length.\n\tfunction gen_codes(tree, // the tree to decorate\n\t\tmax_code, // largest code with non zero frequency\n\t\tbl_count // number of codes at each bit length\n\t) {\n\t\tconst next_code = []; // next code value for each\n\t\t// bit length\n\t\tlet code = 0; // running code value\n\t\tlet bits; // bit index\n\t\tlet n; // code index\n\t\tlet len;\n\n\t\t// The distribution counts are first used to generate the code values\n\t\t// without bit reversal.\n\t\tfor (bits = 1; bits <= MAX_BITS; bits++) {\n\t\t\tnext_code[bits] = code = ((code + bl_count[bits - 1]) << 1);\n\t\t}\n\n\t\t// Check that the bit counts in bl_count are consistent. The last code\n\t\t// must be all ones.\n\t\t// Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n\t\t// \"inconsistent bit counts\");\n\t\t// Tracev((stderr,\"gen_codes: max_code %d \", max_code));\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tlen = tree[n * 2 + 1];\n\t\t\tif (len === 0)\n\t\t\t\tcontinue;\n\t\t\t// Now reverse the bits\n\t\t\ttree[n * 2] = bi_reverse(next_code[len]++, len);\n\t\t}\n\t}\n\n\t// Construct one Huffman tree and assigns the code bit strings and lengths.\n\t// Update the total bit length for the current block.\n\t// IN assertion: the field freq is set for all tree elements.\n\t// OUT assertions: the fields len and code are set to the optimal bit length\n\t// and corresponding code. The length opt_len is updated; static_len is\n\t// also updated if stree is not null. The field max_code is set.\n\tthat.build_tree = function (s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst elems = that.stat_desc.elems;\n\t\tlet n, m; // iterate over heap elements\n\t\tlet max_code = -1; // largest code with non zero frequency\n\t\tlet node; // new node being created\n\n\t\t// Construct the initial heap, with least frequent element in\n\t\t// heap[1]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n\t\t// heap[0] is not used.\n\t\ts.heap_len = 0;\n\t\ts.heap_max = HEAP_SIZE;\n\n\t\tfor (n = 0; n < elems; n++) {\n\t\t\tif (tree[n * 2] !== 0) {\n\t\t\t\ts.heap[++s.heap_len] = max_code = n;\n\t\t\t\ts.depth[n] = 0;\n\t\t\t} else {\n\t\t\t\ttree[n * 2 + 1] = 0;\n\t\t\t}\n\t\t}\n\n\t\t// The pkzip format requires that at least one distance code exists,\n\t\t// and that at least one bit should be sent even if there is only one\n\t\t// possible code. So to avoid special checks later on we force at least\n\t\t// two codes of non zero frequency.\n\t\twhile (s.heap_len < 2) {\n\t\t\tnode = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n\t\t\ttree[node * 2] = 1;\n\t\t\ts.depth[node] = 0;\n\t\t\ts.opt_len--;\n\t\t\tif (stree)\n\t\t\t\ts.static_len -= stree[node * 2 + 1];\n\t\t\t// node is 0 or 1 so it does not have extra bits\n\t\t}\n\t\tthat.max_code = max_code;\n\n\t\t// The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n\t\t// establish sub-heaps of increasing lengths:\n\n\t\tfor (n = Math.floor(s.heap_len / 2); n >= 1; n--)\n\t\t\ts.pqdownheap(tree, n);\n\n\t\t// Construct the Huffman tree by repeatedly combining the least two\n\t\t// frequent nodes.\n\n\t\tnode = elems; // next internal node of the tree\n\t\tdo {\n\t\t\t// n = node of least frequency\n\t\t\tn = s.heap[1];\n\t\t\ts.heap[1] = s.heap[s.heap_len--];\n\t\t\ts.pqdownheap(tree, 1);\n\t\t\tm = s.heap[1]; // m = node of next least frequency\n\n\t\t\ts.heap[--s.heap_max] = n; // keep the nodes sorted by frequency\n\t\t\ts.heap[--s.heap_max] = m;\n\n\t\t\t// Create a new node father of n and m\n\t\t\ttree[node * 2] = (tree[n * 2] + tree[m * 2]);\n\t\t\ts.depth[node] = Math.max(s.depth[n], s.depth[m]) + 1;\n\t\t\ttree[n * 2 + 1] = tree[m * 2 + 1] = node;\n\n\t\t\t// and insert the new node in the heap\n\t\t\ts.heap[1] = node++;\n\t\t\ts.pqdownheap(tree, 1);\n\t\t} while (s.heap_len >= 2);\n\n\t\ts.heap[--s.heap_max] = s.heap[1];\n\n\t\t// At this point, the fields freq and dad are set. We can now\n\t\t// generate the bit lengths.\n\n\t\tgen_bitlen(s);\n\n\t\t// The field len is now set, we can generate the bit codes\n\t\tgen_codes(tree, that.max_code, s.bl_count);\n\t};\n\n}\n\nTree._length_code = [0, 1, 2, 3, 4, 5, 6, 7].concat(...extractArray([\n\t[2, 8], [2, 9], [2, 10], [2, 11], [4, 12], [4, 13], [4, 14], [4, 15], [8, 16], [8, 17], [8, 18], [8, 19],\n\t[16, 20], [16, 21], [16, 22], [16, 23], [32, 24], [32, 25], [32, 26], [31, 27], [1, 28]]));\n\nTree.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0];\n\nTree.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384,\n\t24576];\n\n// Mapping from a distance to a distance code. dist is the distance - 1 and\n// must not have side effects. _dist_code[256] and _dist_code[257] are never\n// used.\nTree.d_code = function (dist) {\n\treturn ((dist) < 256 ? _dist_code[dist] : _dist_code[256 + ((dist) >>> 7)]);\n};\n\n// extra bits for each length code\nTree.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n\n// extra bits for each distance code\nTree.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// extra bits for each bit length code\nTree.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\n\nTree.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n// StaticTree\n\nfunction StaticTree(static_tree, extra_bits, extra_base, elems, max_length) {\n\tconst that = this;\n\tthat.static_tree = static_tree;\n\tthat.extra_bits = extra_bits;\n\tthat.extra_base = extra_base;\n\tthat.elems = elems;\n\tthat.max_length = max_length;\n}\n\nconst static_ltree2_first_part = [12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82,\n\t210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86,\n\t214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 193, 33, 161, 97, 225, 17, 145, 81,\n\t209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85,\n\t213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 237, 29, 157, 93, 221, 61, 189, 125, 253, 19, 275, 147, 403, 83, 339, 211, 467, 51, 307,\n\t179, 435, 115, 371, 243, 499, 11, 267, 139, 395, 75, 331, 203, 459, 43, 299, 171, 427, 107, 363, 235, 491, 27, 283, 155, 411, 91, 347, 219, 475,\n\t59, 315, 187, 443, 123, 379, 251, 507, 7, 263, 135, 391, 71, 327, 199, 455, 39, 295, 167, 423, 103, 359, 231, 487, 23, 279, 151, 407, 87, 343, 215,\n\t471, 55, 311, 183, 439, 119, 375, 247, 503, 15, 271, 143, 399, 79, 335, 207, 463, 47, 303, 175, 431, 111, 367, 239, 495, 31, 287, 159, 415, 95,\n\t351, 223, 479, 63, 319, 191, 447, 127, 383, 255, 511, 0, 64, 32, 96, 16, 80, 48, 112, 8, 72, 40, 104, 24, 88, 56, 120, 4, 68, 36, 100, 20, 84, 52,\n\t116, 3, 131, 67, 195, 35, 163, 99, 227];\nconst static_ltree2_second_part = extractArray([[144, 8], [112, 9], [24, 7], [8, 8]]);\nStaticTree.static_ltree = flatArray(static_ltree2_first_part.map((value, index) => [value, static_ltree2_second_part[index]]));\n\nconst static_dtree_first_part = [0, 16, 8, 24, 4, 20, 12, 28, 2, 18, 10, 26, 6, 22, 14, 30, 1, 17, 9, 25, 5, 21, 13, 29, 3, 19, 11, 27, 7, 23];\nconst static_dtree_second_part = extractArray([[30, 5]]);\nStaticTree.static_dtree = flatArray(static_dtree_first_part.map((value, index) => [value, static_dtree_second_part[index]]));\n\nStaticTree.static_l_desc = new StaticTree(StaticTree.static_ltree, Tree.extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n\nStaticTree.static_d_desc = new StaticTree(StaticTree.static_dtree, Tree.extra_dbits, 0, D_CODES, MAX_BITS);\n\nStaticTree.static_bl_desc = new StaticTree(null, Tree.extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n// Deflate\n\nconst MAX_MEM_LEVEL = 9;\nconst DEF_MEM_LEVEL = 8;\n\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\tconst that = this;\n\tthat.good_length = good_length;\n\tthat.max_lazy = max_lazy;\n\tthat.nice_length = nice_length;\n\tthat.max_chain = max_chain;\n\tthat.func = func;\n}\n\nconst STORED = 0;\nconst FAST = 1;\nconst SLOW = 2;\nconst config_table = [\n\tnew Config(0, 0, 0, 0, STORED),\n\tnew Config(4, 4, 8, 4, FAST),\n\tnew Config(4, 5, 16, 8, FAST),\n\tnew Config(4, 6, 32, 32, FAST),\n\tnew Config(4, 4, 16, 16, SLOW),\n\tnew Config(8, 16, 32, 32, SLOW),\n\tnew Config(8, 16, 128, 128, SLOW),\n\tnew Config(8, 32, 128, 256, SLOW),\n\tnew Config(32, 128, 258, 1024, SLOW),\n\tnew Config(32, 258, 258, 4096, SLOW)\n];\n\nconst z_errmsg = [\"need dictionary\", // Z_NEED_DICT\n\t// 2\n\t\"stream end\", // Z_STREAM_END 1\n\t\"\", // Z_OK 0\n\t\"\", // Z_ERRNO (-1)\n\t\"stream error\", // Z_STREAM_ERROR (-2)\n\t\"data error\", // Z_DATA_ERROR (-3)\n\t\"\", // Z_MEM_ERROR (-4)\n\t\"buffer error\", // Z_BUF_ERROR (-5)\n\t\"\",// Z_VERSION_ERROR (-6)\n\t\"\"];\n\n// block not completed, need more input or more output\nconst NeedMore = 0;\n\n// block flush performed\nconst BlockDone = 1;\n\n// finish started, need only more output at next deflate\nconst FinishStarted = 2;\n\n// finish done, accept no more input or output\nconst FinishDone = 3;\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\n// The deflate compression method\nconst Z_DEFLATED = 8;\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES = 2;\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nfunction smaller(tree, n, m, depth) {\n\tconst tn2 = tree[n * 2];\n\tconst tm2 = tree[m * 2];\n\treturn (tn2 < tm2 || (tn2 == tm2 && depth[n] <= depth[m]));\n}\n\nfunction Deflate() {\n\n\tconst that = this;\n\tlet strm; // pointer back to this zlib stream\n\tlet status; // as the name implies\n\t// pending_buf; // output still pending\n\tlet pending_buf_size; // size of pending_buf\n\t// pending_out; // next pending byte to output to the stream\n\t// pending; // nb of bytes in the pending buffer\n\n\t// dist_buf; // buffer for distances\n\t// lc_buf; // buffer for literals or lengths\n\t// To simplify the code, dist_buf and lc_buf have the same number of elements.\n\t// To use different lengths, an extra flag array would be necessary.\n\n\tlet last_flush; // value of flush param for previous deflate call\n\n\tlet w_size; // LZ77 win size (32K by default)\n\tlet w_bits; // log2(w_size) (8..16)\n\tlet w_mask; // w_size - 1\n\n\tlet win;\n\t// Sliding win. Input bytes are read into the second half of the win,\n\t// and move to the first half later to keep a dictionary of at least wSize\n\t// bytes. With this organization, matches are limited to a distance of\n\t// wSize-MAX_MATCH bytes, but this ensures that IO is always\n\t// performed with a length multiple of the block size. Also, it limits\n\t// the win size to 64K, which is quite useful on MSDOS.\n\t// To do: use the user input buffer as sliding win.\n\n\tlet window_size;\n\t// Actual size of win: 2*wSize, except when the user input buffer\n\t// is directly used as sliding win.\n\n\tlet prev;\n\t// Link to older string with same hash index. To limit the size of this\n\t// array to 64K, this link is maintained only for the last 32K strings.\n\t// An index in this array is thus a win index modulo 32K.\n\n\tlet head; // Heads of the hash chains or NIL.\n\n\tlet ins_h; // hash index of string to be inserted\n\tlet hash_size; // number of elements in hash table\n\tlet hash_bits; // log2(hash_size)\n\tlet hash_mask; // hash_size-1\n\n\t// Number of bits by which ins_h must be shifted at each input\n\t// step. It must be such that after MIN_MATCH steps, the oldest\n\t// byte no longer takes part in the hash key, that is:\n\t// hash_shift * MIN_MATCH >= hash_bits\n\tlet hash_shift;\n\n\t// Window position at the beginning of the current output block. Gets\n\t// negative when the win is moved backwards.\n\n\tlet block_start;\n\n\tlet match_length; // length of best match\n\tlet prev_match; // previous match\n\tlet match_available; // set if previous match exists\n\tlet strstart; // start of string to insert\n\tlet match_start; // start of matching string\n\tlet lookahead; // number of valid bytes ahead in win\n\n\t// Length of the best match at previous step. Matches not greater than this\n\t// are discarded. This is used in the lazy match evaluation.\n\tlet prev_length;\n\n\t// To speed up deflation, hash chains are never searched beyond this\n\t// length. A higher limit improves compression ratio but degrades the speed.\n\tlet max_chain_length;\n\n\t// Attempt to find a better match only when the current match is strictly\n\t// smaller than this value. This mechanism is used only for compression\n\t// levels >= 4.\n\tlet max_lazy_match;\n\n\t// Insert new strings in the hash table only if the match length is not\n\t// greater than this length. This saves time but degrades compression.\n\t// max_insert_length is used only for compression levels <= 3.\n\n\tlet level; // compression level (1..9)\n\tlet strategy; // favor or force Huffman coding\n\n\t// Use a faster search when the previous match is longer than this\n\tlet good_match;\n\n\t// Stop searching when current match exceeds this\n\tlet nice_match;\n\n\tlet dyn_ltree; // literal and length tree\n\tlet dyn_dtree; // distance tree\n\tlet bl_tree; // Huffman tree for bit lengths\n\n\tconst l_desc = new Tree(); // desc for literal tree\n\tconst d_desc = new Tree(); // desc for distance tree\n\tconst bl_desc = new Tree(); // desc for bit length tree\n\n\t// that.heap_len; // number of elements in the heap\n\t// that.heap_max; // element of largest frequency\n\t// The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n\t// The same heap array is used to build all trees.\n\n\t// Depth of each subtree used as tie breaker for trees of equal frequency\n\tthat.depth = [];\n\n\t// Size of match buffer for literals/lengths. There are 4 reasons for\n\t// limiting lit_bufsize to 64K:\n\t// - frequencies can be kept in 16 bit counters\n\t// - if compression is not successful for the first block, all input\n\t// data is still in the win so we can still emit a stored block even\n\t// when input comes from standard input. (This can also be done for\n\t// all blocks if lit_bufsize is not greater than 32K.)\n\t// - if compression is not successful for a file smaller than 64K, we can\n\t// even emit a stored file instead of a stored block (saving 5 bytes).\n\t// This is applicable only for zip (not gzip or zlib).\n\t// - creating new Huffman trees less frequently may not provide fast\n\t// adaptation to changes in the input data statistics. (Take for\n\t// example a binary file with poorly compressible code followed by\n\t// a highly compressible string table.) Smaller buffer sizes give\n\t// fast adaptation but have of course the overhead of transmitting\n\t// trees more frequently.\n\t// - I can't count above 4\n\tlet lit_bufsize;\n\n\tlet last_lit; // running index in dist_buf and lc_buf\n\n\t// that.opt_len; // bit length of current block with optimal trees\n\t// that.static_len; // bit length of current block with static trees\n\tlet matches; // number of string matches in current block\n\tlet last_eob_len; // bit length of EOB code for last block\n\n\t// Output buffer. bits are inserted starting at the bottom (least\n\t// significant bits).\n\tlet bi_buf;\n\n\t// Number of valid bits in bi_buf. All bits above the last valid bit\n\t// are always zero.\n\tlet bi_valid;\n\n\t// number of codes at each bit length for an optimal tree\n\tthat.bl_count = [];\n\n\t// heap used to build the Huffman trees\n\tthat.heap = [];\n\n\tdyn_ltree = [];\n\tdyn_dtree = [];\n\tbl_tree = [];\n\n\tfunction lm_init() {\n\t\twindow_size = 2 * w_size;\n\n\t\thead[hash_size - 1] = 0;\n\t\tfor (let i = 0; i < hash_size - 1; i++) {\n\t\t\thead[i] = 0;\n\t\t}\n\n\t\t// Set the default configuration parameters:\n\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\tgood_match = config_table[level].good_length;\n\t\tnice_match = config_table[level].nice_length;\n\t\tmax_chain_length = config_table[level].max_chain;\n\n\t\tstrstart = 0;\n\t\tblock_start = 0;\n\t\tlookahead = 0;\n\t\tmatch_length = prev_length = MIN_MATCH - 1;\n\t\tmatch_available = 0;\n\t\tins_h = 0;\n\t}\n\n\tfunction init_block() {\n\t\tlet i;\n\t\t// Initialize the trees.\n\t\tfor (i = 0; i < L_CODES; i++)\n\t\t\tdyn_ltree[i * 2] = 0;\n\t\tfor (i = 0; i < D_CODES; i++)\n\t\t\tdyn_dtree[i * 2] = 0;\n\t\tfor (i = 0; i < BL_CODES; i++)\n\t\t\tbl_tree[i * 2] = 0;\n\n\t\tdyn_ltree[END_BLOCK * 2] = 1;\n\t\tthat.opt_len = that.static_len = 0;\n\t\tlast_lit = matches = 0;\n\t}\n\n\t// Initialize the tree data structures for a new zlib stream.\n\tfunction tr_init() {\n\n\t\tl_desc.dyn_tree = dyn_ltree;\n\t\tl_desc.stat_desc = StaticTree.static_l_desc;\n\n\t\td_desc.dyn_tree = dyn_dtree;\n\t\td_desc.stat_desc = StaticTree.static_d_desc;\n\n\t\tbl_desc.dyn_tree = bl_tree;\n\t\tbl_desc.stat_desc = StaticTree.static_bl_desc;\n\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\t// Initialize the first block of the first file:\n\t\tinit_block();\n\t}\n\n\t// Restore the heap property by moving down the tree starting at node k,\n\t// exchanging a node with the smallest of its two sons if necessary,\n\t// stopping\n\t// when the heap property is re-established (each father smaller than its\n\t// two sons).\n\tthat.pqdownheap = function (tree, // the tree to restore\n\t\tk // node to move down\n\t) {\n\t\tconst heap = that.heap;\n\t\tconst v = heap[k];\n\t\tlet j = k << 1; // left son of k\n\t\twhile (j <= that.heap_len) {\n\t\t\t// Set j to the smallest of the two sons:\n\t\t\tif (j < that.heap_len && smaller(tree, heap[j + 1], heap[j], that.depth)) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t// Exit if v is smaller than both sons\n\t\t\tif (smaller(tree, v, heap[j], that.depth))\n\t\t\t\tbreak;\n\n\t\t\t// Exchange v with the smallest son\n\t\t\theap[k] = heap[j];\n\t\t\tk = j;\n\t\t\t// And continue down the tree, setting j to the left son of k\n\t\t\tj <<= 1;\n\t\t}\n\t\theap[k] = v;\n\t};\n\n\t// Scan a literal or distance tree to determine the frequencies of the codes\n\t// in the bit length tree.\n\tfunction scan_tree(tree,// the tree to be scanned\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\t\ttree[(max_code + 1) * 2 + 1] = 0xffff; // guard\n\n\t\tfor (let n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tbl_tree[curlen * 2] += count;\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen)\n\t\t\t\t\tbl_tree[curlen * 2]++;\n\t\t\t\tbl_tree[REP_3_6 * 2]++;\n\t\t\t} else if (count <= 10) {\n\t\t\t\tbl_tree[REPZ_3_10 * 2]++;\n\t\t\t} else {\n\t\t\t\tbl_tree[REPZ_11_138 * 2]++;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Construct the Huffman tree for the bit lengths and return the index in\n\t// bl_order of the last bit length code to send.\n\tfunction build_bl_tree() {\n\t\tlet max_blindex; // index of last bit length code of non zero freq\n\n\t\t// Determine the bit length frequencies for literal and distance trees\n\t\tscan_tree(dyn_ltree, l_desc.max_code);\n\t\tscan_tree(dyn_dtree, d_desc.max_code);\n\n\t\t// Build the bit length tree:\n\t\tbl_desc.build_tree(that);\n\t\t// opt_len now includes the length of the tree representations, except\n\t\t// the lengths of the bit lengths codes and the 5+5+4 bits for the\n\t\t// counts.\n\n\t\t// Determine the number of bit length codes to send. The pkzip format\n\t\t// requires that at least 4 bit length codes be sent. (appnote.txt says\n\t\t// 3 but the actual value used is 4.)\n\t\tfor (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n\t\t\tif (bl_tree[Tree.bl_order[max_blindex] * 2 + 1] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\t// Update opt_len to include the bit length tree and counts\n\t\tthat.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n\n\t\treturn max_blindex;\n\t}\n\n\t// Output a byte on the stream.\n\t// IN assertion: there is enough room in pending_buf.\n\tfunction put_byte(p) {\n\t\tthat.pending_buf[that.pending++] = p;\n\t}\n\n\tfunction put_short(w) {\n\t\tput_byte(w & 0xff);\n\t\tput_byte((w >>> 8) & 0xff);\n\t}\n\n\tfunction putShortMSB(b) {\n\t\tput_byte((b >> 8) & 0xff);\n\t\tput_byte((b & 0xff) & 0xff);\n\t}\n\n\tfunction send_bits(value, length) {\n\t\tlet val;\n\t\tconst len = length;\n\t\tif (bi_valid > Buf_size - len) {\n\t\t\tval = value;\n\t\t\t// bi_buf |= (val << bi_valid);\n\t\t\tbi_buf |= ((val << bi_valid) & 0xffff);\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = val >>> (Buf_size - bi_valid);\n\t\t\tbi_valid += len - Buf_size;\n\t\t} else {\n\t\t\t// bi_buf |= (value) << bi_valid;\n\t\t\tbi_buf |= (((value) << bi_valid) & 0xffff);\n\t\t\tbi_valid += len;\n\t\t}\n\t}\n\n\tfunction send_code(c, tree) {\n\t\tconst c2 = c * 2;\n\t\tsend_bits(tree[c2] & 0xffff, tree[c2 + 1] & 0xffff);\n\t}\n\n\t// Send a literal or distance tree in compressed form, using the codes in\n\t// bl_tree.\n\tfunction send_tree(tree,// the tree to be sent\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet n; // iterates over all tree elements\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tdo {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t} while (--count !== 0);\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen) {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\t\t\t\tsend_code(REP_3_6, bl_tree);\n\t\t\t\tsend_bits(count - 3, 2);\n\t\t\t} else if (count <= 10) {\n\t\t\t\tsend_code(REPZ_3_10, bl_tree);\n\t\t\t\tsend_bits(count - 3, 3);\n\t\t\t} else {\n\t\t\t\tsend_code(REPZ_11_138, bl_tree);\n\t\t\t\tsend_bits(count - 11, 7);\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Send the header for a block using dynamic Huffman trees: the counts, the\n\t// lengths of the bit length codes, the literal tree and the distance tree.\n\t// IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n\tfunction send_all_trees(lcodes, dcodes, blcodes) {\n\t\tlet rank; // index in bl_order\n\n\t\tsend_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\n\t\tsend_bits(dcodes - 1, 5);\n\t\tsend_bits(blcodes - 4, 4); // not -3 as stated in appnote.txt\n\t\tfor (rank = 0; rank < blcodes; rank++) {\n\t\t\tsend_bits(bl_tree[Tree.bl_order[rank] * 2 + 1], 3);\n\t\t}\n\t\tsend_tree(dyn_ltree, lcodes - 1); // literal tree\n\t\tsend_tree(dyn_dtree, dcodes - 1); // distance tree\n\t}\n\n\t// Flush the bit buffer, keeping at most 7 bits in it.\n\tfunction bi_flush() {\n\t\tif (bi_valid == 16) {\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = 0;\n\t\t\tbi_valid = 0;\n\t\t} else if (bi_valid >= 8) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t\tbi_buf >>>= 8;\n\t\t\tbi_valid -= 8;\n\t\t}\n\t}\n\n\t// Send one empty static block to give enough lookahead for inflate.\n\t// This takes 10 bits, of which 7 may remain in the bit buffer.\n\t// The current inflate code requires 9 bits of lookahead. If the\n\t// last two codes for the previous block (real code plus EOB) were coded\n\t// on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode\n\t// the last real code. In this case we send two empty static blocks instead\n\t// of one. (There are no problems if the previous block is stored or fixed.)\n\t// To simplify the code, we assume the worst case of last real code encoded\n\t// on one bit only.\n\tfunction _tr_align() {\n\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\n\t\tbi_flush();\n\n\t\t// Of the 10 bits for the empty block, we have already sent\n\t\t// (10 - bi_valid) bits. The lookahead for the last real code (before\n\t\t// the EOB of the previous block) was thus at least one plus the length\n\t\t// of the EOB plus what we have just sent of the empty static block.\n\t\tif (1 + last_eob_len + 10 - bi_valid < 9) {\n\t\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\t\t\tbi_flush();\n\t\t}\n\t\tlast_eob_len = 7;\n\t}\n\n\t// Save the match info and tally the frequency counts. Return true if\n\t// the current block must be flushed.\n\tfunction _tr_tally(dist, // distance of matched string\n\t\tlc // match length-MIN_MATCH or unmatched char (if dist==0)\n\t) {\n\t\tlet out_length, in_length, dcode;\n\t\tthat.dist_buf[last_lit] = dist;\n\t\tthat.lc_buf[last_lit] = lc & 0xff;\n\t\tlast_lit++;\n\n\t\tif (dist === 0) {\n\t\t\t// lc is the unmatched char\n\t\t\tdyn_ltree[lc * 2]++;\n\t\t} else {\n\t\t\tmatches++;\n\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\tdist--; // dist = match distance - 1\n\t\t\tdyn_ltree[(Tree._length_code[lc] + LITERALS + 1) * 2]++;\n\t\t\tdyn_dtree[Tree.d_code(dist) * 2]++;\n\t\t}\n\n\t\tif ((last_lit & 0x1fff) === 0 && level > 2) {\n\t\t\t// Compute an upper bound for the compressed length\n\t\t\tout_length = last_lit * 8;\n\t\t\tin_length = strstart - block_start;\n\t\t\tfor (dcode = 0; dcode < D_CODES; dcode++) {\n\t\t\t\tout_length += dyn_dtree[dcode * 2] * (5 + Tree.extra_dbits[dcode]);\n\t\t\t}\n\t\t\tout_length >>>= 3;\n\t\t\tif ((matches < Math.floor(last_lit / 2)) && out_length < Math.floor(in_length / 2))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn (last_lit == lit_bufsize - 1);\n\t\t// We avoid equality with lit_bufsize because of wraparound at 64K\n\t\t// on 16 bit machines and because stored blocks are restricted to\n\t\t// 64K-1 bytes.\n\t}\n\n\t// Send the block data compressed using the given Huffman trees\n\tfunction compress_block(ltree, dtree) {\n\t\tlet dist; // distance of matched string\n\t\tlet lc; // match length or unmatched char (if dist === 0)\n\t\tlet lx = 0; // running index in dist_buf and lc_buf\n\t\tlet code; // the code to send\n\t\tlet extra; // number of extra bits to send\n\n\t\tif (last_lit !== 0) {\n\t\t\tdo {\n\t\t\t\tdist = that.dist_buf[lx];\n\t\t\t\tlc = that.lc_buf[lx];\n\t\t\t\tlx++;\n\n\t\t\t\tif (dist === 0) {\n\t\t\t\t\tsend_code(lc, ltree); // send a literal byte\n\t\t\t\t} else {\n\t\t\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\t\t\tcode = Tree._length_code[lc];\n\n\t\t\t\t\tsend_code(code + LITERALS + 1, ltree); // send the length\n\t\t\t\t\t// code\n\t\t\t\t\textra = Tree.extra_lbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tlc -= Tree.base_length[code];\n\t\t\t\t\t\tsend_bits(lc, extra); // send the extra length bits\n\t\t\t\t\t}\n\t\t\t\t\tdist--; // dist is now the match distance - 1\n\t\t\t\t\tcode = Tree.d_code(dist);\n\n\t\t\t\t\tsend_code(code, dtree); // send the distance code\n\t\t\t\t\textra = Tree.extra_dbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tdist -= Tree.base_dist[code];\n\t\t\t\t\t\tsend_bits(dist, extra); // send the extra distance bits\n\t\t\t\t\t}\n\t\t\t\t} // literal or match pair ?\n\t\t\t} while (lx < last_lit);\n\t\t}\n\n\t\tsend_code(END_BLOCK, ltree);\n\t\tlast_eob_len = ltree[END_BLOCK * 2 + 1];\n\t}\n\n\t// Flush the bit buffer and align the output on a byte boundary\n\tfunction bi_windup() {\n\t\tif (bi_valid > 8) {\n\t\t\tput_short(bi_buf);\n\t\t} else if (bi_valid > 0) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t}\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t}\n\n\t// Copy a stored block, storing first the length and its\n\t// one's complement if requested.\n\tfunction copy_block(buf, // the input data\n\t\tlen, // its length\n\t\theader // true if block header must be written\n\t) {\n\t\tbi_windup(); // align on byte boundary\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\tif (header) {\n\t\t\tput_short(len);\n\t\t\tput_short(~len);\n\t\t}\n\n\t\tthat.pending_buf.set(win.subarray(buf, buf + len), that.pending);\n\t\tthat.pending += len;\n\t}\n\n\t// Send a stored block\n\tfunction _tr_stored_block(buf, // input block\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tsend_bits((STORED_BLOCK << 1) + (eof ? 1 : 0), 3); // send block type\n\t\tcopy_block(buf, stored_len, true); // with header\n\t}\n\n\t// Determine the best encoding for the current block: dynamic trees, static\n\t// trees or store, and output the encoded block to the zip file.\n\tfunction _tr_flush_block(buf, // input block, or NULL if too old\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tlet opt_lenb, static_lenb;// opt_len and static_len in bytes\n\t\tlet max_blindex = 0; // index of last bit length code of non zero freq\n\n\t\t// Build the Huffman trees unless a stored block is forced\n\t\tif (level > 0) {\n\t\t\t// Construct the literal and distance trees\n\t\t\tl_desc.build_tree(that);\n\n\t\t\td_desc.build_tree(that);\n\n\t\t\t// At this point, opt_len and static_len are the total bit lengths\n\t\t\t// of\n\t\t\t// the compressed block data, excluding the tree representations.\n\n\t\t\t// Build the bit length tree for the above two trees, and get the\n\t\t\t// index\n\t\t\t// in bl_order of the last bit length code to send.\n\t\t\tmax_blindex = build_bl_tree();\n\n\t\t\t// Determine the best encoding. Compute first the block length in\n\t\t\t// bytes\n\t\t\topt_lenb = (that.opt_len + 3 + 7) >>> 3;\n\t\t\tstatic_lenb = (that.static_len + 3 + 7) >>> 3;\n\n\t\t\tif (static_lenb <= opt_lenb)\n\t\t\t\topt_lenb = static_lenb;\n\t\t} else {\n\t\t\topt_lenb = static_lenb = stored_len + 5; // force a stored block\n\t\t}\n\n\t\tif ((stored_len + 4 <= opt_lenb) && buf != -1) {\n\t\t\t// 4: two words for the lengths\n\t\t\t// The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t\t\t// Otherwise we can't have processed more than WSIZE input bytes\n\t\t\t// since\n\t\t\t// the last block flush, because compression would have been\n\t\t\t// successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t\t\t// transform a block into a stored block.\n\t\t\t_tr_stored_block(buf, stored_len, eof);\n\t\t} else if (static_lenb == opt_lenb) {\n\t\t\tsend_bits((STATIC_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tcompress_block(StaticTree.static_ltree, StaticTree.static_dtree);\n\t\t} else {\n\t\t\tsend_bits((DYN_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tsend_all_trees(l_desc.max_code + 1, d_desc.max_code + 1, max_blindex + 1);\n\t\t\tcompress_block(dyn_ltree, dyn_dtree);\n\t\t}\n\n\t\t// The above check is made mod 2^32, for files larger than 512 MB\n\t\t// and uLong implemented on 32 bits.\n\n\t\tinit_block();\n\n\t\tif (eof) {\n\t\t\tbi_windup();\n\t\t}\n\t}\n\n\tfunction flush_block_only(eof) {\n\t\t_tr_flush_block(block_start >= 0 ? block_start : -1, strstart - block_start, eof);\n\t\tblock_start = strstart;\n\t\tstrm.flush_pending();\n\t}\n\n\t// Fill the win when the lookahead becomes insufficient.\n\t// Updates strstart and lookahead.\n\t//\n\t// IN assertion: lookahead < MIN_LOOKAHEAD\n\t// OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n\t// At least one byte has been read, or avail_in === 0; reads are\n\t// performed for at least two bytes (required for the zip translate_eol\n\t// option -- not supported here).\n\tfunction fill_window() {\n\t\tlet n, m;\n\t\tlet p;\n\t\tlet more; // Amount of free space at the end of the win.\n\n\t\tdo {\n\t\t\tmore = (window_size - lookahead - strstart);\n\n\t\t\t// Deal with !@#$% 64K limit:\n\t\t\tif (more === 0 && strstart === 0 && lookahead === 0) {\n\t\t\t\tmore = w_size;\n\t\t\t} else if (more == -1) {\n\t\t\t\t// Very unlikely, but possible on 16 bit machine if strstart ==\n\t\t\t\t// 0\n\t\t\t\t// and lookahead == 1 (input done one byte at time)\n\t\t\t\tmore--;\n\n\t\t\t\t// If the win is almost full and there is insufficient\n\t\t\t\t// lookahead,\n\t\t\t\t// move the upper half to the lower one to make room in the\n\t\t\t\t// upper half.\n\t\t\t} else if (strstart >= w_size + w_size - MIN_LOOKAHEAD) {\n\t\t\t\twin.set(win.subarray(w_size, w_size + w_size), 0);\n\n\t\t\t\tmatch_start -= w_size;\n\t\t\t\tstrstart -= w_size; // we now have strstart >= MAX_DIST\n\t\t\t\tblock_start -= w_size;\n\n\t\t\t\t// Slide the hash table (could be avoided with 32 bit values\n\t\t\t\t// at the expense of memory usage). We slide even when level ==\n\t\t\t\t// 0\n\t\t\t\t// to keep the hash table consistent if we switch back to level\n\t\t\t\t// > 0\n\t\t\t\t// later. (Using level 0 permanently is not an optimal usage of\n\t\t\t\t// zlib, so we don't care about this pathological case.)\n\n\t\t\t\tn = hash_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (head[--p] & 0xffff);\n\t\t\t\t\thead[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t} while (--n !== 0);\n\n\t\t\t\tn = w_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (prev[--p] & 0xffff);\n\t\t\t\t\tprev[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t\t// If n is not on any hash chain, prev[n] is garbage but\n\t\t\t\t\t// its value will never be used.\n\t\t\t\t} while (--n !== 0);\n\t\t\t\tmore += w_size;\n\t\t\t}\n\n\t\t\tif (strm.avail_in === 0)\n\t\t\t\treturn;\n\n\t\t\t// If there was no sliding:\n\t\t\t// strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n\t\t\t// more == window_size - lookahead - strstart\n\t\t\t// => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n\t\t\t// => more >= window_size - 2*WSIZE + 2\n\t\t\t// In the BIG_MEM or MMAP case (not yet supported),\n\t\t\t// window_size == input_size + MIN_LOOKAHEAD &&\n\t\t\t// strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n\t\t\t// Otherwise, window_size == 2*WSIZE so more >= 2.\n\t\t\t// If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n\n\t\t\tn = strm.read_buf(win, strstart + lookahead, more);\n\t\t\tlookahead += n;\n\n\t\t\t// Initialize the hash value now that we have some input:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = win[strstart] & 0xff;\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t}\n\t\t\t// If the whole input has less than MIN_MATCH bytes, ins_h is\n\t\t\t// garbage,\n\t\t\t// but this is not important since only literal bytes will be\n\t\t\t// emitted.\n\t\t} while (lookahead < MIN_LOOKAHEAD && strm.avail_in !== 0);\n\t}\n\n\t// Copy without compression as much as possible from the input stream,\n\t// return\n\t// the current block state.\n\t// This function does not insert new strings in the dictionary since\n\t// uncompressible data is probably not useful. This function is used\n\t// only for the level=0 compression option.\n\t// NOTE: this function should be optimized to avoid extra copying from\n\t// win to pending_buf.\n\tfunction deflate_stored(flush) {\n\t\t// Stored blocks are limited to 0xffff bytes, pending_buf is limited\n\t\t// to pending_buf_size, and each stored block has a 5 byte header:\n\n\t\tlet max_block_size = 0xffff;\n\t\tlet max_start;\n\n\t\tif (max_block_size > pending_buf_size - 5) {\n\t\t\tmax_block_size = pending_buf_size - 5;\n\t\t}\n\n\t\t// Copy as much as possible from input to output:\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Fill the win as much as possible:\n\t\t\tif (lookahead <= 1) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead === 0 && flush == Z_NO_FLUSH)\n\t\t\t\t\treturn NeedMore;\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\tstrstart += lookahead;\n\t\t\tlookahead = 0;\n\n\t\t\t// Emit a stored block if pending_buf will be full:\n\t\t\tmax_start = block_start + max_block_size;\n\t\t\tif (strstart === 0 || strstart >= max_start) {\n\t\t\t\t// strstart === 0 is possible when wraparound on 16-bit machine\n\t\t\t\tlookahead = (strstart - max_start);\n\t\t\t\tstrstart = max_start;\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\n\t\t\t}\n\n\t\t\t// Flush if we may have to slide, otherwise block_start may become\n\t\t\t// negative and the data will be gone:\n\t\t\tif (strstart - block_start >= w_size - MIN_LOOKAHEAD) {\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0)\n\t\t\treturn (flush == Z_FINISH) ? FinishStarted : NeedMore;\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction longest_match(cur_match) {\n\t\tlet chain_length = max_chain_length; // max hash chain length\n\t\tlet scan = strstart; // current string\n\t\tlet match; // matched string\n\t\tlet len; // length of current match\n\t\tlet best_len = prev_length; // best match length so far\n\t\tconst limit = strstart > (w_size - MIN_LOOKAHEAD) ? strstart - (w_size - MIN_LOOKAHEAD) : 0;\n\t\tlet _nice_match = nice_match;\n\n\t\t// Stop when cur_match becomes <= limit. To simplify the code,\n\t\t// we prevent matches with the string of win index 0.\n\n\t\tconst wmask = w_mask;\n\n\t\tconst strend = strstart + MAX_MATCH;\n\t\tlet scan_end1 = win[scan + best_len - 1];\n\t\tlet scan_end = win[scan + best_len];\n\n\t\t// The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of\n\t\t// 16.\n\t\t// It is easy to get rid of this optimization if necessary.\n\n\t\t// Do not waste too much time if we already have a good match:\n\t\tif (prev_length >= good_match) {\n\t\t\tchain_length >>= 2;\n\t\t}\n\n\t\t// Do not look for matches beyond the end of the input. This is\n\t\t// necessary\n\t\t// to make deflate deterministic.\n\t\tif (_nice_match > lookahead)\n\t\t\t_nice_match = lookahead;\n\n\t\tdo {\n\t\t\tmatch = cur_match;\n\n\t\t\t// Skip to next match if the match length cannot increase\n\t\t\t// or if the match length is less than 2:\n\t\t\tif (win[match + best_len] != scan_end || win[match + best_len - 1] != scan_end1 || win[match] != win[scan]\n\t\t\t\t|| win[++match] != win[scan + 1])\n\t\t\t\tcontinue;\n\n\t\t\t// The check at best_len-1 can be removed because it will be made\n\t\t\t// again later. (This heuristic is not always a win.)\n\t\t\t// It is not necessary to compare scan[2] and match[2] since they\n\t\t\t// are always equal when the other bytes match, given that\n\t\t\t// the hash keys are equal and that HASH_BITS >= 8.\n\t\t\tscan += 2;\n\t\t\tmatch++;\n\n\t\t\t// We check for insufficient lookahead only every 8th comparison;\n\t\t\t// the 256th check will be made at strstart+258.\n\t\t\t// eslint-disable-next-line no-empty\n\t\t\tdo {\n\t\t\t} while (win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && scan < strend);\n\n\t\t\tlen = MAX_MATCH - (strend - scan);\n\t\t\tscan = strend - MAX_MATCH;\n\n\t\t\tif (len > best_len) {\n\t\t\t\tmatch_start = cur_match;\n\t\t\t\tbest_len = len;\n\t\t\t\tif (len >= _nice_match)\n\t\t\t\t\tbreak;\n\t\t\t\tscan_end1 = win[scan + best_len - 1];\n\t\t\t\tscan_end = win[scan + best_len];\n\t\t\t}\n\n\t\t} while ((cur_match = (prev[cur_match & wmask] & 0xffff)) > limit && --chain_length !== 0);\n\n\t\tif (best_len <= lookahead)\n\t\t\treturn best_len;\n\t\treturn lookahead;\n\t}\n\n\t// Compress as much as possible from the input stream, return the current\n\t// block state.\n\t// This function does not perform lazy evaluation of matches and inserts\n\t// new strings in the dictionary only for unmatched strings or for short\n\t// matches. It is used only for the fast compression options.\n\tfunction deflate_fast(flush) {\n\t\t// short hash_head = 0; // head of the hash chain\n\t\tlet hash_head = 0; // head of the hash chain\n\t\tlet bflush; // set if current block must be flushed\n\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\t// At this point we have always match_length < MIN_MATCH\n\n\t\t\tif (hash_head !== 0 && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\t\t\t}\n\t\t\tif (match_length >= MIN_MATCH) {\n\t\t\t\t// check_match(strstart, match_start, match_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - match_start, match_length - MIN_MATCH);\n\n\t\t\t\tlookahead -= match_length;\n\n\t\t\t\t// Insert new strings in the hash table only if the match length\n\t\t\t\t// is not too large. This saves time but degrades compression.\n\t\t\t\tif (match_length <= max_lazy_match && lookahead >= MIN_MATCH) {\n\t\t\t\t\tmatch_length--; // string at strstart already in hash table\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstrstart++;\n\n\t\t\t\t\t\tins_h = ((ins_h << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\n\t\t\t\t\t\t// strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t\t\t\t\t// always MIN_MATCH bytes ahead.\n\t\t\t\t\t} while (--match_length !== 0);\n\t\t\t\t\tstrstart++;\n\t\t\t\t} else {\n\t\t\t\t\tstrstart += match_length;\n\t\t\t\t\tmatch_length = 0;\n\t\t\t\t\tins_h = win[strstart] & 0xff;\n\n\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t\t\t// If lookahead < MIN_MATCH, ins_h is garbage, but it does\n\t\t\t\t\t// not\n\t\t\t\t\t// matter since it will be recomputed at next deflate call.\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No match, output a literal byte\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart] & 0xff);\n\t\t\t\tlookahead--;\n\t\t\t\tstrstart++;\n\t\t\t}\n\t\t\tif (bflush) {\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\t// Same as above, but achieves better compression. We use a lazy\n\t// evaluation for matches: a match is finally adopted only if there is\n\t// no better match at the next win position.\n\tfunction deflate_slow(flush) {\n\t\t// short hash_head = 0; // head of hash chain\n\t\tlet hash_head = 0; // head of hash chain\n\t\tlet bflush; // set if current block must be flushed\n\t\tlet max_insert;\n\n\t\t// Process the input block.\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\tprev_length = match_length;\n\t\t\tprev_match = match_start;\n\t\t\tmatch_length = MIN_MATCH - 1;\n\n\t\t\tif (hash_head !== 0 && prev_length < max_lazy_match && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\n\t\t\t\tif (match_length <= 5 && (strategy == Z_FILTERED || (match_length == MIN_MATCH && strstart - match_start > 4096))) {\n\n\t\t\t\t\t// If prev_match is also MIN_MATCH, match_start is garbage\n\t\t\t\t\t// but we will ignore the current match anyway.\n\t\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there was a match at the previous step and the current\n\t\t\t// match is not better, output the previous match:\n\t\t\tif (prev_length >= MIN_MATCH && match_length <= prev_length) {\n\t\t\t\tmax_insert = strstart + lookahead - MIN_MATCH;\n\t\t\t\t// Do not insert strings in hash table beyond this.\n\n\t\t\t\t// check_match(strstart-1, prev_match, prev_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - 1 - prev_match, prev_length - MIN_MATCH);\n\n\t\t\t\t// Insert in hash table all strings up to the end of the match.\n\t\t\t\t// strstart-1 and strstart are already inserted. If there is not\n\t\t\t\t// enough lookahead, the last two strings are not inserted in\n\t\t\t\t// the hash table.\n\t\t\t\tlookahead -= prev_length - 1;\n\t\t\t\tprev_length -= 2;\n\t\t\t\tdo {\n\t\t\t\t\tif (++strstart <= max_insert) {\n\t\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\t\t\t\t\t}\n\t\t\t\t} while (--prev_length !== 0);\n\t\t\t\tmatch_available = 0;\n\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\tstrstart++;\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t} else if (match_available !== 0) {\n\n\t\t\t\t// If there was no match at the previous position, output a\n\t\t\t\t// single literal. If there was a match but the current match\n\t\t\t\t// is longer, truncate the previous match to a single literal.\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t}\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t} else {\n\t\t\t\t// There is no previous match to compare with, wait for\n\t\t\t\t// the next step to decide.\n\n\t\t\t\tmatch_available = 1;\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t}\n\t\t}\n\n\t\tif (match_available !== 0) {\n\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\t\t\tmatch_available = 0;\n\t\t}\n\t\tflush_block_only(flush == Z_FINISH);\n\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction deflateReset(strm) {\n\t\tstrm.total_in = strm.total_out = 0;\n\t\tstrm.msg = null; //\n\n\t\tthat.pending = 0;\n\t\tthat.pending_out = 0;\n\n\t\tstatus = BUSY_STATE;\n\n\t\tlast_flush = Z_NO_FLUSH;\n\n\t\ttr_init();\n\t\tlm_init();\n\t\treturn Z_OK;\n\t}\n\n\tthat.deflateInit = function (strm, _level, bits, _method, memLevel, _strategy) {\n\t\tif (!_method)\n\t\t\t_method = Z_DEFLATED;\n\t\tif (!memLevel)\n\t\t\tmemLevel = DEF_MEM_LEVEL;\n\t\tif (!_strategy)\n\t\t\t_strategy = Z_DEFAULT_STRATEGY;\n\n\t\t// byte[] my_version=ZLIB_VERSION;\n\n\t\t//\n\t\t// if (!version || version[0] != my_version[0]\n\t\t// || stream_size != sizeof(z_stream)) {\n\t\t// return Z_VERSION_ERROR;\n\t\t// }\n\n\t\tstrm.msg = null;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION)\n\t\t\t_level = 6;\n\n\t\tif (memLevel < 1 || memLevel > MAX_MEM_LEVEL || _method != Z_DEFLATED || bits < 9 || bits > 15 || _level < 0 || _level > 9 || _strategy < 0\n\t\t\t|| _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tstrm.dstate = that;\n\n\t\tw_bits = bits;\n\t\tw_size = 1 << w_bits;\n\t\tw_mask = w_size - 1;\n\n\t\thash_bits = memLevel + 7;\n\t\thash_size = 1 << hash_bits;\n\t\thash_mask = hash_size - 1;\n\t\thash_shift = Math.floor((hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n\t\twin = new Uint8Array(w_size * 2);\n\t\tprev = [];\n\t\thead = [];\n\n\t\tlit_bufsize = 1 << (memLevel + 6); // 16K elements by default\n\n\t\tthat.pending_buf = new Uint8Array(lit_bufsize * 4);\n\t\tpending_buf_size = lit_bufsize * 4;\n\n\t\tthat.dist_buf = new Uint16Array(lit_bufsize);\n\t\tthat.lc_buf = new Uint8Array(lit_bufsize);\n\n\t\tlevel = _level;\n\n\t\tstrategy = _strategy;\n\n\t\treturn deflateReset(strm);\n\t};\n\n\tthat.deflateEnd = function () {\n\t\tif (status != INIT_STATE && status != BUSY_STATE && status != FINISH_STATE) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\t// Deallocate in reverse order of allocations:\n\t\tthat.lc_buf = null;\n\t\tthat.dist_buf = null;\n\t\tthat.pending_buf = null;\n\t\thead = null;\n\t\tprev = null;\n\t\twin = null;\n\t\t// free\n\t\tthat.dstate = null;\n\t\treturn status == BUSY_STATE ? Z_DATA_ERROR : Z_OK;\n\t};\n\n\tthat.deflateParams = function (strm, _level, _strategy) {\n\t\tlet err = Z_OK;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION) {\n\t\t\t_level = 6;\n\t\t}\n\t\tif (_level < 0 || _level > 9 || _strategy < 0 || _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (config_table[level].func != config_table[_level].func && strm.total_in !== 0) {\n\t\t\t// Flush the last buffer:\n\t\t\terr = strm.deflate(Z_PARTIAL_FLUSH);\n\t\t}\n\n\t\tif (level != _level) {\n\t\t\tlevel = _level;\n\t\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\t\tgood_match = config_table[level].good_length;\n\t\t\tnice_match = config_table[level].nice_length;\n\t\t\tmax_chain_length = config_table[level].max_chain;\n\t\t}\n\t\tstrategy = _strategy;\n\t\treturn err;\n\t};\n\n\tthat.deflateSetDictionary = function (strm, dictionary, dictLength) {\n\t\tlet length = dictLength;\n\t\tlet n, index = 0;\n\n\t\tif (!dictionary || status != INIT_STATE)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tif (length < MIN_MATCH)\n\t\t\treturn Z_OK;\n\t\tif (length > w_size - MIN_LOOKAHEAD) {\n\t\t\tlength = w_size - MIN_LOOKAHEAD;\n\t\t\tindex = dictLength - length; // use the tail of the dictionary\n\t\t}\n\t\twin.set(dictionary.subarray(index, index + length), 0);\n\n\t\tstrstart = length;\n\t\tblock_start = length;\n\n\t\t// Insert all strings in the hash table (except for the last two bytes).\n\t\t// s->lookahead stays null, so s->ins_h will be recomputed at the next\n\t\t// call of fill_window.\n\n\t\tins_h = win[0] & 0xff;\n\t\tins_h = (((ins_h) << hash_shift) ^ (win[1] & 0xff)) & hash_mask;\n\n\t\tfor (n = 0; n <= length - MIN_MATCH; n++) {\n\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(n) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\tprev[n & w_mask] = head[ins_h];\n\t\t\thead[ins_h] = n;\n\t\t}\n\t\treturn Z_OK;\n\t};\n\n\tthat.deflate = function (_strm, flush) {\n\t\tlet i, header, level_flags, old_flush, bstate;\n\n\t\tif (flush > Z_FINISH || flush < 0) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (!_strm.next_out || (!_strm.next_in && _strm.avail_in !== 0) || (status == FINISH_STATE && flush != Z_FINISH)) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_STREAM_ERROR)];\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tif (_strm.avail_out === 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\tstrm = _strm; // just in case\n\t\told_flush = last_flush;\n\t\tlast_flush = flush;\n\n\t\t// Write the zlib header\n\t\tif (status == INIT_STATE) {\n\t\t\theader = (Z_DEFLATED + ((w_bits - 8) << 4)) << 8;\n\t\t\tlevel_flags = ((level - 1) & 0xff) >> 1;\n\n\t\t\tif (level_flags > 3)\n\t\t\t\tlevel_flags = 3;\n\t\t\theader |= (level_flags << 6);\n\t\t\tif (strstart !== 0)\n\t\t\t\theader |= PRESET_DICT;\n\t\t\theader += 31 - (header % 31);\n\n\t\t\tstatus = BUSY_STATE;\n\t\t\tputShortMSB(header);\n\t\t}\n\n\t\t// Flush as much pending output as possible\n\t\tif (that.pending !== 0) {\n\t\t\tstrm.flush_pending();\n\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t// console.log(\" avail_out==0\");\n\t\t\t\t// Since avail_out is 0, deflate will be called again with\n\t\t\t\t// more output space, but possibly with both pending and\n\t\t\t\t// avail_in equal to zero. There won't be anything to do,\n\t\t\t\t// but this is not an error situation so make sure we\n\t\t\t\t// return OK instead of BUF_ERROR at next call of deflate:\n\t\t\t\tlast_flush = -1;\n\t\t\t\treturn Z_OK;\n\t\t\t}\n\n\t\t\t// Make sure there is something to do and avoid duplicate\n\t\t\t// consecutive\n\t\t\t// flushes. For repeated and useless calls with Z_FINISH, we keep\n\t\t\t// returning Z_STREAM_END instead of Z_BUFF_ERROR.\n\t\t} else if (strm.avail_in === 0 && flush <= old_flush && flush != Z_FINISH) {\n\t\t\tstrm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// User must not provide more input after the first FINISH:\n\t\tif (status == FINISH_STATE && strm.avail_in !== 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// Start a new block or continue the current one.\n\t\tif (strm.avail_in !== 0 || lookahead !== 0 || (flush != Z_NO_FLUSH && status != FINISH_STATE)) {\n\t\t\tbstate = -1;\n\t\t\tswitch (config_table[level].func) {\n\t\t\t\tcase STORED:\n\t\t\t\t\tbstate = deflate_stored(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FAST:\n\t\t\t\t\tbstate = deflate_fast(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLOW:\n\t\t\t\t\tbstate = deflate_slow(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\n\t\t\tif (bstate == FinishStarted || bstate == FinishDone) {\n\t\t\t\tstatus = FINISH_STATE;\n\t\t\t}\n\t\t\tif (bstate == NeedMore || bstate == FinishStarted) {\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR next call, see above\n\t\t\t\t}\n\t\t\t\treturn Z_OK;\n\t\t\t\t// If flush != Z_NO_FLUSH && avail_out === 0, the next call\n\t\t\t\t// of deflate should use the same flush parameter to make sure\n\t\t\t\t// that the flush is complete. So we don't have to output an\n\t\t\t\t// empty block here, this will be done at next call. This also\n\t\t\t\t// ensures that for a very small output buffer, we emit at most\n\t\t\t\t// one empty block.\n\t\t\t}\n\n\t\t\tif (bstate == BlockDone) {\n\t\t\t\tif (flush == Z_PARTIAL_FLUSH) {\n\t\t\t\t\t_tr_align();\n\t\t\t\t} else { // FULL_FLUSH or SYNC_FLUSH\n\t\t\t\t\t_tr_stored_block(0, 0, false);\n\t\t\t\t\t// For a full flush, this empty block will be recognized\n\t\t\t\t\t// as a special marker by inflate_sync().\n\t\t\t\t\tif (flush == Z_FULL_FLUSH) {\n\t\t\t\t\t\t// state.head[s.hash_size-1]=0;\n\t\t\t\t\t\tfor (i = 0; i < hash_size/*-1*/; i++)\n\t\t\t\t\t\t\t// forget history\n\t\t\t\t\t\t\thead[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstrm.flush_pending();\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR at next call, see above\n\t\t\t\t\treturn Z_OK;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (flush != Z_FINISH)\n\t\t\treturn Z_OK;\n\t\treturn Z_STREAM_END;\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n\tconst that = this;\n\tthat.next_in_index = 0;\n\tthat.next_out_index = 0;\n\t// that.next_in; // next input byte\n\tthat.avail_in = 0; // number of bytes available at next_in\n\tthat.total_in = 0; // total nb of input bytes read so far\n\t// that.next_out; // next output byte should be put there\n\tthat.avail_out = 0; // remaining free space at next_out\n\tthat.total_out = 0; // total nb of bytes output so far\n\t// that.msg;\n\t// that.dstate;\n}\n\nZStream.prototype = {\n\tdeflateInit: function (level, bits) {\n\t\tconst that = this;\n\t\tthat.dstate = new Deflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.dstate.deflateInit(that, level, bits);\n\t},\n\n\tdeflate: function (flush) {\n\t\tconst that = this;\n\t\tif (!that.dstate) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\treturn that.dstate.deflate(that, flush);\n\t},\n\n\tdeflateEnd: function () {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.dstate.deflateEnd();\n\t\tthat.dstate = null;\n\t\treturn ret;\n\t},\n\n\tdeflateParams: function (level, strategy) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateParams(that, level, strategy);\n\t},\n\n\tdeflateSetDictionary: function (dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateSetDictionary(that, dictionary, dictLength);\n\t},\n\n\t// Read a new buffer from the current input stream, update the\n\t// total number of bytes read. All deflate() input goes through\n\t// this function so some applications may wish to modify it to avoid\n\t// allocating a large strm->next_in buffer and copying from it.\n\t// (See also flush_pending()).\n\tread_buf: function (buf, start, size) {\n\t\tconst that = this;\n\t\tlet len = that.avail_in;\n\t\tif (len > size)\n\t\t\tlen = size;\n\t\tif (len === 0)\n\t\t\treturn 0;\n\t\tthat.avail_in -= len;\n\t\tbuf.set(that.next_in.subarray(that.next_in_index, that.next_in_index + len), start);\n\t\tthat.next_in_index += len;\n\t\tthat.total_in += len;\n\t\treturn len;\n\t},\n\n\t// Flush as much pending output as possible. All deflate() output goes\n\t// through this function so some applications may wish to modify it\n\t// to avoid allocating a large strm->next_out buffer and copying into it.\n\t// (See also read_buf()).\n\tflush_pending: function () {\n\t\tconst that = this;\n\t\tlet len = that.dstate.pending;\n\n\t\tif (len > that.avail_out)\n\t\t\tlen = that.avail_out;\n\t\tif (len === 0)\n\t\t\treturn;\n\n\t\t// if (that.dstate.pending_buf.length <= that.dstate.pending_out || that.next_out.length <= that.next_out_index\n\t\t// || that.dstate.pending_buf.length < (that.dstate.pending_out + len) || that.next_out.length < (that.next_out_index +\n\t\t// len)) {\n\t\t// console.log(that.dstate.pending_buf.length + \", \" + that.dstate.pending_out + \", \" + that.next_out.length + \", \" +\n\t\t// that.next_out_index + \", \" + len);\n\t\t// console.log(\"avail_out=\" + that.avail_out);\n\t\t// }\n\n\t\tthat.next_out.set(that.dstate.pending_buf.subarray(that.dstate.pending_out, that.dstate.pending_out + len), that.next_out_index);\n\n\t\tthat.next_out_index += len;\n\t\tthat.dstate.pending_out += len;\n\t\tthat.total_out += len;\n\t\tthat.avail_out -= len;\n\t\tthat.dstate.pending -= len;\n\t\tif (that.dstate.pending === 0) {\n\t\t\tthat.dstate.pending_out = 0;\n\t\t}\n\t}\n};\n\n// Deflate\n\nfunction ZipDeflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = getMaximumCompressedSize(options && options.chunkSize ? options.chunkSize : 64 * 1024);\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet level = options ? options.level : Z_DEFAULT_COMPRESSION;\n\tif (typeof level == \"undefined\")\n\t\tlevel = Z_DEFAULT_COMPRESSION;\n\tz.deflateInit(level);\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tif (!data.length)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(flush);\n\t\t\tif (err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index == bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] || new Uint8Array(0);\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tlet err, array, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(Z_FINISH);\n\t\t\tif (err != Z_STREAM_END && err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (bufsize - z.avail_out > 0)\n\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tz.deflateEnd();\n\t\tarray = new Uint8Array(bufferSize);\n\t\tbuffers.forEach(function (chunk) {\n\t\t\tarray.set(chunk, bufferIndex);\n\t\t\tbufferIndex += chunk.length;\n\t\t});\n\t\treturn array;\n\t};\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nexport default ZipDeflate;","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// Global\nconst MAX_BITS = 15;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_MEM_ERROR = -4;\nconst Z_BUF_ERROR = -5;\n\nconst inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff,\n\t0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nconst MANY = 1440;\n\n// JZlib version : \"1.0.2\"\nconst Z_NO_FLUSH = 0;\nconst Z_FINISH = 4;\n\n// InfTree\nconst fixed_bl = 9;\nconst fixed_bd = 5;\n\nconst fixed_tl = [96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0,\n\t0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40,\n\t0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13,\n\t0, 8, 100, 0, 8, 36, 0, 9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60,\n\t0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7,\n\t35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8,\n\t26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80,\n\t7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0,\n\t8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0,\n\t8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97,\n\t0, 8, 33, 0, 9, 162, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n\t81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117,\n\t0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n\t84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83,\n\t0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n\t80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139,\n\t0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n\t0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111,\n\t0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9,\n\t193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8,\n\t120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8,\n\t227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8,\n\t92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9,\n\t249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8,\n\t130, 0, 8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9,\n\t181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8,\n\t102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9,\n\t221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0,\n\t8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9,\n\t147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8,\n\t85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9,\n\t235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8,\n\t141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9,\n\t167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8,\n\t107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9,\n\t207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8,\n\t127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255];\nconst fixed_td = [80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5,\n\t8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5,\n\t24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577];\n\n// Tables for deflate from PKZIP's appnote.txt.\nconst cplens = [ // Copy lengths for literal codes 257..285\n\t3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\n\n// see note #13 above about 258\nconst cplext = [ // Extra bits for literal codes 257..285\n\t0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n];\n\nconst cpdist = [ // Copy offsets for distance codes 0..29\n\t1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\nconst cpdext = [ // Extra bits for distance codes\n\t0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// If BMAX needs to be larger than 16, then h and x[] should be uLong.\nconst BMAX = 15; // maximum bit length of any code\n\nfunction InfTree() {\n\tconst that = this;\n\n\tlet hn; // hufts used in space\n\tlet v; // work area for huft_build\n\tlet c; // bit length count table\n\tlet r; // table entry for structure assignment\n\tlet u; // table stack\n\tlet x; // bit offsets, then code stack\n\n\tfunction huft_build(b, // code lengths in bits (all assumed <=\n\t\t// BMAX)\n\t\tbindex, n, // number of codes (assumed <= 288)\n\t\ts, // number of simple-valued codes (0..s-1)\n\t\td, // list of base values for non-simple codes\n\t\te, // list of extra bits for non-simple codes\n\t\tt, // result: starting table\n\t\tm, // maximum lookup bits, returns actual\n\t\thp,// space for trees\n\t\thn,// hufts used in space\n\t\tv // working area: values in order of bit length\n\t) {\n\t\t// Given a list of code lengths and a maximum table size, make a set of\n\t\t// tables to decode that set of codes. Return Z_OK on success,\n\t\t// Z_BUF_ERROR\n\t\t// if the given code set is incomplete (the tables are still built in\n\t\t// this\n\t\t// case), Z_DATA_ERROR if the input is invalid (an over-subscribed set\n\t\t// of\n\t\t// lengths), or Z_MEM_ERROR if not enough memory.\n\n\t\tlet a; // counter for codes of length k\n\t\tlet f; // i repeats in table every f entries\n\t\tlet g; // maximum code length\n\t\tlet h; // table level\n\t\tlet i; // counter, current code\n\t\tlet j; // counter\n\t\tlet k; // number of bits in current code\n\t\tlet l; // bits per table (returned in m)\n\t\tlet mask; // (1 << w) - 1, to avoid cc -O bug on HP\n\t\tlet p; // pointer into c[], b[], or v[]\n\t\tlet q; // points to current table\n\t\tlet w; // bits before this table == (l * h)\n\t\tlet xp; // pointer into x\n\t\tlet y; // number of dummy codes added\n\t\tlet z; // number of entries in current table\n\n\t\t// Generate counts for each bit length\n\n\t\tp = 0;\n\t\ti = n;\n\t\tdo {\n\t\t\tc[b[bindex + p]]++;\n\t\t\tp++;\n\t\t\ti--; // assume all entries <= BMAX\n\t\t} while (i !== 0);\n\n\t\tif (c[0] == n) { // null input--all zero length codes\n\t\t\tt[0] = -1;\n\t\t\tm[0] = 0;\n\t\t\treturn Z_OK;\n\t\t}\n\n\t\t// Find minimum and maximum length, bound *m by those\n\t\tl = m[0];\n\t\tfor (j = 1; j <= BMAX; j++)\n\t\t\tif (c[j] !== 0)\n\t\t\t\tbreak;\n\t\tk = j; // minimum code length\n\t\tif (l < j) {\n\t\t\tl = j;\n\t\t}\n\t\tfor (i = BMAX; i !== 0; i--) {\n\t\t\tif (c[i] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\tg = i; // maximum code length\n\t\tif (l > i) {\n\t\t\tl = i;\n\t\t}\n\t\tm[0] = l;\n\n\t\t// Adjust last length count to fill out codes, if needed\n\t\tfor (y = 1 << j; j < i; j++, y <<= 1) {\n\t\t\tif ((y -= c[j]) < 0) {\n\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t}\n\t\t}\n\t\tif ((y -= c[i]) < 0) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tc[i] += y;\n\n\t\t// Generate starting offsets into the value table for each length\n\t\tx[1] = j = 0;\n\t\tp = 1;\n\t\txp = 2;\n\t\twhile (--i !== 0) { // note that i == g from above\n\t\t\tx[xp] = (j += c[p]);\n\t\t\txp++;\n\t\t\tp++;\n\t\t}\n\n\t\t// Make a table of values in order of bit lengths\n\t\ti = 0;\n\t\tp = 0;\n\t\tdo {\n\t\t\tif ((j = b[bindex + p]) !== 0) {\n\t\t\t\tv[x[j]++] = i;\n\t\t\t}\n\t\t\tp++;\n\t\t} while (++i < n);\n\t\tn = x[g]; // set n to length of v\n\n\t\t// Generate the Huffman codes and for each, make the table entries\n\t\tx[0] = i = 0; // first Huffman code is zero\n\t\tp = 0; // grab values in bit order\n\t\th = -1; // no tables yet--level -1\n\t\tw = -l; // bits decoded == (l * h)\n\t\tu[0] = 0; // just to keep compilers happy\n\t\tq = 0; // ditto\n\t\tz = 0; // ditto\n\n\t\t// go through the bit lengths (k already is bits in shortest code)\n\t\tfor (; k <= g; k++) {\n\t\t\ta = c[k];\n\t\t\twhile (a-- !== 0) {\n\t\t\t\t// here i is the Huffman code of length k bits for value *p\n\t\t\t\t// make tables up to required level\n\t\t\t\twhile (k > w + l) {\n\t\t\t\t\th++;\n\t\t\t\t\tw += l; // previous table always l bits\n\t\t\t\t\t// compute minimum size table less than or equal to l bits\n\t\t\t\t\tz = g - w;\n\t\t\t\t\tz = (z > l) ? l : z; // table size upper limit\n\t\t\t\t\tif ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t\t\t\t// too few codes for\n\t\t\t\t\t\t// k-w bit table\n\t\t\t\t\t\tf -= a + 1; // deduct codes from patterns left\n\t\t\t\t\t\txp = k;\n\t\t\t\t\t\tif (j < z) {\n\t\t\t\t\t\t\twhile (++j < z) { // try smaller tables up to z bits\n\t\t\t\t\t\t\t\tif ((f <<= 1) <= c[++xp])\n\t\t\t\t\t\t\t\t\tbreak; // enough codes to use up j bits\n\t\t\t\t\t\t\t\tf -= c[xp]; // else deduct codes from patterns\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tz = 1 << j; // table entries for j-bit table\n\n\t\t\t\t\t// allocate new table\n\t\t\t\t\tif (hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n\t\t\t\t\t\treturn Z_DATA_ERROR; // overflow of MANY\n\t\t\t\t\t}\n\t\t\t\t\tu[h] = q = /* hp+ */hn[0]; // DEBUG\n\t\t\t\t\thn[0] += z;\n\n\t\t\t\t\t// connect to last table, if there is one\n\t\t\t\t\tif (h !== 0) {\n\t\t\t\t\t\tx[h] = i; // save pattern for backing up\n\t\t\t\t\t\tr[0] = /* (byte) */j; // bits in this table\n\t\t\t\t\t\tr[1] = /* (byte) */l; // bits to dump before this table\n\t\t\t\t\t\tj = i >>> (w - l);\n\t\t\t\t\t\tr[2] = /* (int) */(q - u[h - 1] - j); // offset to this table\n\t\t\t\t\t\thp.set(r, (u[h - 1] + j) * 3);\n\t\t\t\t\t\t// to\n\t\t\t\t\t\t// last\n\t\t\t\t\t\t// table\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt[0] = q; // first table is returned result\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set up table entry in r\n\t\t\t\tr[1] = /* (byte) */(k - w);\n\t\t\t\tif (p >= n) {\n\t\t\t\t\tr[0] = 128 + 64; // out of values--invalid code\n\t\t\t\t} else if (v[p] < s) {\n\t\t\t\t\tr[0] = /* (byte) */(v[p] < 256 ? 0 : 32 + 64); // 256 is\n\t\t\t\t\t// end-of-block\n\t\t\t\t\tr[2] = v[p++]; // simple code is just the value\n\t\t\t\t} else {\n\t\t\t\t\tr[0] = /* (byte) */(e[v[p] - s] + 16 + 64); // non-simple--look\n\t\t\t\t\t// up in lists\n\t\t\t\t\tr[2] = d[v[p++] - s];\n\t\t\t\t}\n\n\t\t\t\t// fill code-like entries with r\n\t\t\t\tf = 1 << (k - w);\n\t\t\t\tfor (j = i >>> w; j < z; j += f) {\n\t\t\t\t\thp.set(r, (q + j) * 3);\n\t\t\t\t}\n\n\t\t\t\t// backwards increment the k-bit code i\n\t\t\t\tfor (j = 1 << (k - 1); (i & j) !== 0; j >>>= 1) {\n\t\t\t\t\ti ^= j;\n\t\t\t\t}\n\t\t\t\ti ^= j;\n\n\t\t\t\t// backup over finished tables\n\t\t\t\tmask = (1 << w) - 1; // needed on HP, cc -O bug\n\t\t\t\twhile ((i & mask) != x[h]) {\n\t\t\t\t\th--; // don't need to update q\n\t\t\t\t\tw -= l;\n\t\t\t\t\tmask = (1 << w) - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Return Z_BUF_ERROR if we were given an incomplete table\n\t\treturn y !== 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n\t}\n\n\tfunction initWorkArea(vsize) {\n\t\tlet i;\n\t\tif (!hn) {\n\t\t\thn = []; // []; //new Array(1);\n\t\t\tv = []; // new Array(vsize);\n\t\t\tc = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t\tr = []; // new Array(3);\n\t\t\tu = new Int32Array(BMAX); // new Array(BMAX);\n\t\t\tx = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t}\n\t\tif (v.length < vsize) {\n\t\t\tv = []; // new Array(vsize);\n\t\t}\n\t\tfor (i = 0; i < vsize; i++) {\n\t\t\tv[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < BMAX + 1; i++) {\n\t\t\tc[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\t// for(int i=0; i<BMAX; i++){u[i]=0;}\n\t\tu.set(c.subarray(0, BMAX), 0);\n\t\t// for(int i=0; i<BMAX+1; i++){x[i]=0;}\n\t\tx.set(c.subarray(0, BMAX + 1), 0);\n\t}\n\n\tthat.inflate_trees_bits = function (c, // 19 code lengths\n\t\tbb, // bits tree desired/actual depth\n\t\ttb, // bits tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\t\tinitWorkArea(19);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, 19, 19, null, null, tb, bb, hp, hn, v);\n\n\t\tif (result == Z_DATA_ERROR) {\n\t\t\tz.msg = \"oversubscribed dynamic bit lengths tree\";\n\t\t} else if (result == Z_BUF_ERROR || bb[0] === 0) {\n\t\t\tz.msg = \"incomplete dynamic bit lengths tree\";\n\t\t\tresult = Z_DATA_ERROR;\n\t\t}\n\t\treturn result;\n\t};\n\n\tthat.inflate_trees_dynamic = function (nl, // number of literal/length codes\n\t\tnd, // number of distance codes\n\t\tc, // that many (total) code lengths\n\t\tbl, // literal desired/actual bit depth\n\t\tbd, // distance desired/actual bit depth\n\t\ttl, // literal/length tree result\n\t\ttd, // distance tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\n\t\t// build literal/length tree\n\t\tinitWorkArea(288);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, hn, v);\n\t\tif (result != Z_OK || bl[0] === 0) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed literal/length tree\";\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"incomplete literal/length tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t// build distance tree\n\t\tinitWorkArea(288);\n\t\tresult = huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, hn, v);\n\n\t\tif (result != Z_OK || (bd[0] === 0 && nl > 257)) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed distance tree\";\n\t\t\t} else if (result == Z_BUF_ERROR) {\n\t\t\t\tz.msg = \"incomplete distance tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"empty distance tree with lengths\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn Z_OK;\n\t};\n\n}\n\nInfTree.inflate_trees_fixed = function (bl, // literal desired/actual bit depth\n\tbd, // distance desired/actual bit depth\n\ttl,// literal/length tree result\n\ttd// distance tree result\n) {\n\tbl[0] = fixed_bl;\n\tbd[0] = fixed_bd;\n\ttl[0] = fixed_tl;\n\ttd[0] = fixed_td;\n\treturn Z_OK;\n};\n\n// InfCodes\n\n// waiting for \"i:\"=input,\n// \"o:\"=output,\n// \"x:\"=nothing\nconst START = 0; // x: set up for LEN\nconst LEN = 1; // i: get length/literal/eob next\nconst LENEXT = 2; // i: getting length extra (have base)\nconst DIST = 3; // i: get distance next\nconst DISTEXT = 4;// i: getting distance extra\nconst COPY = 5; // o: copying bytes in win, waiting\n// for space\nconst LIT = 6; // o: got literal, waiting for output\n// space\nconst WASH = 7; // o: got eob, possibly still output\n// waiting\nconst END = 8; // x: got eob and all data flushed\nconst BADCODE = 9;// x: got error\n\nfunction InfCodes() {\n\tconst that = this;\n\n\tlet mode; // current inflate_codes mode\n\n\t// mode dependent information\n\tlet len = 0;\n\n\tlet tree; // pointer into tree\n\tlet tree_index = 0;\n\tlet need = 0; // bits needed\n\n\tlet lit = 0;\n\n\t// if EXT or COPY, where and how much\n\tlet get = 0; // bits to get for extra\n\tlet dist = 0; // distance back to copy from\n\n\tlet lbits = 0; // ltree bits decoded per branch\n\tlet dbits = 0; // dtree bits decoder per branch\n\tlet ltree; // literal/length/eob tree\n\tlet ltree_index = 0; // literal/length/eob tree\n\tlet dtree; // distance tree\n\tlet dtree_index = 0; // distance tree\n\n\t// Called with number of bytes left to write in win at least 258\n\t// (the maximum string length) and number of input bytes available\n\t// at least ten. The ten bytes are six bytes for the longest length/\n\t// distance pair plus four bytes for overloading the bit buffer.\n\n\tfunction inflate_fast(bl, bd, tl, tl_index, td, td_index, s, z) {\n\t\tlet t; // temporary pointer\n\t\tlet tp; // temporary pointer\n\t\tlet tp_index; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet ml; // mask for literal/length tree\n\t\tlet md; // mask for distance tree\n\t\tlet c; // bytes to copy\n\t\tlet d; // distance back to copy from\n\t\tlet r; // copy source pointer\n\n\t\tlet tp_index_t_3; // (tp_index+t)*3\n\n\t\t// load input, output, bit values\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// initialize masks\n\t\tml = inflate_mask[bl];\n\t\tmd = inflate_mask[bd];\n\n\t\t// do until not enough input or output space for fast loop\n\t\tdo { // assume called with m >= 258 && n >= 10\n\t\t\t// get literal/length code\n\t\t\twhile (k < (20)) { // max bits for literal/length code\n\t\t\t\tn--;\n\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\tk += 8;\n\t\t\t}\n\n\t\t\tt = b & ml;\n\t\t\ttp = tl;\n\t\t\ttp_index = tl_index;\n\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\tm--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdo {\n\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\te &= 15;\n\t\t\t\t\tc = tp[tp_index_t_3 + 2] + (/* (int) */b & inflate_mask[e]);\n\n\t\t\t\t\tb >>= e;\n\t\t\t\t\tk -= e;\n\n\t\t\t\t\t// decode distance base of block to copy\n\t\t\t\t\twhile (k < (15)) { // max bits for distance code\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tt = b & md;\n\t\t\t\t\ttp = td;\n\t\t\t\t\ttp_index = td_index;\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\te = tp[tp_index_t_3];\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\t\t\t// get extra bits to add to distance base\n\t\t\t\t\t\t\te &= 15;\n\t\t\t\t\t\t\twhile (k < (e)) { // get extra bits (up to 13)\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\td = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n\t\t\t\t\t\t\tb >>= (e);\n\t\t\t\t\t\t\tk -= (e);\n\n\t\t\t\t\t\t\t// do the copy\n\t\t\t\t\t\t\tm -= c;\n\t\t\t\t\t\t\tif (q >= d) { // offset before dest\n\t\t\t\t\t\t\t\t// just copy\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tif (q - r > 0 && 2 > (q - r)) {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // minimum\n\t\t\t\t\t\t\t\t\t// count is\n\t\t\t\t\t\t\t\t\t// three,\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // so unroll\n\t\t\t\t\t\t\t\t\t// loop a\n\t\t\t\t\t\t\t\t\t// little\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + 2), q);\n\t\t\t\t\t\t\t\t\tq += 2;\n\t\t\t\t\t\t\t\t\tr += 2;\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // else offset after destination\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tr += s.end; // force pointer in win\n\t\t\t\t\t\t\t\t} while (r < 0); // covers invalid distances\n\t\t\t\t\t\t\t\te = s.end - r;\n\t\t\t\t\t\t\t\tif (c > e) { // if source crosses,\n\t\t\t\t\t\t\t\t\tc -= e; // wrapped copy\n\t\t\t\t\t\t\t\t\tif (q - r > 0 && e > (q - r)) {\n\t\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t\t\t} while (--e !== 0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + e), q);\n\t\t\t\t\t\t\t\t\t\tq += e;\n\t\t\t\t\t\t\t\t\t\tr += e;\n\t\t\t\t\t\t\t\t\t\te = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tr = 0; // copy rest from start of win\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy all or what's left\n\t\t\t\t\t\t\tif (q - r > 0 && c > (q - r)) {\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t} while (--c !== 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + c), q);\n\t\t\t\t\t\t\t\tq += c;\n\t\t\t\t\t\t\t\tr += c;\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if ((e & 64) === 0) {\n\t\t\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\t\t\te = tp[tp_index_t_3];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tz.msg = \"invalid distance code\";\n\n\t\t\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\t\t\tn += c;\n\t\t\t\t\t\t\tp -= c;\n\t\t\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\n\t\t\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t} while (true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ((e & 64) === 0) {\n\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if ((e & 32) !== 0) {\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\t} else {\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t} while (true);\n\t\t} while (m >= 258 && n >= 10);\n\n\t\t// not enough input or output--restore pointers and return\n\t\tc = z.avail_in - n;\n\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\tn += c;\n\t\tp -= c;\n\t\tk -= c << 3;\n\n\t\ts.bitb = b;\n\t\ts.bitk = k;\n\t\tz.avail_in = n;\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\ts.write = q;\n\n\t\treturn Z_OK;\n\t}\n\n\tthat.init = function (bl, bd, tl, tl_index, td, td_index) {\n\t\tmode = START;\n\t\tlbits = /* (byte) */bl;\n\t\tdbits = /* (byte) */bd;\n\t\tltree = tl;\n\t\tltree_index = tl_index;\n\t\tdtree = td;\n\t\tdtree_index = td_index;\n\t\ttree = null;\n\t};\n\n\tthat.proc = function (s, z, r) {\n\t\tlet j; // temporary storage\n\t\tlet tindex; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b = 0; // bit buffer\n\t\tlet k = 0; // bits in bit buffer\n\t\tlet p = 0; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet f; // pointer to copy strings from\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// process input and output based on current state\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (mode) {\n\t\t\t\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n\t\t\t\tcase START: // x: set up for LEN\n\t\t\t\t\tif (m >= 258 && n >= 10) {\n\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\tr = inflate_fast(lbits, dbits, ltree, ltree_index, dtree, dtree_index, s, z);\n\n\t\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\t\tb = s.bitb;\n\t\t\t\t\t\tk = s.bitk;\n\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\tif (r != Z_OK) {\n\t\t\t\t\t\t\tmode = r == Z_STREAM_END ? WASH : BADCODE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tneed = lbits;\n\t\t\t\t\ttree = ltree;\n\t\t\t\t\ttree_index = ltree_index;\n\n\t\t\t\t\tmode = LEN;\n\t\t\t\t/* falls through */\n\t\t\t\tcase LEN: // i: get length/literal/eob next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>>= (tree[tindex + 1]);\n\t\t\t\t\tk -= (tree[tindex + 1]);\n\n\t\t\t\t\te = tree[tindex];\n\n\t\t\t\t\tif (e === 0) { // literal\n\t\t\t\t\t\tlit = tree[tindex + 2];\n\t\t\t\t\t\tmode = LIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 16) !== 0) { // length\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tlen = tree[tindex + 2];\n\t\t\t\t\t\tmode = LENEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 32) !== 0) { // end of block\n\t\t\t\t\t\tmode = WASH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase LENEXT: // i: getting length extra (have base)\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tneed = dbits;\n\t\t\t\t\ttree = dtree;\n\t\t\t\t\ttree_index = dtree_index;\n\t\t\t\t\tmode = DIST;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DIST: // i: get distance next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>= tree[tindex + 1];\n\t\t\t\t\tk -= tree[tindex + 1];\n\n\t\t\t\t\te = (tree[tindex]);\n\t\t\t\t\tif ((e & 16) !== 0) { // distance\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tdist = tree[tindex + 2];\n\t\t\t\t\t\tmode = DISTEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid distance code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase DISTEXT: // i: getting distance extra\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tdist += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tmode = COPY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase COPY: // o: copying bytes in win, waiting for space\n\t\t\t\t\tf = q - dist;\n\t\t\t\t\twhile (f < 0) { // modulo win size-\"while\" instead\n\t\t\t\t\t\tf += s.end; // of \"if\" handles invalid distances\n\t\t\t\t\t}\n\t\t\t\t\twhile (len !== 0) {\n\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.win[q++] = s.win[f++];\n\t\t\t\t\t\tm--;\n\n\t\t\t\t\t\tif (f == s.end)\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\tlen--;\n\t\t\t\t\t}\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LIT: // o: got literal, waiting for output space\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\ts.win[q++] = /* (byte) */lit;\n\t\t\t\t\tm--;\n\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase WASH: // o: got eob, possibly more output\n\t\t\t\t\tif (k > 7) { // return unused byte, if any\n\t\t\t\t\t\tk -= 8;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t\tp--; // can always return one\n\t\t\t\t\t}\n\n\t\t\t\t\ts.write = q;\n\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\tq = s.write;\n\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\tif (s.read != s.write) {\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = END;\n\t\t\t\t/* falls through */\n\t\t\t\tcase END:\n\t\t\t\t\tr = Z_STREAM_END;\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase BADCODE: // x: got error\n\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function () {\n\t\t// ZFREE(z, c);\n\t};\n\n}\n\n// InfBlocks\n\n// Table for deflate from PKZIP's appnote.txt.\nconst border = [ // Order of the bit length code lengths\n\t16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nconst TYPE = 0; // get type bits (3, including end bit)\nconst LENS = 1; // get lengths for stored\nconst STORED = 2;// processing stored block\nconst TABLE = 3; // get table lengths\nconst BTREE = 4; // get bit lengths tree for a dynamic\n// block\nconst DTREE = 5; // get length, distance trees for a\n// dynamic block\nconst CODES = 6; // processing fixed or dynamic block\nconst DRY = 7; // output remaining win bytes\nconst DONELOCKS = 8; // finished last block, done\nconst BADBLOCKS = 9; // ot a data error--stuck here\n\nfunction InfBlocks(z, w) {\n\tconst that = this;\n\n\tlet mode = TYPE; // current inflate_block mode\n\n\tlet left = 0; // if STORED, bytes left to copy\n\n\tlet table = 0; // table lengths (14 bits)\n\tlet index = 0; // index into blens (or border)\n\tlet blens; // bit lengths of codes\n\tconst bb = [0]; // bit length tree depth\n\tconst tb = [0]; // bit length decoding tree\n\n\tconst codes = new InfCodes(); // if CODES, current state\n\n\tlet last = 0; // true if this block is the last block\n\n\tlet hufts = new Int32Array(MANY * 3); // single malloc for tree space\n\tconst check = 0; // check on output\n\tconst inftree = new InfTree();\n\n\tthat.bitk = 0; // bits in bit buffer\n\tthat.bitb = 0; // bit buffer\n\tthat.win = new Uint8Array(w); // sliding win\n\tthat.end = w; // one byte after sliding win\n\tthat.read = 0; // win read pointer\n\tthat.write = 0; // win write pointer\n\n\tthat.reset = function (z, c) {\n\t\tif (c)\n\t\t\tc[0] = check;\n\t\t// if (mode == BTREE || mode == DTREE) {\n\t\t// }\n\t\tif (mode == CODES) {\n\t\t\tcodes.free(z);\n\t\t}\n\t\tmode = TYPE;\n\t\tthat.bitk = 0;\n\t\tthat.bitb = 0;\n\t\tthat.read = that.write = 0;\n\t};\n\n\tthat.reset(z, null);\n\n\t// copy as much as possible from the sliding win to the output area\n\tthat.inflate_flush = function (z, r) {\n\t\tlet n;\n\t\tlet p;\n\t\tlet q;\n\n\t\t// local copies of source and destination pointers\n\t\tp = z.next_out_index;\n\t\tq = that.read;\n\n\t\t// compute number of bytes to copy as far as end of win\n\t\tn = /* (int) */((q <= that.write ? that.write : that.end) - q);\n\t\tif (n > z.avail_out)\n\t\t\tn = z.avail_out;\n\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\tr = Z_OK;\n\n\t\t// update counters\n\t\tz.avail_out -= n;\n\t\tz.total_out += n;\n\n\t\t// copy as far as end of win\n\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\tp += n;\n\t\tq += n;\n\n\t\t// see if more to copy at beginning of win\n\t\tif (q == that.end) {\n\t\t\t// wrap pointers\n\t\t\tq = 0;\n\t\t\tif (that.write == that.end)\n\t\t\t\tthat.write = 0;\n\n\t\t\t// compute bytes to copy\n\t\t\tn = that.write - q;\n\t\t\tif (n > z.avail_out)\n\t\t\t\tn = z.avail_out;\n\t\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\t\tr = Z_OK;\n\n\t\t\t// update counters\n\t\t\tz.avail_out -= n;\n\t\t\tz.total_out += n;\n\n\t\t\t// copy\n\t\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\t\tp += n;\n\t\t\tq += n;\n\t\t}\n\n\t\t// update pointers\n\t\tz.next_out_index = p;\n\t\tthat.read = q;\n\n\t\t// done\n\t\treturn r;\n\t};\n\n\tthat.proc = function (z, r) {\n\t\tlet t; // temporary storage\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\n\t\tlet i;\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\t// {\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = that.bitb;\n\t\tk = that.bitk;\n\t\t// }\n\t\t// {\n\t\tq = that.write;\n\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t// }\n\n\t\t// process input based on current state\n\t\t// DEBUG dtree\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tlet bl, bd, tl, td, bl_, bd_, tl_, td_;\n\t\t\tswitch (mode) {\n\t\t\t\tcase TYPE:\n\n\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\t\t\t\t\tt = /* (int) */(b & 7);\n\t\t\t\t\tlast = t & 1;\n\n\t\t\t\t\tswitch (t >>> 1) {\n\t\t\t\t\t\tcase 0: // stored\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tt = k & 7; // go to byte boundary\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = LENS; // get length of stored block\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // fixed\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tbl = []; // new Array(1);\n\t\t\t\t\t\t\tbd = []; // new Array(1);\n\t\t\t\t\t\t\ttl = [[]]; // new Array(1);\n\t\t\t\t\t\t\ttd = [[]]; // new Array(1);\n\n\t\t\t\t\t\t\tInfTree.inflate_trees_fixed(bl, bd, tl, td);\n\t\t\t\t\t\t\tcodes.init(bl[0], bd[0], tl[0], 0, td[0], 0);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = CODES;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // dynamic\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = TABLE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: // illegal\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\tz.msg = \"invalid block type\";\n\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase LENS:\n\n\t\t\t\t\twhile (k < (32)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"invalid stored block lengths\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tleft = (b & 0xffff);\n\t\t\t\t\tb = k = 0; // dump bits\n\t\t\t\t\tmode = left !== 0 ? STORED : (last !== 0 ? DRY : TYPE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase STORED:\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = that.write;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\tt = left;\n\t\t\t\t\tif (t > n)\n\t\t\t\t\t\tt = n;\n\t\t\t\t\tif (t > m)\n\t\t\t\t\t\tt = m;\n\t\t\t\t\tthat.win.set(z.read_buf(p, t), q);\n\t\t\t\t\tp += t;\n\t\t\t\t\tn -= t;\n\t\t\t\t\tq += t;\n\t\t\t\t\tm -= t;\n\t\t\t\t\tif ((left -= t) !== 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tmode = last !== 0 ? DRY : TYPE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TABLE:\n\n\t\t\t\t\twhile (k < (14)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable = t = (b & 0x3fff);\n\t\t\t\t\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"too many length or distance symbols\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\t\t\t\t\tif (!blens || blens.length < t) {\n\t\t\t\t\t\tblens = []; // new Array(t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (i = 0; i < t; i++) {\n\t\t\t\t\t\t\tblens[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// {\n\t\t\t\t\tb >>>= (14);\n\t\t\t\t\tk -= (14);\n\t\t\t\t\t// }\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = BTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase BTREE:\n\t\t\t\t\twhile (index < 4 + (table >>> 10)) {\n\t\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tblens[border[index++]] = b & 7;\n\n\t\t\t\t\t\t// {\n\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (index < 19) {\n\t\t\t\t\t\tblens[border[index++]] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbb[0] = 7;\n\t\t\t\t\tt = inftree.inflate_trees_bits(blens, bb, tb, hufts, z);\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tr = t;\n\t\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = DTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DTREE:\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tt = table;\n\t\t\t\t\t\tif (index >= 258 + (t & 0x1f) + ((t >> 5) & 0x1f)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet j, c;\n\n\t\t\t\t\t\tt = bb[0];\n\n\t\t\t\t\t\twhile (k < (t)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if (tb[0] == -1) {\n\t\t\t\t\t\t// System.err.println(\"null...\");\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tt = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 1];\n\t\t\t\t\t\tc = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n\t\t\t\t\t\tif (c < 16) {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\tblens[index++] = c;\n\t\t\t\t\t\t} else { // c == 16..18\n\t\t\t\t\t\t\ti = c == 18 ? 7 : c - 14;\n\t\t\t\t\t\t\tj = c == 18 ? 11 : 3;\n\n\t\t\t\t\t\t\twhile (k < (t + i)) {\n\t\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\n\t\t\t\t\t\t\tj += (b & inflate_mask[i]);\n\n\t\t\t\t\t\t\tb >>>= (i);\n\t\t\t\t\t\t\tk -= (i);\n\n\t\t\t\t\t\t\ti = index;\n\t\t\t\t\t\t\tt = table;\n\t\t\t\t\t\t\tif (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n\t\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\t\tz.msg = \"invalid bit length repeat\";\n\t\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc = c == 16 ? blens[i - 1] : 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tblens[i++] = c;\n\t\t\t\t\t\t\t} while (--j !== 0);\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttb[0] = -1;\n\t\t\t\t\t// {\n\t\t\t\t\tbl_ = []; // new Array(1);\n\t\t\t\t\tbd_ = []; // new Array(1);\n\t\t\t\t\ttl_ = []; // new Array(1);\n\t\t\t\t\ttd_ = []; // new Array(1);\n\t\t\t\t\tbl_[0] = 9; // must be <= 9 for lookahead assumptions\n\t\t\t\t\tbd_[0] = 6; // must be <= 9 for lookahead assumptions\n\n\t\t\t\t\tt = table;\n\t\t\t\t\tt = inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), blens, bl_, bd_, tl_, td_, hufts, z);\n\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tif (t == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr = t;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tcodes.init(bl_[0], bd_[0], hufts, tl_[0], hufts, td_[0]);\n\t\t\t\t\t// }\n\t\t\t\t\tmode = CODES;\n\t\t\t\t/* falls through */\n\t\t\t\tcase CODES:\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\n\t\t\t\t\tif ((r = codes.proc(that, z, r)) != Z_STREAM_END) {\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\t\t\t\t\tcodes.free(z);\n\n\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\tb = that.bitb;\n\t\t\t\t\tk = that.bitk;\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\n\t\t\t\t\tif (last === 0) {\n\t\t\t\t\t\tmode = TYPE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = DRY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DRY:\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\tif (that.read != that.write) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = DONELOCKS;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONELOCKS:\n\t\t\t\t\tr = Z_STREAM_END;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\tcase BADBLOCKS:\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function (z) {\n\t\tthat.reset(z, null);\n\t\tthat.win = null;\n\t\thufts = null;\n\t\t// ZFREE(z, s);\n\t};\n\n\tthat.set_dictionary = function (d, start, n) {\n\t\tthat.win.set(d.subarray(start, start + n), 0);\n\t\tthat.read = that.write = n;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n\tthat.sync_point = function () {\n\t\treturn mode == LENS ? 1 : 0;\n\t};\n\n}\n\n// Inflate\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst Z_DEFLATED = 8;\n\nconst METHOD = 0; // waiting for method byte\nconst FLAG = 1; // waiting for flag byte\nconst DICT4 = 2; // four dictionary check bytes to go\nconst DICT3 = 3; // three dictionary check bytes to go\nconst DICT2 = 4; // two dictionary check bytes to go\nconst DICT1 = 5; // one dictionary check byte to go\nconst DICT0 = 6; // waiting for inflateSetDictionary\nconst BLOCKS = 7; // decompressing blocks\nconst DONE = 12; // finished check, done\nconst BAD = 13; // got an error--stay here\n\nconst mark = [0, 0, 0xff, 0xff];\n\nfunction Inflate() {\n\tconst that = this;\n\n\tthat.mode = 0; // current inflate mode\n\n\t// mode dependent information\n\tthat.method = 0; // if FLAGS, method byte\n\n\t// if CHECK, check values to compare\n\tthat.was = [0]; // new Array(1); // computed check value\n\tthat.need = 0; // stream check value\n\n\t// if BAD, inflateSync's marker bytes count\n\tthat.marker = 0;\n\n\t// mode independent information\n\tthat.wbits = 0; // log2(win size) (8..15, defaults to 15)\n\n\t// this.blocks; // current inflate_blocks state\n\n\tfunction inflateReset(z) {\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tz.total_in = z.total_out = 0;\n\t\tz.msg = null;\n\t\tz.istate.mode = BLOCKS;\n\t\tz.istate.blocks.reset(z, null);\n\t\treturn Z_OK;\n\t}\n\n\tthat.inflateEnd = function (z) {\n\t\tif (that.blocks)\n\t\t\tthat.blocks.free(z);\n\t\tthat.blocks = null;\n\t\t// ZFREE(z, z->state);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateInit = function (z, w) {\n\t\tz.msg = null;\n\t\tthat.blocks = null;\n\n\t\t// set win size\n\t\tif (w < 8 || w > 15) {\n\t\t\tthat.inflateEnd(z);\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tthat.wbits = w;\n\n\t\tz.istate.blocks = new InfBlocks(z, 1 << w);\n\n\t\t// reset state\n\t\tinflateReset(z);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflate = function (z, f) {\n\t\tlet r;\n\t\tlet b;\n\n\t\tif (!z || !z.istate || !z.next_in)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tf = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n\t\tr = Z_BUF_ERROR;\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (istate.mode) {\n\t\t\t\tcase METHOD:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tif (((istate.method = z.read_byte(z.next_in_index++)) & 0xf) != Z_DEFLATED) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"unknown compression method\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((istate.method >> 4) + 8 > istate.wbits) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"invalid win size\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = FLAG;\n\t\t\t\t/* falls through */\n\t\t\t\tcase FLAG:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tb = (z.read_byte(z.next_in_index++)) & 0xff;\n\n\t\t\t\t\tif ((((istate.method << 8) + b) % 31) !== 0) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"incorrect header check\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((b & PRESET_DICT) === 0) {\n\t\t\t\t\t\tistate.mode = BLOCKS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = DICT4;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT4:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need = ((z.read_byte(z.next_in_index++) & 0xff) << 24) & 0xff000000;\n\t\t\t\t\tistate.mode = DICT3;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT3:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 16) & 0xff0000;\n\t\t\t\t\tistate.mode = DICT2;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT2:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 8) & 0xff00;\n\t\t\t\t\tistate.mode = DICT1;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT1:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += (z.read_byte(z.next_in_index++) & 0xff);\n\t\t\t\t\tistate.mode = DICT0;\n\t\t\t\t\treturn Z_NEED_DICT;\n\t\t\t\tcase DICT0:\n\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\tz.msg = \"need dictionary\";\n\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t\tcase BLOCKS:\n\n\t\t\t\t\tr = istate.blocks.proc(z, r);\n\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (r == Z_OK) {\n\t\t\t\t\t\tr = f;\n\t\t\t\t\t}\n\t\t\t\t\tif (r != Z_STREAM_END) {\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t\tr = f;\n\t\t\t\t\tistate.blocks.reset(z, istate.was);\n\t\t\t\t\tistate.mode = DONE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONE:\n\t\t\t\t\tz.avail_in = 0;\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\tcase BAD:\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\tdefault:\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.inflateSetDictionary = function (z, dictionary, dictLength) {\n\t\tlet index = 0, length = dictLength;\n\t\tif (!z || !z.istate || z.istate.mode != DICT0)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (length >= (1 << istate.wbits)) {\n\t\t\tlength = (1 << istate.wbits) - 1;\n\t\t\tindex = dictLength - length;\n\t\t}\n\t\tistate.blocks.set_dictionary(dictionary, index, length);\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateSync = function (z) {\n\t\tlet n; // number of bytes to look at\n\t\tlet p; // pointer to bytes\n\t\tlet m; // number of marker bytes found in a row\n\t\tlet r, w; // temporaries to save total_in and total_out\n\n\t\t// set up\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (istate.mode != BAD) {\n\t\t\tistate.mode = BAD;\n\t\t\tistate.marker = 0;\n\t\t}\n\t\tif ((n = z.avail_in) === 0)\n\t\t\treturn Z_BUF_ERROR;\n\t\tp = z.next_in_index;\n\t\tm = istate.marker;\n\n\t\t// search\n\t\twhile (n !== 0 && m < 4) {\n\t\t\tif (z.read_byte(p) == mark[m]) {\n\t\t\t\tm++;\n\t\t\t} else if (z.read_byte(p) !== 0) {\n\t\t\t\tm = 0;\n\t\t\t} else {\n\t\t\t\tm = 4 - m;\n\t\t\t}\n\t\t\tp++;\n\t\t\tn--;\n\t\t}\n\n\t\t// restore\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\tz.avail_in = n;\n\t\tistate.marker = m;\n\n\t\t// return no joy or set up to restart on a new block\n\t\tif (m != 4) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tr = z.total_in;\n\t\tw = z.total_out;\n\t\tinflateReset(z);\n\t\tz.total_in = r;\n\t\tz.total_out = w;\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n\t// implementation to provide an additional safety check. PPP uses\n\t// Z_SYNC_FLUSH\n\t// but removes the length bytes of the resulting empty stored block. When\n\t// decompressing, PPP checks that at the end of input packet, inflate is\n\t// waiting for these length bytes.\n\tthat.inflateSyncPoint = function (z) {\n\t\tif (!z || !z.istate || !z.istate.blocks)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn z.istate.blocks.sync_point();\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n}\n\nZStream.prototype = {\n\tinflateInit: function (bits) {\n\t\tconst that = this;\n\t\tthat.istate = new Inflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.istate.inflateInit(that, bits);\n\t},\n\n\tinflate: function (f) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflate(that, f);\n\t},\n\n\tinflateEnd: function () {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.istate.inflateEnd(that);\n\t\tthat.istate = null;\n\t\treturn ret;\n\t},\n\n\tinflateSync: function () {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSync(that);\n\t},\n\tinflateSetDictionary: function (dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSetDictionary(that, dictionary, dictLength);\n\t},\n\tread_byte: function (start) {\n\t\tconst that = this;\n\t\treturn that.next_in[start];\n\t},\n\tread_buf: function (start, size) {\n\t\tconst that = this;\n\t\treturn that.next_in.subarray(start, start + size);\n\t}\n};\n\n// Inflater\n\nfunction ZipInflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = options && options.chunkSize ? Math.floor(options.chunkSize * 2) : 128 * 1024;\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet nomoreinput = false;\n\n\tz.inflateInit();\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tconst buffers = [];\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\tif ((z.avail_in === 0) && (!nomoreinput)) { // if buffer is empty and more input is available, refill it\n\t\t\t\tz.next_in_index = 0;\n\t\t\t\tnomoreinput = true;\n\t\t\t}\n\t\t\terr = z.inflate(flush);\n\t\t\tif (nomoreinput && (err === Z_BUF_ERROR)) {\n\t\t\t\tif (z.avail_in !== 0)\n\t\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\t} else if (err !== Z_OK && err !== Z_STREAM_END)\n\t\t\t\tthrow new Error(\"inflating: \" + z.msg);\n\t\t\tif ((nomoreinput || err === Z_STREAM_END) && (z.avail_in === data.length))\n\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index === bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] || new Uint8Array(0);\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tz.inflateEnd();\n\t};\n}\n\nexport default ZipInflate;","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator */\n\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers: (typeof navigator != \"undefined\" && navigator.hardwareConcurrency) || 2,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tworkerScripts: undefined\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction configure(configuration) {\n\tif (configuration.baseURL !== undefined) {\n\t\tconfig.baseURL = configuration.baseURL;\n\t}\n\tif (configuration.chunkSize !== undefined) {\n\t\tconfig.chunkSize = configuration.chunkSize;\n\t}\n\tif (configuration.maxWorkers !== undefined) {\n\t\tconfig.maxWorkers = configuration.maxWorkers;\n\t}\n\tif (configuration.terminateWorkerTimeout !== undefined) {\n\t\tconfig.terminateWorkerTimeout = configuration.terminateWorkerTimeout;\n\t}\n\tif (configuration.useWebWorkers !== undefined) {\n\t\tconfig.useWebWorkers = configuration.useWebWorkers;\n\t}\n\tif (configuration.Deflate !== undefined) {\n\t\tconfig.Deflate = configuration.Deflate;\n\t}\n\tif (configuration.Inflate !== undefined) {\n\t\tconfig.Inflate = configuration.Inflate;\n\t}\n\tif (configuration.workerScripts !== undefined) {\n\t\tif (configuration.workerScripts.deflate) {\n\t\t\tif (!Array.isArray(configuration.workerScripts.deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = configuration.workerScripts.deflate;\n\t\t}\n\t\tif (configuration.workerScripts.inflate) {\n\t\t\tif (!Array.isArray(configuration.workerScripts.inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = configuration.workerScripts.inflate;\n\t\t}\n\t}\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = {\n\t\"application\": {\n\t\t\"andrew-inset\": \"ez\",\n\t\t\"annodex\": \"anx\",\n\t\t\"atom+xml\": \"atom\",\n\t\t\"atomcat+xml\": \"atomcat\",\n\t\t\"atomserv+xml\": \"atomsrv\",\n\t\t\"bbolin\": \"lin\",\n\t\t\"cap\": [\"cap\", \"pcap\"],\n\t\t\"cu-seeme\": \"cu\",\n\t\t\"davmount+xml\": \"davmount\",\n\t\t\"dsptype\": \"tsp\",\n\t\t\"ecmascript\": [\"es\", \"ecma\"],\n\t\t\"futuresplash\": \"spl\",\n\t\t\"hta\": \"hta\",\n\t\t\"java-archive\": \"jar\",\n\t\t\"java-serialized-object\": \"ser\",\n\t\t\"java-vm\": \"class\",\n\t\t\"javascript\": \"js\",\n\t\t\"m3g\": \"m3g\",\n\t\t\"mac-binhex40\": \"hqx\",\n\t\t\"mathematica\": [\"nb\", \"ma\", \"mb\"],\n\t\t\"msaccess\": \"mdb\",\n\t\t\"msword\": [\"doc\", \"dot\"],\n\t\t\"mxf\": \"mxf\",\n\t\t\"oda\": \"oda\",\n\t\t\"ogg\": \"ogx\",\n\t\t\"pdf\": \"pdf\",\n\t\t\"pgp-keys\": \"key\",\n\t\t\"pgp-signature\": [\"asc\", \"sig\"],\n\t\t\"pics-rules\": \"prf\",\n\t\t\"postscript\": [\"ps\", \"ai\", \"eps\", \"epsi\", \"epsf\", \"eps2\", \"eps3\"],\n\t\t\"rar\": \"rar\",\n\t\t\"rdf+xml\": \"rdf\",\n\t\t\"rss+xml\": \"rss\",\n\t\t\"rtf\": \"rtf\",\n\t\t\"smil\": [\"smi\", \"smil\"],\n\t\t\"xhtml+xml\": [\"xhtml\", \"xht\"],\n\t\t\"xml\": [\"xml\", \"xsl\", \"xsd\"],\n\t\t\"xspf+xml\": \"xspf\",\n\t\t\"zip\": \"zip\",\n\t\t\"vnd.android.package-archive\": \"apk\",\n\t\t\"vnd.cinderella\": \"cdy\",\n\t\t\"vnd.google-earth.kml+xml\": \"kml\",\n\t\t\"vnd.google-earth.kmz\": \"kmz\",\n\t\t\"vnd.mozilla.xul+xml\": \"xul\",\n\t\t\"vnd.ms-excel\": [\"xls\", \"xlb\", \"xlt\", \"xlm\", \"xla\", \"xlc\", \"xlw\"],\n\t\t\"vnd.ms-pki.seccat\": \"cat\",\n\t\t\"vnd.ms-pki.stl\": \"stl\",\n\t\t\"vnd.ms-powerpoint\": [\"ppt\", \"pps\", \"pot\"],\n\t\t\"vnd.oasis.opendocument.chart\": \"odc\",\n\t\t\"vnd.oasis.opendocument.database\": \"odb\",\n\t\t\"vnd.oasis.opendocument.formula\": \"odf\",\n\t\t\"vnd.oasis.opendocument.graphics\": \"odg\",\n\t\t\"vnd.oasis.opendocument.graphics-template\": \"otg\",\n\t\t\"vnd.oasis.opendocument.image\": \"odi\",\n\t\t\"vnd.oasis.opendocument.presentation\": \"odp\",\n\t\t\"vnd.oasis.opendocument.presentation-template\": \"otp\",\n\t\t\"vnd.oasis.opendocument.spreadsheet\": \"ods\",\n\t\t\"vnd.oasis.opendocument.spreadsheet-template\": \"ots\",\n\t\t\"vnd.oasis.opendocument.text\": \"odt\",\n\t\t\"vnd.oasis.opendocument.text-master\": \"odm\",\n\t\t\"vnd.oasis.opendocument.text-template\": \"ott\",\n\t\t\"vnd.oasis.opendocument.text-web\": \"oth\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.sheet\": \"xlsx\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.template\": \"xltx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.presentation\": \"pptx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slideshow\": \"ppsx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.template\": \"potx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.document\": \"docx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.template\": \"dotx\",\n\t\t\"vnd.smaf\": \"mmf\",\n\t\t\"vnd.stardivision.calc\": \"sdc\",\n\t\t\"vnd.stardivision.chart\": \"sds\",\n\t\t\"vnd.stardivision.draw\": \"sda\",\n\t\t\"vnd.stardivision.impress\": \"sdd\",\n\t\t\"vnd.stardivision.math\": [\"sdf\", \"smf\"],\n\t\t\"vnd.stardivision.writer\": [\"sdw\", \"vor\"],\n\t\t\"vnd.stardivision.writer-global\": \"sgl\",\n\t\t\"vnd.sun.xml.calc\": \"sxc\",\n\t\t\"vnd.sun.xml.calc.template\": \"stc\",\n\t\t\"vnd.sun.xml.draw\": \"sxd\",\n\t\t\"vnd.sun.xml.draw.template\": \"std\",\n\t\t\"vnd.sun.xml.impress\": \"sxi\",\n\t\t\"vnd.sun.xml.impress.template\": \"sti\",\n\t\t\"vnd.sun.xml.math\": \"sxm\",\n\t\t\"vnd.sun.xml.writer\": \"sxw\",\n\t\t\"vnd.sun.xml.writer.global\": \"sxg\",\n\t\t\"vnd.sun.xml.writer.template\": \"stw\",\n\t\t\"vnd.symbian.install\": [\"sis\", \"sisx\"],\n\t\t\"vnd.visio\": [\"vsd\", \"vst\", \"vss\", \"vsw\"],\n\t\t\"vnd.wap.wbxml\": \"wbxml\",\n\t\t\"vnd.wap.wmlc\": \"wmlc\",\n\t\t\"vnd.wap.wmlscriptc\": \"wmlsc\",\n\t\t\"vnd.wordperfect\": \"wpd\",\n\t\t\"vnd.wordperfect5.1\": \"wp5\",\n\t\t\"x-123\": \"wk\",\n\t\t\"x-7z-compressed\": \"7z\",\n\t\t\"x-abiword\": \"abw\",\n\t\t\"x-apple-diskimage\": \"dmg\",\n\t\t\"x-bcpio\": \"bcpio\",\n\t\t\"x-bittorrent\": \"torrent\",\n\t\t\"x-cbr\": [\"cbr\", \"cba\", \"cbt\", \"cb7\"],\n\t\t\"x-cbz\": \"cbz\",\n\t\t\"x-cdf\": [\"cdf\", \"cda\"],\n\t\t\"x-cdlink\": \"vcd\",\n\t\t\"x-chess-pgn\": \"pgn\",\n\t\t\"x-cpio\": \"cpio\",\n\t\t\"x-csh\": \"csh\",\n\t\t\"x-debian-package\": [\"deb\", \"udeb\"],\n\t\t\"x-director\": [\"dcr\", \"dir\", \"dxr\", \"cst\", \"cct\", \"cxt\", \"w3d\", \"fgd\", \"swa\"],\n\t\t\"x-dms\": \"dms\",\n\t\t\"x-doom\": \"wad\",\n\t\t\"x-dvi\": \"dvi\",\n\t\t\"x-httpd-eruby\": \"rhtml\",\n\t\t\"x-font\": \"pcf.Z\",\n\t\t\"x-freemind\": \"mm\",\n\t\t\"x-gnumeric\": \"gnumeric\",\n\t\t\"x-go-sgf\": \"sgf\",\n\t\t\"x-graphing-calculator\": \"gcf\",\n\t\t\"x-gtar\": [\"gtar\", \"taz\"],\n\t\t\"x-hdf\": \"hdf\",\n\t\t\"x-httpd-php\": [\"phtml\", \"pht\", \"php\"],\n\t\t\"x-httpd-php-source\": \"phps\",\n\t\t\"x-httpd-php3\": \"php3\",\n\t\t\"x-httpd-php3-preprocessed\": \"php3p\",\n\t\t\"x-httpd-php4\": \"php4\",\n\t\t\"x-httpd-php5\": \"php5\",\n\t\t\"x-ica\": \"ica\",\n\t\t\"x-info\": \"info\",\n\t\t\"x-internet-signup\": [\"ins\", \"isp\"],\n\t\t\"x-iphone\": \"iii\",\n\t\t\"x-iso9660-image\": \"iso\",\n\t\t\"x-java-jnlp-file\": \"jnlp\",\n\t\t\"x-jmol\": \"jmz\",\n\t\t\"x-killustrator\": \"kil\",\n\t\t\"x-koan\": [\"skp\", \"skd\", \"skt\", \"skm\"],\n\t\t\"x-kpresenter\": [\"kpr\", \"kpt\"],\n\t\t\"x-kword\": [\"kwd\", \"kwt\"],\n\t\t\"x-latex\": \"latex\",\n\t\t\"x-lha\": \"lha\",\n\t\t\"x-lyx\": \"lyx\",\n\t\t\"x-lzh\": \"lzh\",\n\t\t\"x-lzx\": \"lzx\",\n\t\t\"x-maker\": [\"frm\", \"maker\", \"frame\", \"fm\", \"fb\", \"book\", \"fbdoc\"],\n\t\t\"x-ms-wmd\": \"wmd\",\n\t\t\"x-ms-wmz\": \"wmz\",\n\t\t\"x-msdos-program\": [\"com\", \"exe\", \"bat\", \"dll\"],\n\t\t\"x-msi\": \"msi\",\n\t\t\"x-netcdf\": [\"nc\", \"cdf\"],\n\t\t\"x-ns-proxy-autoconfig\": [\"pac\", \"dat\"],\n\t\t\"x-nwc\": \"nwc\",\n\t\t\"x-object\": \"o\",\n\t\t\"x-oz-application\": \"oza\",\n\t\t\"x-pkcs7-certreqresp\": \"p7r\",\n\t\t\"x-python-code\": [\"pyc\", \"pyo\"],\n\t\t\"x-qgis\": [\"qgs\", \"shp\", \"shx\"],\n\t\t\"x-quicktimeplayer\": \"qtl\",\n\t\t\"x-redhat-package-manager\": \"rpm\",\n\t\t\"x-ruby\": \"rb\",\n\t\t\"x-sh\": \"sh\",\n\t\t\"x-shar\": \"shar\",\n\t\t\"x-shockwave-flash\": [\"swf\", \"swfl\"],\n\t\t\"x-silverlight\": \"scr\",\n\t\t\"x-stuffit\": \"sit\",\n\t\t\"x-sv4cpio\": \"sv4cpio\",\n\t\t\"x-sv4crc\": \"sv4crc\",\n\t\t\"x-tar\": \"tar\",\n\t\t\"x-tcl\": \"tcl\",\n\t\t\"x-tex-gf\": \"gf\",\n\t\t\"x-tex-pk\": \"pk\",\n\t\t\"x-texinfo\": [\"texinfo\", \"texi\"],\n\t\t\"x-trash\": [\"~\", \"%\", \"bak\", \"old\", \"sik\"],\n\t\t\"x-troff\": [\"t\", \"tr\", \"roff\"],\n\t\t\"x-troff-man\": \"man\",\n\t\t\"x-troff-me\": \"me\",\n\t\t\"x-troff-ms\": \"ms\",\n\t\t\"x-ustar\": \"ustar\",\n\t\t\"x-wais-source\": \"src\",\n\t\t\"x-wingz\": \"wz\",\n\t\t\"x-x509-ca-cert\": [\"crt\", \"der\", \"cer\"],\n\t\t\"x-xcf\": \"xcf\",\n\t\t\"x-xfig\": \"fig\",\n\t\t\"x-xpinstall\": \"xpi\",\n\t\t\"applixware\": \"aw\",\n\t\t\"atomsvc+xml\": \"atomsvc\",\n\t\t\"ccxml+xml\": \"ccxml\",\n\t\t\"cdmi-capability\": \"cdmia\",\n\t\t\"cdmi-container\": \"cdmic\",\n\t\t\"cdmi-domain\": \"cdmid\",\n\t\t\"cdmi-object\": \"cdmio\",\n\t\t\"cdmi-queue\": \"cdmiq\",\n\t\t\"docbook+xml\": \"dbk\",\n\t\t\"dssc+der\": \"dssc\",\n\t\t\"dssc+xml\": \"xdssc\",\n\t\t\"emma+xml\": \"emma\",\n\t\t\"epub+zip\": \"epub\",\n\t\t\"exi\": \"exi\",\n\t\t\"font-tdpfr\": \"pfr\",\n\t\t\"gml+xml\": \"gml\",\n\t\t\"gpx+xml\": \"gpx\",\n\t\t\"gxf\": \"gxf\",\n\t\t\"hyperstudio\": \"stk\",\n\t\t\"inkml+xml\": [\"ink\", \"inkml\"],\n\t\t\"ipfix\": \"ipfix\",\n\t\t\"json\": \"json\",\n\t\t\"jsonml+json\": \"jsonml\",\n\t\t\"lost+xml\": \"lostxml\",\n\t\t\"mads+xml\": \"mads\",\n\t\t\"marc\": \"mrc\",\n\t\t\"marcxml+xml\": \"mrcx\",\n\t\t\"mathml+xml\": \"mathml\",\n\t\t\"mbox\": \"mbox\",\n\t\t\"mediaservercontrol+xml\": \"mscml\",\n\t\t\"metalink+xml\": \"metalink\",\n\t\t\"metalink4+xml\": \"meta4\",\n\t\t\"mets+xml\": \"mets\",\n\t\t\"mods+xml\": \"mods\",\n\t\t\"mp21\": [\"m21\", \"mp21\"],\n\t\t\"mp4\": \"mp4s\",\n\t\t\"oebps-package+xml\": \"opf\",\n\t\t\"omdoc+xml\": \"omdoc\",\n\t\t\"onenote\": [\"onetoc\", \"onetoc2\", \"onetmp\", \"onepkg\"],\n\t\t\"oxps\": \"oxps\",\n\t\t\"patch-ops-error+xml\": \"xer\",\n\t\t\"pgp-encrypted\": \"pgp\",\n\t\t\"pkcs10\": \"p10\",\n\t\t\"pkcs7-mime\": [\"p7m\", \"p7c\"],\n\t\t\"pkcs7-signature\": \"p7s\",\n\t\t\"pkcs8\": \"p8\",\n\t\t\"pkix-attr-cert\": \"ac\",\n\t\t\"pkix-crl\": \"crl\",\n\t\t\"pkix-pkipath\": \"pkipath\",\n\t\t\"pkixcmp\": \"pki\",\n\t\t\"pls+xml\": \"pls\",\n\t\t\"prs.cww\": \"cww\",\n\t\t\"pskc+xml\": \"pskcxml\",\n\t\t\"reginfo+xml\": \"rif\",\n\t\t\"relax-ng-compact-syntax\": \"rnc\",\n\t\t\"resource-lists+xml\": \"rl\",\n\t\t\"resource-lists-diff+xml\": \"rld\",\n\t\t\"rls-services+xml\": \"rs\",\n\t\t\"rpki-ghostbusters\": \"gbr\",\n\t\t\"rpki-manifest\": \"mft\",\n\t\t\"rpki-roa\": \"roa\",\n\t\t\"rsd+xml\": \"rsd\",\n\t\t\"sbml+xml\": \"sbml\",\n\t\t\"scvp-cv-request\": \"scq\",\n\t\t\"scvp-cv-response\": \"scs\",\n\t\t\"scvp-vp-request\": \"spq\",\n\t\t\"scvp-vp-response\": \"spp\",\n\t\t\"sdp\": \"sdp\",\n\t\t\"set-payment-initiation\": \"setpay\",\n\t\t\"set-registration-initiation\": \"setreg\",\n\t\t\"shf+xml\": \"shf\",\n\t\t\"sparql-query\": \"rq\",\n\t\t\"sparql-results+xml\": \"srx\",\n\t\t\"srgs\": \"gram\",\n\t\t\"srgs+xml\": \"grxml\",\n\t\t\"sru+xml\": \"sru\",\n\t\t\"ssdl+xml\": \"ssdl\",\n\t\t\"ssml+xml\": \"ssml\",\n\t\t\"tei+xml\": [\"tei\", \"teicorpus\"],\n\t\t\"thraud+xml\": \"tfi\",\n\t\t\"timestamped-data\": \"tsd\",\n\t\t\"vnd.3gpp.pic-bw-large\": \"plb\",\n\t\t\"vnd.3gpp.pic-bw-small\": \"psb\",\n\t\t\"vnd.3gpp.pic-bw-var\": \"pvb\",\n\t\t\"vnd.3gpp2.tcap\": \"tcap\",\n\t\t\"vnd.3m.post-it-notes\": \"pwn\",\n\t\t\"vnd.accpac.simply.aso\": \"aso\",\n\t\t\"vnd.accpac.simply.imp\": \"imp\",\n\t\t\"vnd.acucobol\": \"acu\",\n\t\t\"vnd.acucorp\": [\"atc\", \"acutc\"],\n\t\t\"vnd.adobe.air-application-installer-package+zip\": \"air\",\n\t\t\"vnd.adobe.formscentral.fcdt\": \"fcdt\",\n\t\t\"vnd.adobe.fxp\": [\"fxp\", \"fxpl\"],\n\t\t\"vnd.adobe.xdp+xml\": \"xdp\",\n\t\t\"vnd.adobe.xfdf\": \"xfdf\",\n\t\t\"vnd.ahead.space\": \"ahead\",\n\t\t\"vnd.airzip.filesecure.azf\": \"azf\",\n\t\t\"vnd.airzip.filesecure.azs\": \"azs\",\n\t\t\"vnd.amazon.ebook\": \"azw\",\n\t\t\"vnd.americandynamics.acc\": \"acc\",\n\t\t\"vnd.amiga.ami\": \"ami\",\n\t\t\"vnd.anser-web-certificate-issue-initiation\": \"cii\",\n\t\t\"vnd.anser-web-funds-transfer-initiation\": \"fti\",\n\t\t\"vnd.antix.game-component\": \"atx\",\n\t\t\"vnd.apple.installer+xml\": \"mpkg\",\n\t\t\"vnd.apple.mpegurl\": \"m3u8\",\n\t\t\"vnd.aristanetworks.swi\": \"swi\",\n\t\t\"vnd.astraea-software.iota\": \"iota\",\n\t\t\"vnd.audiograph\": \"aep\",\n\t\t\"vnd.blueice.multipass\": \"mpm\",\n\t\t\"vnd.bmi\": \"bmi\",\n\t\t\"vnd.businessobjects\": \"rep\",\n\t\t\"vnd.chemdraw+xml\": \"cdxml\",\n\t\t\"vnd.chipnuts.karaoke-mmd\": \"mmd\",\n\t\t\"vnd.claymore\": \"cla\",\n\t\t\"vnd.cloanto.rp9\": \"rp9\",\n\t\t\"vnd.clonk.c4group\": [\"c4g\", \"c4d\", \"c4f\", \"c4p\", \"c4u\"],\n\t\t\"vnd.cluetrust.cartomobile-config\": \"c11amc\",\n\t\t\"vnd.cluetrust.cartomobile-config-pkg\": \"c11amz\",\n\t\t\"vnd.commonspace\": \"csp\",\n\t\t\"vnd.contact.cmsg\": \"cdbcmsg\",\n\t\t\"vnd.cosmocaller\": \"cmc\",\n\t\t\"vnd.crick.clicker\": \"clkx\",\n\t\t\"vnd.crick.clicker.keyboard\": \"clkk\",\n\t\t\"vnd.crick.clicker.palette\": \"clkp\",\n\t\t\"vnd.crick.clicker.template\": \"clkt\",\n\t\t\"vnd.crick.clicker.wordbank\": \"clkw\",\n\t\t\"vnd.criticaltools.wbs+xml\": \"wbs\",\n\t\t\"vnd.ctc-posml\": \"pml\",\n\t\t\"vnd.cups-ppd\": \"ppd\",\n\t\t\"vnd.curl.car\": \"car\",\n\t\t\"vnd.curl.pcurl\": \"pcurl\",\n\t\t\"vnd.dart\": \"dart\",\n\t\t\"vnd.data-vision.rdz\": \"rdz\",\n\t\t\"vnd.dece.data\": [\"uvf\", \"uvvf\", \"uvd\", \"uvvd\"],\n\t\t\"vnd.dece.ttml+xml\": [\"uvt\", \"uvvt\"],\n\t\t\"vnd.dece.unspecified\": [\"uvx\", \"uvvx\"],\n\t\t\"vnd.dece.zip\": [\"uvz\", \"uvvz\"],\n\t\t\"vnd.denovo.fcselayout-link\": \"fe_launch\",\n\t\t\"vnd.dna\": \"dna\",\n\t\t\"vnd.dolby.mlp\": \"mlp\",\n\t\t\"vnd.dpgraph\": \"dpg\",\n\t\t\"vnd.dreamfactory\": \"dfac\",\n\t\t\"vnd.ds-keypoint\": \"kpxx\",\n\t\t\"vnd.dvb.ait\": \"ait\",\n\t\t\"vnd.dvb.service\": \"svc\",\n\t\t\"vnd.dynageo\": \"geo\",\n\t\t\"vnd.ecowin.chart\": \"mag\",\n\t\t\"vnd.enliven\": \"nml\",\n\t\t\"vnd.epson.esf\": \"esf\",\n\t\t\"vnd.epson.msf\": \"msf\",\n\t\t\"vnd.epson.quickanime\": \"qam\",\n\t\t\"vnd.epson.salt\": \"slt\",\n\t\t\"vnd.epson.ssf\": \"ssf\",\n\t\t\"vnd.eszigno3+xml\": [\"es3\", \"et3\"],\n\t\t\"vnd.ezpix-album\": \"ez2\",\n\t\t\"vnd.ezpix-package\": \"ez3\",\n\t\t\"vnd.fdf\": \"fdf\",\n\t\t\"vnd.fdsn.mseed\": \"mseed\",\n\t\t\"vnd.fdsn.seed\": [\"seed\", \"dataless\"],\n\t\t\"vnd.flographit\": \"gph\",\n\t\t\"vnd.fluxtime.clip\": \"ftc\",\n\t\t\"vnd.framemaker\": [\"fm\", \"frame\", \"maker\", \"book\"],\n\t\t\"vnd.frogans.fnc\": \"fnc\",\n\t\t\"vnd.frogans.ltf\": \"ltf\",\n\t\t\"vnd.fsc.weblaunch\": \"fsc\",\n\t\t\"vnd.fujitsu.oasys\": \"oas\",\n\t\t\"vnd.fujitsu.oasys2\": \"oa2\",\n\t\t\"vnd.fujitsu.oasys3\": \"oa3\",\n\t\t\"vnd.fujitsu.oasysgp\": \"fg5\",\n\t\t\"vnd.fujitsu.oasysprs\": \"bh2\",\n\t\t\"vnd.fujixerox.ddd\": \"ddd\",\n\t\t\"vnd.fujixerox.docuworks\": \"xdw\",\n\t\t\"vnd.fujixerox.docuworks.binder\": \"xbd\",\n\t\t\"vnd.fuzzysheet\": \"fzs\",\n\t\t\"vnd.genomatix.tuxedo\": \"txd\",\n\t\t\"vnd.geogebra.file\": \"ggb\",\n\t\t\"vnd.geogebra.tool\": \"ggt\",\n\t\t\"vnd.geometry-explorer\": [\"gex\", \"gre\"],\n\t\t\"vnd.geonext\": \"gxt\",\n\t\t\"vnd.geoplan\": \"g2w\",\n\t\t\"vnd.geospace\": \"g3w\",\n\t\t\"vnd.gmx\": \"gmx\",\n\t\t\"vnd.grafeq\": [\"gqf\", \"gqs\"],\n\t\t\"vnd.groove-account\": \"gac\",\n\t\t\"vnd.groove-help\": \"ghf\",\n\t\t\"vnd.groove-identity-message\": \"gim\",\n\t\t\"vnd.groove-injector\": \"grv\",\n\t\t\"vnd.groove-tool-message\": \"gtm\",\n\t\t\"vnd.groove-tool-template\": \"tpl\",\n\t\t\"vnd.groove-vcard\": \"vcg\",\n\t\t\"vnd.hal+xml\": \"hal\",\n\t\t\"vnd.handheld-entertainment+xml\": \"zmm\",\n\t\t\"vnd.hbci\": \"hbci\",\n\t\t\"vnd.hhe.lesson-player\": \"les\",\n\t\t\"vnd.hp-hpgl\": \"hpgl\",\n\t\t\"vnd.hp-hpid\": \"hpid\",\n\t\t\"vnd.hp-hps\": \"hps\",\n\t\t\"vnd.hp-jlyt\": \"jlt\",\n\t\t\"vnd.hp-pcl\": \"pcl\",\n\t\t\"vnd.hp-pclxl\": \"pclxl\",\n\t\t\"vnd.hydrostatix.sof-data\": \"sfd-hdstx\",\n\t\t\"vnd.ibm.minipay\": \"mpy\",\n\t\t\"vnd.ibm.modcap\": [\"afp\", \"listafp\", \"list3820\"],\n\t\t\"vnd.ibm.rights-management\": \"irm\",\n\t\t\"vnd.ibm.secure-container\": \"sc\",\n\t\t\"vnd.iccprofile\": [\"icc\", \"icm\"],\n\t\t\"vnd.igloader\": \"igl\",\n\t\t\"vnd.immervision-ivp\": \"ivp\",\n\t\t\"vnd.immervision-ivu\": \"ivu\",\n\t\t\"vnd.insors.igm\": \"igm\",\n\t\t\"vnd.intercon.formnet\": [\"xpw\", \"xpx\"],\n\t\t\"vnd.intergeo\": \"i2g\",\n\t\t\"vnd.intu.qbo\": \"qbo\",\n\t\t\"vnd.intu.qfx\": \"qfx\",\n\t\t\"vnd.ipunplugged.rcprofile\": \"rcprofile\",\n\t\t\"vnd.irepository.package+xml\": \"irp\",\n\t\t\"vnd.is-xpr\": \"xpr\",\n\t\t\"vnd.isac.fcs\": \"fcs\",\n\t\t\"vnd.jam\": \"jam\",\n\t\t\"vnd.jcp.javame.midlet-rms\": \"rms\",\n\t\t\"vnd.jisp\": \"jisp\",\n\t\t\"vnd.joost.joda-archive\": \"joda\",\n\t\t\"vnd.kahootz\": [\"ktz\", \"ktr\"],\n\t\t\"vnd.kde.karbon\": \"karbon\",\n\t\t\"vnd.kde.kchart\": \"chrt\",\n\t\t\"vnd.kde.kformula\": \"kfo\",\n\t\t\"vnd.kde.kivio\": \"flw\",\n\t\t\"vnd.kde.kontour\": \"kon\",\n\t\t\"vnd.kde.kpresenter\": [\"kpr\", \"kpt\"],\n\t\t\"vnd.kde.kspread\": \"ksp\",\n\t\t\"vnd.kde.kword\": [\"kwd\", \"kwt\"],\n\t\t\"vnd.kenameaapp\": \"htke\",\n\t\t\"vnd.kidspiration\": \"kia\",\n\t\t\"vnd.kinar\": [\"kne\", \"knp\"],\n\t\t\"vnd.koan\": [\"skp\", \"skd\", \"skt\", \"skm\"],\n\t\t\"vnd.kodak-descriptor\": \"sse\",\n\t\t\"vnd.las.las+xml\": \"lasxml\",\n\t\t\"vnd.llamagraphics.life-balance.desktop\": \"lbd\",\n\t\t\"vnd.llamagraphics.life-balance.exchange+xml\": \"lbe\",\n\t\t\"vnd.lotus-1-2-3\": \"123\",\n\t\t\"vnd.lotus-approach\": \"apr\",\n\t\t\"vnd.lotus-freelance\": \"pre\",\n\t\t\"vnd.lotus-notes\": \"nsf\",\n\t\t\"vnd.lotus-organizer\": \"org\",\n\t\t\"vnd.lotus-screencam\": \"scm\",\n\t\t\"vnd.lotus-wordpro\": \"lwp\",\n\t\t\"vnd.macports.portpkg\": \"portpkg\",\n\t\t\"vnd.mcd\": \"mcd\",\n\t\t\"vnd.medcalcdata\": \"mc1\",\n\t\t\"vnd.mediastation.cdkey\": \"cdkey\",\n\t\t\"vnd.mfer\": \"mwf\",\n\t\t\"vnd.mfmp\": \"mfm\",\n\t\t\"vnd.micrografx.flo\": \"flo\",\n\t\t\"vnd.micrografx.igx\": \"igx\",\n\t\t\"vnd.mif\": \"mif\",\n\t\t\"vnd.mobius.daf\": \"daf\",\n\t\t\"vnd.mobius.dis\": \"dis\",\n\t\t\"vnd.mobius.mbk\": \"mbk\",\n\t\t\"vnd.mobius.mqy\": \"mqy\",\n\t\t\"vnd.mobius.msl\": \"msl\",\n\t\t\"vnd.mobius.plc\": \"plc\",\n\t\t\"vnd.mobius.txf\": \"txf\",\n\t\t\"vnd.mophun.application\": \"mpn\",\n\t\t\"vnd.mophun.certificate\": \"mpc\",\n\t\t\"vnd.ms-artgalry\": \"cil\",\n\t\t\"vnd.ms-cab-compressed\": \"cab\",\n\t\t\"vnd.ms-excel.addin.macroenabled.12\": \"xlam\",\n\t\t\"vnd.ms-excel.sheet.binary.macroenabled.12\": \"xlsb\",\n\t\t\"vnd.ms-excel.sheet.macroenabled.12\": \"xlsm\",\n\t\t\"vnd.ms-excel.template.macroenabled.12\": \"xltm\",\n\t\t\"vnd.ms-fontobject\": \"eot\",\n\t\t\"vnd.ms-htmlhelp\": \"chm\",\n\t\t\"vnd.ms-ims\": \"ims\",\n\t\t\"vnd.ms-lrm\": \"lrm\",\n\t\t\"vnd.ms-officetheme\": \"thmx\",\n\t\t\"vnd.ms-powerpoint.addin.macroenabled.12\": \"ppam\",\n\t\t\"vnd.ms-powerpoint.presentation.macroenabled.12\": \"pptm\",\n\t\t\"vnd.ms-powerpoint.slide.macroenabled.12\": \"sldm\",\n\t\t\"vnd.ms-powerpoint.slideshow.macroenabled.12\": \"ppsm\",\n\t\t\"vnd.ms-powerpoint.template.macroenabled.12\": \"potm\",\n\t\t\"vnd.ms-project\": [\"mpp\", \"mpt\"],\n\t\t\"vnd.ms-word.document.macroenabled.12\": \"docm\",\n\t\t\"vnd.ms-word.template.macroenabled.12\": \"dotm\",\n\t\t\"vnd.ms-works\": [\"wps\", \"wks\", \"wcm\", \"wdb\"],\n\t\t\"vnd.ms-wpl\": \"wpl\",\n\t\t\"vnd.ms-xpsdocument\": \"xps\",\n\t\t\"vnd.mseq\": \"mseq\",\n\t\t\"vnd.musician\": \"mus\",\n\t\t\"vnd.muvee.style\": \"msty\",\n\t\t\"vnd.mynfc\": \"taglet\",\n\t\t\"vnd.neurolanguage.nlu\": \"nlu\",\n\t\t\"vnd.nitf\": [\"ntf\", \"nitf\"],\n\t\t\"vnd.noblenet-directory\": \"nnd\",\n\t\t\"vnd.noblenet-sealer\": \"nns\",\n\t\t\"vnd.noblenet-web\": \"nnw\",\n\t\t\"vnd.nokia.n-gage.data\": \"ngdat\",\n\t\t\"vnd.nokia.n-gage.symbian.install\": \"n-gage\",\n\t\t\"vnd.nokia.radio-preset\": \"rpst\",\n\t\t\"vnd.nokia.radio-presets\": \"rpss\",\n\t\t\"vnd.novadigm.edm\": \"edm\",\n\t\t\"vnd.novadigm.edx\": \"edx\",\n\t\t\"vnd.novadigm.ext\": \"ext\",\n\t\t\"vnd.oasis.opendocument.chart-template\": \"otc\",\n\t\t\"vnd.oasis.opendocument.formula-template\": \"odft\",\n\t\t\"vnd.oasis.opendocument.image-template\": \"oti\",\n\t\t\"vnd.olpc-sugar\": \"xo\",\n\t\t\"vnd.oma.dd2+xml\": \"dd2\",\n\t\t\"vnd.openofficeorg.extension\": \"oxt\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slide\": \"sldx\",\n\t\t\"vnd.osgeo.mapguide.package\": \"mgp\",\n\t\t\"vnd.osgi.dp\": \"dp\",\n\t\t\"vnd.osgi.subsystem\": \"esa\",\n\t\t\"vnd.palm\": [\"pdb\", \"pqa\", \"oprc\"],\n\t\t\"vnd.pawaafile\": \"paw\",\n\t\t\"vnd.pg.format\": \"str\",\n\t\t\"vnd.pg.osasli\": \"ei6\",\n\t\t\"vnd.picsel\": \"efif\",\n\t\t\"vnd.pmi.widget\": \"wg\",\n\t\t\"vnd.pocketlearn\": \"plf\",\n\t\t\"vnd.powerbuilder6\": \"pbd\",\n\t\t\"vnd.previewsystems.box\": \"box\",\n\t\t\"vnd.proteus.magazine\": \"mgz\",\n\t\t\"vnd.publishare-delta-tree\": \"qps\",\n\t\t\"vnd.pvi.ptid1\": \"ptid\",\n\t\t\"vnd.quark.quarkxpress\": [\"qxd\", \"qxt\", \"qwd\", \"qwt\", \"qxl\", \"qxb\"],\n\t\t\"vnd.realvnc.bed\": \"bed\",\n\t\t\"vnd.recordare.musicxml\": \"mxl\",\n\t\t\"vnd.recordare.musicxml+xml\": \"musicxml\",\n\t\t\"vnd.rig.cryptonote\": \"cryptonote\",\n\t\t\"vnd.rn-realmedia\": \"rm\",\n\t\t\"vnd.rn-realmedia-vbr\": \"rmvb\",\n\t\t\"vnd.route66.link66+xml\": \"link66\",\n\t\t\"vnd.sailingtracker.track\": \"st\",\n\t\t\"vnd.seemail\": \"see\",\n\t\t\"vnd.sema\": \"sema\",\n\t\t\"vnd.semd\": \"semd\",\n\t\t\"vnd.semf\": \"semf\",\n\t\t\"vnd.shana.informed.formdata\": \"ifm\",\n\t\t\"vnd.shana.informed.formtemplate\": \"itp\",\n\t\t\"vnd.shana.informed.interchange\": \"iif\",\n\t\t\"vnd.shana.informed.package\": \"ipk\",\n\t\t\"vnd.simtech-mindmapper\": [\"twd\", \"twds\"],\n\t\t\"vnd.smart.teacher\": \"teacher\",\n\t\t\"vnd.solent.sdkm+xml\": [\"sdkm\", \"sdkd\"],\n\t\t\"vnd.spotfire.dxp\": \"dxp\",\n\t\t\"vnd.spotfire.sfs\": \"sfs\",\n\t\t\"vnd.stepmania.package\": \"smzip\",\n\t\t\"vnd.stepmania.stepchart\": \"sm\",\n\t\t\"vnd.sus-calendar\": [\"sus\", \"susp\"],\n\t\t\"vnd.svd\": \"svd\",\n\t\t\"vnd.syncml+xml\": \"xsm\",\n\t\t\"vnd.syncml.dm+wbxml\": \"bdm\",\n\t\t\"vnd.syncml.dm+xml\": \"xdm\",\n\t\t\"vnd.tao.intent-module-archive\": \"tao\",\n\t\t\"vnd.tcpdump.pcap\": [\"pcap\", \"cap\", \"dmp\"],\n\t\t\"vnd.tmobile-livetv\": \"tmo\",\n\t\t\"vnd.trid.tpt\": \"tpt\",\n\t\t\"vnd.triscape.mxs\": \"mxs\",\n\t\t\"vnd.trueapp\": \"tra\",\n\t\t\"vnd.ufdl\": [\"ufd\", \"ufdl\"],\n\t\t\"vnd.uiq.theme\": \"utz\",\n\t\t\"vnd.umajin\": \"umj\",\n\t\t\"vnd.unity\": \"unityweb\",\n\t\t\"vnd.uoml+xml\": \"uoml\",\n\t\t\"vnd.vcx\": \"vcx\",\n\t\t\"vnd.visionary\": \"vis\",\n\t\t\"vnd.vsf\": \"vsf\",\n\t\t\"vnd.webturbo\": \"wtb\",\n\t\t\"vnd.wolfram.player\": \"nbp\",\n\t\t\"vnd.wqd\": \"wqd\",\n\t\t\"vnd.wt.stf\": \"stf\",\n\t\t\"vnd.xara\": \"xar\",\n\t\t\"vnd.xfdl\": \"xfdl\",\n\t\t\"vnd.yamaha.hv-dic\": \"hvd\",\n\t\t\"vnd.yamaha.hv-script\": \"hvs\",\n\t\t\"vnd.yamaha.hv-voice\": \"hvp\",\n\t\t\"vnd.yamaha.openscoreformat\": \"osf\",\n\t\t\"vnd.yamaha.openscoreformat.osfpvg+xml\": \"osfpvg\",\n\t\t\"vnd.yamaha.smaf-audio\": \"saf\",\n\t\t\"vnd.yamaha.smaf-phrase\": \"spf\",\n\t\t\"vnd.yellowriver-custom-menu\": \"cmp\",\n\t\t\"vnd.zul\": [\"zir\", \"zirz\"],\n\t\t\"vnd.zzazz.deck+xml\": \"zaz\",\n\t\t\"voicexml+xml\": \"vxml\",\n\t\t\"widget\": \"wgt\",\n\t\t\"winhlp\": \"hlp\",\n\t\t\"wsdl+xml\": \"wsdl\",\n\t\t\"wspolicy+xml\": \"wspolicy\",\n\t\t\"x-ace-compressed\": \"ace\",\n\t\t\"x-authorware-bin\": [\"aab\", \"x32\", \"u32\", \"vox\"],\n\t\t\"x-authorware-map\": \"aam\",\n\t\t\"x-authorware-seg\": \"aas\",\n\t\t\"x-blorb\": [\"blb\", \"blorb\"],\n\t\t\"x-bzip\": \"bz\",\n\t\t\"x-bzip2\": [\"bz2\", \"boz\"],\n\t\t\"x-cfs-compressed\": \"cfs\",\n\t\t\"x-chat\": \"chat\",\n\t\t\"x-conference\": \"nsc\",\n\t\t\"x-dgc-compressed\": \"dgc\",\n\t\t\"x-dtbncx+xml\": \"ncx\",\n\t\t\"x-dtbook+xml\": \"dtb\",\n\t\t\"x-dtbresource+xml\": \"res\",\n\t\t\"x-eva\": \"eva\",\n\t\t\"x-font-bdf\": \"bdf\",\n\t\t\"x-font-ghostscript\": \"gsf\",\n\t\t\"x-font-linux-psf\": \"psf\",\n\t\t\"x-font-otf\": \"otf\",\n\t\t\"x-font-pcf\": \"pcf\",\n\t\t\"x-font-snf\": \"snf\",\n\t\t\"x-font-ttf\": [\"ttf\", \"ttc\"],\n\t\t\"x-font-type1\": [\"pfa\", \"pfb\", \"pfm\", \"afm\"],\n\t\t\"x-font-woff\": \"woff\",\n\t\t\"x-freearc\": \"arc\",\n\t\t\"x-gca-compressed\": \"gca\",\n\t\t\"x-glulx\": \"ulx\",\n\t\t\"x-gramps-xml\": \"gramps\",\n\t\t\"x-install-instructions\": \"install\",\n\t\t\"x-lzh-compressed\": [\"lzh\", \"lha\"],\n\t\t\"x-mie\": \"mie\",\n\t\t\"x-mobipocket-ebook\": [\"prc\", \"mobi\"],\n\t\t\"x-ms-application\": \"application\",\n\t\t\"x-ms-shortcut\": \"lnk\",\n\t\t\"x-ms-xbap\": \"xbap\",\n\t\t\"x-msbinder\": \"obd\",\n\t\t\"x-mscardfile\": \"crd\",\n\t\t\"x-msclip\": \"clp\",\n\t\t\"x-msdownload\": [\"exe\", \"dll\", \"com\", \"bat\", \"msi\"],\n\t\t\"x-msmediaview\": [\"mvb\", \"m13\", \"m14\"],\n\t\t\"x-msmetafile\": [\"wmf\", \"wmz\", \"emf\", \"emz\"],\n\t\t\"x-msmoney\": \"mny\",\n\t\t\"x-mspublisher\": \"pub\",\n\t\t\"x-msschedule\": \"scd\",\n\t\t\"x-msterminal\": \"trm\",\n\t\t\"x-mswrite\": \"wri\",\n\t\t\"x-nzb\": \"nzb\",\n\t\t\"x-pkcs12\": [\"p12\", \"pfx\"],\n\t\t\"x-pkcs7-certificates\": [\"p7b\", \"spc\"],\n\t\t\"x-research-info-systems\": \"ris\",\n\t\t\"x-silverlight-app\": \"xap\",\n\t\t\"x-sql\": \"sql\",\n\t\t\"x-stuffitx\": \"sitx\",\n\t\t\"x-subrip\": \"srt\",\n\t\t\"x-t3vm-image\": \"t3\",\n\t\t\"x-tads\": \"gam\",\n\t\t\"x-tex\": \"tex\",\n\t\t\"x-tex-tfm\": \"tfm\",\n\t\t\"x-tgif\": \"obj\",\n\t\t\"x-xliff+xml\": \"xlf\",\n\t\t\"x-xz\": \"xz\",\n\t\t\"x-zmachine\": [\"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\", \"z8\"],\n\t\t\"xaml+xml\": \"xaml\",\n\t\t\"xcap-diff+xml\": \"xdf\",\n\t\t\"xenc+xml\": \"xenc\",\n\t\t\"xml-dtd\": \"dtd\",\n\t\t\"xop+xml\": \"xop\",\n\t\t\"xproc+xml\": \"xpl\",\n\t\t\"xslt+xml\": \"xslt\",\n\t\t\"xv+xml\": [\"mxml\", \"xhvml\", \"xvml\", \"xvm\"],\n\t\t\"yang\": \"yang\",\n\t\t\"yin+xml\": \"yin\",\n\t\t\"envoy\": \"evy\",\n\t\t\"fractals\": \"fif\",\n\t\t\"internet-property-stream\": \"acx\",\n\t\t\"olescript\": \"axs\",\n\t\t\"vnd.ms-outlook\": \"msg\",\n\t\t\"vnd.ms-pkicertstore\": \"sst\",\n\t\t\"x-compress\": \"z\",\n\t\t\"x-compressed\": \"tgz\",\n\t\t\"x-gzip\": \"gz\",\n\t\t\"x-perfmon\": [\"pma\", \"pmc\", \"pml\", \"pmr\", \"pmw\"],\n\t\t\"x-pkcs7-mime\": [\"p7c\", \"p7m\"],\n\t\t\"ynd.ms-pkipko\": \"pko\"\n\t},\n\t\"audio\": {\n\t\t\"amr\": \"amr\",\n\t\t\"amr-wb\": \"awb\",\n\t\t\"annodex\": \"axa\",\n\t\t\"basic\": [\"au\", \"snd\"],\n\t\t\"flac\": \"flac\",\n\t\t\"midi\": [\"mid\", \"midi\", \"kar\", \"rmi\"],\n\t\t\"mpeg\": [\"mpga\", \"mpega\", \"mp2\", \"mp3\", \"m4a\", \"mp2a\", \"m2a\", \"m3a\"],\n\t\t\"mpegurl\": \"m3u\",\n\t\t\"ogg\": [\"oga\", \"ogg\", \"spx\"],\n\t\t\"prs.sid\": \"sid\",\n\t\t\"x-aiff\": [\"aif\", \"aiff\", \"aifc\"],\n\t\t\"x-gsm\": \"gsm\",\n\t\t\"x-ms-wma\": \"wma\",\n\t\t\"x-ms-wax\": \"wax\",\n\t\t\"x-pn-realaudio\": \"ram\",\n\t\t\"x-realaudio\": \"ra\",\n\t\t\"x-sd2\": \"sd2\",\n\t\t\"x-wav\": \"wav\",\n\t\t\"adpcm\": \"adp\",\n\t\t\"mp4\": \"mp4a\",\n\t\t\"s3m\": \"s3m\",\n\t\t\"silk\": \"sil\",\n\t\t\"vnd.dece.audio\": [\"uva\", \"uvva\"],\n\t\t\"vnd.digital-winds\": \"eol\",\n\t\t\"vnd.dra\": \"dra\",\n\t\t\"vnd.dts\": \"dts\",\n\t\t\"vnd.dts.hd\": \"dtshd\",\n\t\t\"vnd.lucent.voice\": \"lvp\",\n\t\t\"vnd.ms-playready.media.pya\": \"pya\",\n\t\t\"vnd.nuera.ecelp4800\": \"ecelp4800\",\n\t\t\"vnd.nuera.ecelp7470\": \"ecelp7470\",\n\t\t\"vnd.nuera.ecelp9600\": \"ecelp9600\",\n\t\t\"vnd.rip\": \"rip\",\n\t\t\"webm\": \"weba\",\n\t\t\"x-aac\": \"aac\",\n\t\t\"x-caf\": \"caf\",\n\t\t\"x-matroska\": \"mka\",\n\t\t\"x-pn-realaudio-plugin\": \"rmp\",\n\t\t\"xm\": \"xm\",\n\t\t\"mid\": [\"mid\", \"rmi\"]\n\t},\n\t\"chemical\": {\n\t\t\"x-alchemy\": \"alc\",\n\t\t\"x-cache\": [\"cac\", \"cache\"],\n\t\t\"x-cache-csf\": \"csf\",\n\t\t\"x-cactvs-binary\": [\"cbin\", \"cascii\", \"ctab\"],\n\t\t\"x-cdx\": \"cdx\",\n\t\t\"x-chem3d\": \"c3d\",\n\t\t\"x-cif\": \"cif\",\n\t\t\"x-cmdf\": \"cmdf\",\n\t\t\"x-cml\": \"cml\",\n\t\t\"x-compass\": \"cpa\",\n\t\t\"x-crossfire\": \"bsd\",\n\t\t\"x-csml\": [\"csml\", \"csm\"],\n\t\t\"x-ctx\": \"ctx\",\n\t\t\"x-cxf\": [\"cxf\", \"cef\"],\n\t\t\"x-embl-dl-nucleotide\": [\"emb\", \"embl\"],\n\t\t\"x-gamess-input\": [\"inp\", \"gam\", \"gamin\"],\n\t\t\"x-gaussian-checkpoint\": [\"fch\", \"fchk\"],\n\t\t\"x-gaussian-cube\": \"cub\",\n\t\t\"x-gaussian-input\": [\"gau\", \"gjc\", \"gjf\"],\n\t\t\"x-gaussian-log\": \"gal\",\n\t\t\"x-gcg8-sequence\": \"gcg\",\n\t\t\"x-genbank\": \"gen\",\n\t\t\"x-hin\": \"hin\",\n\t\t\"x-isostar\": [\"istr\", \"ist\"],\n\t\t\"x-jcamp-dx\": [\"jdx\", \"dx\"],\n\t\t\"x-kinemage\": \"kin\",\n\t\t\"x-macmolecule\": \"mcm\",\n\t\t\"x-macromodel-input\": [\"mmd\", \"mmod\"],\n\t\t\"x-mdl-molfile\": \"mol\",\n\t\t\"x-mdl-rdfile\": \"rd\",\n\t\t\"x-mdl-rxnfile\": \"rxn\",\n\t\t\"x-mdl-sdfile\": [\"sd\", \"sdf\"],\n\t\t\"x-mdl-tgf\": \"tgf\",\n\t\t\"x-mmcif\": \"mcif\",\n\t\t\"x-mol2\": \"mol2\",\n\t\t\"x-molconn-Z\": \"b\",\n\t\t\"x-mopac-graph\": \"gpt\",\n\t\t\"x-mopac-input\": [\"mop\", \"mopcrt\", \"mpc\", \"zmt\"],\n\t\t\"x-mopac-out\": \"moo\",\n\t\t\"x-ncbi-asn1\": \"asn\",\n\t\t\"x-ncbi-asn1-ascii\": [\"prt\", \"ent\"],\n\t\t\"x-ncbi-asn1-binary\": [\"val\", \"aso\"],\n\t\t\"x-pdb\": [\"pdb\", \"ent\"],\n\t\t\"x-rosdal\": \"ros\",\n\t\t\"x-swissprot\": \"sw\",\n\t\t\"x-vamas-iso14976\": \"vms\",\n\t\t\"x-vmd\": \"vmd\",\n\t\t\"x-xtel\": \"xtel\",\n\t\t\"x-xyz\": \"xyz\"\n\t},\n\t\"image\": {\n\t\t\"gif\": \"gif\",\n\t\t\"ief\": \"ief\",\n\t\t\"jpeg\": [\"jpeg\", \"jpg\", \"jpe\"],\n\t\t\"pcx\": \"pcx\",\n\t\t\"png\": \"png\",\n\t\t\"svg+xml\": [\"svg\", \"svgz\"],\n\t\t\"tiff\": [\"tiff\", \"tif\"],\n\t\t\"vnd.djvu\": [\"djvu\", \"djv\"],\n\t\t\"vnd.wap.wbmp\": \"wbmp\",\n\t\t\"x-canon-cr2\": \"cr2\",\n\t\t\"x-canon-crw\": \"crw\",\n\t\t\"x-cmu-raster\": \"ras\",\n\t\t\"x-coreldraw\": \"cdr\",\n\t\t\"x-coreldrawpattern\": \"pat\",\n\t\t\"x-coreldrawtemplate\": \"cdt\",\n\t\t\"x-corelphotopaint\": \"cpt\",\n\t\t\"x-epson-erf\": \"erf\",\n\t\t\"x-icon\": \"ico\",\n\t\t\"x-jg\": \"art\",\n\t\t\"x-jng\": \"jng\",\n\t\t\"x-nikon-nef\": \"nef\",\n\t\t\"x-olympus-orf\": \"orf\",\n\t\t\"x-photoshop\": \"psd\",\n\t\t\"x-portable-anymap\": \"pnm\",\n\t\t\"x-portable-bitmap\": \"pbm\",\n\t\t\"x-portable-graymap\": \"pgm\",\n\t\t\"x-portable-pixmap\": \"ppm\",\n\t\t\"x-rgb\": \"rgb\",\n\t\t\"x-xbitmap\": \"xbm\",\n\t\t\"x-xpixmap\": \"xpm\",\n\t\t\"x-xwindowdump\": \"xwd\",\n\t\t\"bmp\": \"bmp\",\n\t\t\"cgm\": \"cgm\",\n\t\t\"g3fax\": \"g3\",\n\t\t\"ktx\": \"ktx\",\n\t\t\"prs.btif\": \"btif\",\n\t\t\"sgi\": \"sgi\",\n\t\t\"vnd.dece.graphic\": [\"uvi\", \"uvvi\", \"uvg\", \"uvvg\"],\n\t\t\"vnd.dwg\": \"dwg\",\n\t\t\"vnd.dxf\": \"dxf\",\n\t\t\"vnd.fastbidsheet\": \"fbs\",\n\t\t\"vnd.fpx\": \"fpx\",\n\t\t\"vnd.fst\": \"fst\",\n\t\t\"vnd.fujixerox.edmics-mmr\": \"mmr\",\n\t\t\"vnd.fujixerox.edmics-rlc\": \"rlc\",\n\t\t\"vnd.ms-modi\": \"mdi\",\n\t\t\"vnd.ms-photo\": \"wdp\",\n\t\t\"vnd.net-fpx\": \"npx\",\n\t\t\"vnd.xiff\": \"xif\",\n\t\t\"webp\": \"webp\",\n\t\t\"x-3ds\": \"3ds\",\n\t\t\"x-cmx\": \"cmx\",\n\t\t\"x-freehand\": [\"fh\", \"fhc\", \"fh4\", \"fh5\", \"fh7\"],\n\t\t\"x-pict\": [\"pic\", \"pct\"],\n\t\t\"x-tga\": \"tga\",\n\t\t\"cis-cod\": \"cod\",\n\t\t\"pipeg\": \"jfif\"\n\t},\n\t\"message\": {\n\t\t\"rfc822\": [\"eml\", \"mime\", \"mht\", \"mhtml\", \"nws\"]\n\t},\n\t\"model\": {\n\t\t\"iges\": [\"igs\", \"iges\"],\n\t\t\"mesh\": [\"msh\", \"mesh\", \"silo\"],\n\t\t\"vrml\": [\"wrl\", \"vrml\"],\n\t\t\"x3d+vrml\": [\"x3dv\", \"x3dvz\"],\n\t\t\"x3d+xml\": [\"x3d\", \"x3dz\"],\n\t\t\"x3d+binary\": [\"x3db\", \"x3dbz\"],\n\t\t\"vnd.collada+xml\": \"dae\",\n\t\t\"vnd.dwf\": \"dwf\",\n\t\t\"vnd.gdl\": \"gdl\",\n\t\t\"vnd.gtw\": \"gtw\",\n\t\t\"vnd.mts\": \"mts\",\n\t\t\"vnd.vtu\": \"vtu\"\n\t},\n\t\"text\": {\n\t\t\"cache-manifest\": [\"manifest\", \"appcache\"],\n\t\t\"calendar\": [\"ics\", \"icz\", \"ifb\"],\n\t\t\"css\": \"css\",\n\t\t\"csv\": \"csv\",\n\t\t\"h323\": \"323\",\n\t\t\"html\": [\"html\", \"htm\", \"shtml\", \"stm\"],\n\t\t\"iuls\": \"uls\",\n\t\t\"mathml\": \"mml\",\n\t\t\"plain\": [\"txt\", \"text\", \"brf\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"bas\"],\n\t\t\"richtext\": \"rtx\",\n\t\t\"scriptlet\": [\"sct\", \"wsc\"],\n\t\t\"texmacs\": [\"tm\", \"ts\"],\n\t\t\"tab-separated-values\": \"tsv\",\n\t\t\"vnd.sun.j2me.app-descriptor\": \"jad\",\n\t\t\"vnd.wap.wml\": \"wml\",\n\t\t\"vnd.wap.wmlscript\": \"wmls\",\n\t\t\"x-bibtex\": \"bib\",\n\t\t\"x-boo\": \"boo\",\n\t\t\"x-c++hdr\": [\"h++\", \"hpp\", \"hxx\", \"hh\"],\n\t\t\"x-c++src\": [\"c++\", \"cpp\", \"cxx\", \"cc\"],\n\t\t\"x-component\": \"htc\",\n\t\t\"x-dsrc\": \"d\",\n\t\t\"x-diff\": [\"diff\", \"patch\"],\n\t\t\"x-haskell\": \"hs\",\n\t\t\"x-java\": \"java\",\n\t\t\"x-literate-haskell\": \"lhs\",\n\t\t\"x-moc\": \"moc\",\n\t\t\"x-pascal\": [\"p\", \"pas\"],\n\t\t\"x-pcs-gcd\": \"gcd\",\n\t\t\"x-perl\": [\"pl\", \"pm\"],\n\t\t\"x-python\": \"py\",\n\t\t\"x-scala\": \"scala\",\n\t\t\"x-setext\": \"etx\",\n\t\t\"x-tcl\": [\"tcl\", \"tk\"],\n\t\t\"x-tex\": [\"tex\", \"ltx\", \"sty\", \"cls\"],\n\t\t\"x-vcalendar\": \"vcs\",\n\t\t\"x-vcard\": \"vcf\",\n\t\t\"n3\": \"n3\",\n\t\t\"prs.lines.tag\": \"dsc\",\n\t\t\"sgml\": [\"sgml\", \"sgm\"],\n\t\t\"troff\": [\"t\", \"tr\", \"roff\", \"man\", \"me\", \"ms\"],\n\t\t\"turtle\": \"ttl\",\n\t\t\"uri-list\": [\"uri\", \"uris\", \"urls\"],\n\t\t\"vcard\": \"vcard\",\n\t\t\"vnd.curl\": \"curl\",\n\t\t\"vnd.curl.dcurl\": \"dcurl\",\n\t\t\"vnd.curl.scurl\": \"scurl\",\n\t\t\"vnd.curl.mcurl\": \"mcurl\",\n\t\t\"vnd.dvb.subtitle\": \"sub\",\n\t\t\"vnd.fly\": \"fly\",\n\t\t\"vnd.fmi.flexstor\": \"flx\",\n\t\t\"vnd.graphviz\": \"gv\",\n\t\t\"vnd.in3d.3dml\": \"3dml\",\n\t\t\"vnd.in3d.spot\": \"spot\",\n\t\t\"x-asm\": [\"s\", \"asm\"],\n\t\t\"x-c\": [\"c\", \"cc\", \"cxx\", \"cpp\", \"h\", \"hh\", \"dic\"],\n\t\t\"x-fortran\": [\"f\", \"for\", \"f77\", \"f90\"],\n\t\t\"x-opml\": \"opml\",\n\t\t\"x-nfo\": \"nfo\",\n\t\t\"x-sfv\": \"sfv\",\n\t\t\"x-uuencode\": \"uu\",\n\t\t\"webviewhtml\": \"htt\"\n\t},\n\t\"video\": {\n\t\t\"avif\": \".avif\",\n\t\t\"3gpp\": \"3gp\",\n\t\t\"annodex\": \"axv\",\n\t\t\"dl\": \"dl\",\n\t\t\"dv\": [\"dif\", \"dv\"],\n\t\t\"fli\": \"fli\",\n\t\t\"gl\": \"gl\",\n\t\t\"mpeg\": [\"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\", \"mp2\", \"mpa\", \"mpv2\"],\n\t\t\"mp4\": [\"mp4\", \"mp4v\", \"mpg4\"],\n\t\t\"quicktime\": [\"qt\", \"mov\"],\n\t\t\"ogg\": \"ogv\",\n\t\t\"vnd.mpegurl\": [\"mxu\", \"m4u\"],\n\t\t\"x-flv\": \"flv\",\n\t\t\"x-la-asf\": [\"lsf\", \"lsx\"],\n\t\t\"x-mng\": \"mng\",\n\t\t\"x-ms-asf\": [\"asf\", \"asx\", \"asr\"],\n\t\t\"x-ms-wm\": \"wm\",\n\t\t\"x-ms-wmv\": \"wmv\",\n\t\t\"x-ms-wmx\": \"wmx\",\n\t\t\"x-ms-wvx\": \"wvx\",\n\t\t\"x-msvideo\": \"avi\",\n\t\t\"x-sgi-movie\": \"movie\",\n\t\t\"x-matroska\": [\"mpv\", \"mkv\", \"mk3d\", \"mks\"],\n\t\t\"3gpp2\": \"3g2\",\n\t\t\"h261\": \"h261\",\n\t\t\"h263\": \"h263\",\n\t\t\"h264\": \"h264\",\n\t\t\"jpeg\": \"jpgv\",\n\t\t\"jpm\": [\"jpm\", \"jpgm\"],\n\t\t\"mj2\": [\"mj2\", \"mjp2\"],\n\t\t\"vnd.dece.hd\": [\"uvh\", \"uvvh\"],\n\t\t\"vnd.dece.mobile\": [\"uvm\", \"uvvm\"],\n\t\t\"vnd.dece.pd\": [\"uvp\", \"uvvp\"],\n\t\t\"vnd.dece.sd\": [\"uvs\", \"uvvs\"],\n\t\t\"vnd.dece.video\": [\"uvv\", \"uvvv\"],\n\t\t\"vnd.dvb.file\": \"dvb\",\n\t\t\"vnd.fvt\": \"fvt\",\n\t\t\"vnd.ms-playready.media.pyv\": \"pyv\",\n\t\t\"vnd.uvvu.mp4\": [\"uvu\", \"uvvu\"],\n\t\t\"vnd.vivo\": \"viv\",\n\t\t\"webm\": \"webm\",\n\t\t\"x-f4v\": \"f4v\",\n\t\t\"x-m4v\": \"m4v\",\n\t\t\"x-ms-vob\": \"vob\",\n\t\t\"x-smv\": \"smv\"\t\t\n\t},\n\t\"x-conference\": {\n\t\t\"x-cooltalk\": \"ice\"\n\t},\n\t\"x-world\": {\n\t\t\"x-vrml\": [\"vrm\", \"vrml\", \"wrl\", \"flr\", \"wrz\", \"xaf\", \"xof\"]\n\t}\n};\n\nconst mimeTypes = (() => {\n\tconst mimeTypes = {};\n\tfor (let type in table) {\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tif (table.hasOwnProperty(type)) {\n\t\t\tfor (let subtype in table[type]) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (table[type].hasOwnProperty(subtype)) {\n\t\t\t\t\tconst value = table[type][subtype];\n\t\t\t\t\tif (typeof value == \"string\") {\n\t\t\t\t\t\tmimeTypes[value] = type + \"/\" + subtype;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let indexMimeType = 0; indexMimeType < value.length; indexMimeType++) {\n\t\t\t\t\t\t\tmimeTypes[value[indexMimeType]] = type + \"/\" + subtype;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn mimeTypes;\n})();\n\nexport default getMimeType;\n\nfunction getMimeType(filename) {\n\tconst defaultValue = \"application/octet-stream\";\n\treturn filename && mimeTypes[filename.split(\".\").pop().toLowerCase()] || defaultValue;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport default Crc32;","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nexport default encodeText;\n\nfunction encodeText(value) {\n\tif (typeof TextEncoder == \"undefined\") {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}","// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = function (hash) {\n\tif (hash) {\n\t\tthis._h = hash._h.slice(0);\n\t\tthis._buffer = hash._buffer.slice(0);\n\t\tthis._length = hash._length;\n\t} else {\n\t\tthis.reset();\n\t}\n};\n\nhash.sha1.prototype = {\n\t/**\n\t * The hash's block size, in bits.\n\t * @constant\n\t */\n\tblockSize: 512,\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset: function () {\n\t\tconst sha1 = this;\n\t\tsha1._h = this._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t},\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate: function (data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t},\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize: function () {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t},\n\n\t/**\n\t * The SHA-1 initialization vector.\n\t * @private\n\t */\n\t_init: [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0],\n\n\t/**\n\t * The SHA-1 hash key.\n\t * @private\n\t */\n\t_key: [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6],\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f: function (t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t},\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S: function (n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t},\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block: function (words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tlet _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tlet out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\tconst bs = Hash.prototype.blockSize / 32;\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\n\t\tif (key.length > bs) {\n\t\t\tkey = Hash.hash(key);\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport encodeText from \"./../util/encode-text.js\";\nimport { cipher, codec, misc, mode, random } from \"./sjcl.js\";\n\nconst ERR_INVALID_PASSWORD = \"Invalid pasword\";\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\nconst CRYPTO_API_SUPPORTED = typeof crypto != \"undefined\";\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof crypto.subtle != \"undefined\";\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\nclass AESDecrypt {\n\n\tconstructor(password, signed, strength) {\n\t\tObject.assign(this, {\n\t\t\tpassword,\n\t\t\tsigned,\n\t\t\tstrength: strength - 1,\n\t\t\tpendingInput: new Uint8Array(0)\n\t\t});\n\t}\n\n\tasync append(input) {\n\t\tconst aesCrypto = this;\n\t\tif (aesCrypto.password) {\n\t\t\tconst preamble = subarray(input, 0, SALT_LENGTH[aesCrypto.strength] + 2);\n\t\t\tawait createDecryptionKeys(aesCrypto, preamble, aesCrypto.password);\n\t\t\taesCrypto.password = null;\n\t\t\taesCrypto.aesCtrGladman = new CtrGladman(new Aes(aesCrypto.keys.key), Array.from(COUNTER_DEFAULT_VALUE));\n\t\t\taesCrypto.hmac = new HmacSha1(aesCrypto.keys.authentication);\n\t\t\tinput = subarray(input, SALT_LENGTH[aesCrypto.strength] + 2);\n\t\t}\n\t\tconst output = new Uint8Array(input.length - SIGNATURE_LENGTH - ((input.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\treturn append(aesCrypto, input, output, 0, SIGNATURE_LENGTH, true);\n\t}\n\n\tflush() {\n\t\tconst aesCrypto = this;\n\t\tconst pendingInput = aesCrypto.pendingInput;\n\t\tconst chunkToDecrypt = subarray(pendingInput, 0, pendingInput.length - SIGNATURE_LENGTH);\n\t\tconst originalSignature = subarray(pendingInput, pendingInput.length - SIGNATURE_LENGTH);\n\t\tlet decryptedChunkArray = new Uint8Array(0);\n\t\tif (chunkToDecrypt.length) {\n\t\t\tconst encryptedChunk = codecBytes.toBits(chunkToDecrypt);\n\t\t\taesCrypto.hmac.update(encryptedChunk);\n\t\t\tconst decryptedChunk = aesCrypto.aesCtrGladman.update(encryptedChunk);\n\t\t\tdecryptedChunkArray = codecBytes.fromBits(decryptedChunk);\n\t\t}\n\t\tlet valid = true;\n\t\tif (aesCrypto.signed) {\n\t\t\tconst signature = subarray(codecBytes.fromBits(aesCrypto.hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tvalid,\n\t\t\tdata: decryptedChunkArray\n\t\t};\n\t}\n}\n\nclass AESEncrypt {\n\n\tconstructor(password, strength) {\n\t\tObject.assign(this, {\n\t\t\tpassword,\n\t\t\tstrength: strength - 1,\n\t\t\tpendingInput: new Uint8Array(0)\n\t\t});\n\t}\n\n\tasync append(input) {\n\t\tconst aesCrypto = this;\n\t\tlet preamble = new Uint8Array(0);\n\t\tif (aesCrypto.password) {\n\t\t\tpreamble = await createEncryptionKeys(aesCrypto, aesCrypto.password);\n\t\t\taesCrypto.password = null;\n\t\t\taesCrypto.aesCtrGladman = new CtrGladman(new Aes(aesCrypto.keys.key), Array.from(COUNTER_DEFAULT_VALUE));\n\t\t\taesCrypto.hmac = new HmacSha1(aesCrypto.keys.authentication);\n\t\t}\n\t\tconst output = new Uint8Array(preamble.length + input.length - (input.length % BLOCK_LENGTH));\n\t\toutput.set(preamble, 0);\n\t\treturn append(aesCrypto, input, output, preamble.length, 0);\n\t}\n\n\tflush() {\n\t\tconst aesCrypto = this;\n\t\tlet encryptedChunkArray = new Uint8Array(0);\n\t\tif (aesCrypto.pendingInput.length) {\n\t\t\tconst encryptedChunk = aesCrypto.aesCtrGladman.update(codecBytes.toBits(aesCrypto.pendingInput));\n\t\t\taesCrypto.hmac.update(encryptedChunk);\n\t\t\tencryptedChunkArray = codecBytes.fromBits(encryptedChunk);\n\t\t}\n\t\tconst signature = subarray(codecBytes.fromBits(aesCrypto.hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\treturn {\n\t\t\tdata: concat(encryptedChunkArray, signature),\n\t\t\tsignature\n\t\t};\n\t}\n}\n\nexport {\n\tAESDecrypt,\n\tAESEncrypt,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst inputLength = input.length - paddingEnd;\n\tif (aesCrypto.pendingInput.length) {\n\t\tinput = concat(aesCrypto.pendingInput, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = codecBytes.toBits(subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\taesCrypto.hmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = aesCrypto.aesCtrGladman.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\taesCrypto.hmac.update(outputChunk);\n\t\t}\n\t\toutput.set(codecBytes.fromBits(outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pendingInput = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, preambleArray, password) {\n\tawait createKeys(decrypt, password, subarray(preambleArray, 0, SALT_LENGTH[decrypt.strength]));\n\tconst passwordVerification = subarray(preambleArray, SALT_LENGTH[decrypt.strength]);\n\tconst passwordVerificationKey = decrypt.keys.passwordVerification;\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[encrypt.strength]));\n\tawait createKeys(encrypt, password, salt);\n\treturn concat(salt, encrypt.keys.passwordVerification);\n}\n\nasync function createKeys(target, password, salt) {\n\tconst encodedPassword = encodeText(password);\n\tconst basekey = await importKey(RAW_FORMAT, encodedPassword, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), basekey, 8 * ((KEY_LENGTH[target.strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\ttarget.keys = {\n\t\tkey: codecBytes.toBits(subarray(compositeKey, 0, KEY_LENGTH[target.strength])),\n\t\tauthentication: codecBytes.toBits(subarray(compositeKey, KEY_LENGTH[target.strength], KEY_LENGTH[target.strength] * 2)),\n\t\tpasswordVerification: subarray(compositeKey, KEY_LENGTH[target.strength] * 2)\n\t};\n}\n\nfunction getRandomValues(array) {\n\tif (CRYPTO_API_SUPPORTED && typeof crypto.getRandomValues == \"function\") {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof crypto.subtle.importKey == \"function\") {\n\t\treturn crypto.subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof crypto.subtle.deriveBits == \"function\") {\n\t\treturn await crypto.subtle.deriveBits(algorithm, baseKey, length);\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nimport Crc32 from \"./crc32.js\";\nimport { ERR_INVALID_PASSWORD } from \"./aes-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecrypt {\n\n\tconstructor(password, passwordVerification) {\n\t\tconst zipCrypto = this;\n\t\tObject.assign(zipCrypto, {\n\t\t\tpassword,\n\t\t\tpasswordVerification\n\t\t});\n\t\tcreateKeys(zipCrypto, password);\n\t}\n\n\tappend(input) {\n\t\tconst zipCrypto = this;\n\t\tif (zipCrypto.password) {\n\t\t\tconst decryptedHeader = decrypt(zipCrypto, input.subarray(0, HEADER_LENGTH));\n\t\t\tzipCrypto.password = null;\n\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\n\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t}\n\t\t\tinput = input.subarray(HEADER_LENGTH);\n\t\t}\n\t\treturn decrypt(zipCrypto, input);\n\t}\n\n\tflush() {\n\t\treturn {\n\t\t\tvalid: true,\n\t\t\tdata: new Uint8Array(0)\n\t\t};\n\t}\n}\n\nclass ZipCryptoEncrypt {\n\n\tconstructor(password, passwordVerification) {\n\t\tconst zipCrypto = this;\n\t\tObject.assign(zipCrypto, {\n\t\t\tpassword,\n\t\t\tpasswordVerification\n\t\t});\n\t\tcreateKeys(zipCrypto, password);\n\t}\n\n\tappend(input) {\n\t\tconst zipCrypto = this;\n\t\tlet output;\n\t\tlet offset;\n\t\tif (zipCrypto.password) {\n\t\t\tzipCrypto.password = null;\n\t\t\tconst header = crypto.getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\toutput = new Uint8Array(input.length + header.length);\n\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\toffset = HEADER_LENGTH;\n\t\t} else {\n\t\t\toutput = new Uint8Array(input.length);\n\t\t\toffset = 0;\n\t\t}\n\t\toutput.set(encrypt(zipCrypto, input), offset);\n\t\treturn output;\n\t}\n\n\tflush() {\n\t\treturn {\n\t\t\tdata: new Uint8Array(0)\n\t\t};\n\t}\n}\n\nexport {\n\tZipCryptoDecrypt,\n\tZipCryptoEncrypt,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\ttarget.keys = [0x12345678, 0x23456789, 0x34567890];\n\ttarget.crcKey0 = new Crc32(target.keys[0]);\n\ttarget.crcKey2 = new Crc32(target.keys[2]);\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\ttarget.crcKey0.append([byte]);\n\ttarget.keys[0] = ~target.crcKey0.get();\n\ttarget.keys[1] = getInt32(target.keys[1] + getInt8(target.keys[0]));\n\ttarget.keys[1] = getInt32(Math.imul(target.keys[1], 134775813) + 1);\n\ttarget.crcKey2.append([target.keys[1] >>> 24]);\n\ttarget.keys[2] = ~target.crcKey2.get();\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Crc32 from \"./crc32.js\";\nimport { AESEncrypt, AESDecrypt, ERR_INVALID_PASSWORD } from \"./aes-crypto.js\";\nimport { ZipCryptoDecrypt, ZipCryptoEncrypt } from \"./zip-crypto.js\";\n\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\n\nclass Inflate {\n\n\tconstructor(codecConstructor, {\n\t\tsignature,\n\t\tpassword,\n\t\tsigned,\n\t\tcompressed,\n\t\tzipCrypto,\n\t\tpasswordVerification,\n\t\tencryptionStrength\n\t}, { chunkSize }) {\n\t\tconst encrypted = Boolean(password);\n\t\tObject.assign(this, {\n\t\t\tsignature,\n\t\t\tencrypted,\n\t\t\tsigned,\n\t\t\tcompressed,\n\t\t\tinflate: compressed && new codecConstructor({ chunkSize }),\n\t\t\tcrc32: signed && new Crc32(),\n\t\t\tzipCrypto,\n\t\t\tdecrypt: encrypted && zipCrypto ?\n\t\t\t\tnew ZipCryptoDecrypt(password, passwordVerification) :\n\t\t\t\tnew AESDecrypt(password, signed, encryptionStrength)\n\t\t});\n\t}\n\n\tasync append(data) {\n\t\tconst codec = this;\n\t\tif (codec.encrypted && data.length) {\n\t\t\tdata = await codec.decrypt.append(data);\n\t\t}\n\t\tif (codec.compressed && data.length) {\n\t\t\tdata = await codec.inflate.append(data);\n\t\t}\n\t\tif ((!codec.encrypted || codec.zipCrypto) && codec.signed && data.length) {\n\t\t\tcodec.crc32.append(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tasync flush() {\n\t\tconst codec = this;\n\t\tlet signature;\n\t\tlet data = new Uint8Array(0);\n\t\tif (codec.encrypted) {\n\t\t\tconst result = codec.decrypt.flush();\n\t\t\tif (!result.valid) {\n\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t}\n\t\t\tdata = result.data;\n\t\t}\n\t\tif ((!codec.encrypted || codec.zipCrypto) && codec.signed) {\n\t\t\tconst dataViewSignature = new DataView(new Uint8Array(4).buffer);\n\t\t\tsignature = codec.crc32.get();\n\t\t\tdataViewSignature.setUint32(0, signature);\n\t\t\tif (codec.signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t}\n\t\t}\n\t\tif (codec.compressed) {\n\t\t\tdata = (await codec.inflate.append(data)) || new Uint8Array(0);\n\t\t\tawait codec.inflate.flush();\n\t\t}\n\t\treturn { data, signature };\n\t}\n}\n\nclass Deflate {\n\n\tconstructor(codecConstructor, {\n\t\tencrypted,\n\t\tsigned,\n\t\tcompressed,\n\t\tlevel,\n\t\tzipCrypto,\n\t\tpassword,\n\t\tpasswordVerification,\n\t\tencryptionStrength\n\t}, { chunkSize }) {\n\t\tObject.assign(this, {\n\t\t\tencrypted,\n\t\t\tsigned,\n\t\t\tcompressed,\n\t\t\tdeflate: compressed && new codecConstructor({ level: level || 5, chunkSize }),\n\t\t\tcrc32: signed && new Crc32(),\n\t\t\tzipCrypto,\n\t\t\tencrypt: encrypted && zipCrypto ?\n\t\t\t\tnew ZipCryptoEncrypt(password, passwordVerification) :\n\t\t\t\tnew AESEncrypt(password, encryptionStrength)\n\t\t});\n\t}\n\n\tasync append(inputData) {\n\t\tconst codec = this;\n\t\tlet data = inputData;\n\t\tif (codec.compressed && inputData.length) {\n\t\t\tdata = await codec.deflate.append(inputData);\n\t\t}\n\t\tif (codec.encrypted && data.length) {\n\t\t\tdata = await codec.encrypt.append(data);\n\t\t}\n\t\tif ((!codec.encrypted || codec.zipCrypto) && codec.signed && inputData.length) {\n\t\t\tcodec.crc32.append(inputData);\n\t\t}\n\t\treturn data;\n\t}\n\n\tasync flush() {\n\t\tconst codec = this;\n\t\tlet signature;\n\t\tlet data = new Uint8Array(0);\n\t\tif (codec.compressed) {\n\t\t\tdata = (await codec.deflate.flush()) || new Uint8Array(0);\n\t\t}\n\t\tif (codec.encrypted) {\n\t\t\tdata = await codec.encrypt.append(data);\n\t\t\tconst result = codec.encrypt.flush();\n\t\t\tsignature = result.signature;\n\t\t\tconst newData = new Uint8Array(data.length + result.data.length);\n\t\t\tnewData.set(data, 0);\n\t\t\tnewData.set(result.data, data.length);\n\t\t\tdata = newData;\n\t\t}\n\t\tif ((!codec.encrypted || codec.zipCrypto) && codec.signed) {\n\t\t\tsignature = codec.crc32.get();\n\t\t}\n\t\treturn { data, signature };\n\t}\n}\n\nexport {\n\tInflate,\n\tDeflate,\n\tcreateCodec,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n};\n\nfunction createCodec(codecConstructor, options, config) {\n\tif (options.codecType.startsWith(CODEC_DEFLATE)) {\n\t\treturn new Deflate(codecConstructor, options, config);\n\t} else if (options.codecType.startsWith(CODEC_INFLATE)) {\n\t\treturn new Inflate(codecConstructor, options, config);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL */\n\nimport { createCodec } from \"./codec.js\";\n\nconst MESSAGE_INIT = \"init\";\nconst MESSAGE_APPEND = \"append\";\nconst MESSAGE_FLUSH = \"flush\";\nconst MESSAGE_EVENT_TYPE = \"message\";\n\nlet classicWorkersSupported = true;\n\nexport default (workerData, codecConstructor, options, config, onTaskFinished, webWorker, scripts) => {\n\tObject.assign(workerData, {\n\t\tbusy: true,\n\t\tcodecConstructor,\n\t\toptions: Object.assign({}, options),\n\t\tscripts,\n\t\tterminate() {\n\t\t\tif (workerData.worker && !workerData.busy) {\n\t\t\t\tworkerData.worker.terminate();\n\t\t\t\tworkerData.interface = null;\n\t\t\t}\n\t\t},\n\t\tonTaskFinished() {\n\t\t\tworkerData.busy = false;\n\t\t\tonTaskFinished(workerData);\n\t\t}\n\t});\n\treturn webWorker ? createWebWorkerInterface(workerData, config) : createWorkerInterface(workerData, config);\n};\n\nfunction createWorkerInterface(workerData, config) {\n\tconst interfaceCodec = createCodec(workerData.codecConstructor, workerData.options, config);\n\treturn {\n\t\tasync append(data) {\n\t\t\ttry {\n\t\t\t\treturn await interfaceCodec.append(data);\n\t\t\t} catch (error) {\n\t\t\t\tworkerData.onTaskFinished();\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t},\n\t\tasync flush() {\n\t\t\ttry {\n\t\t\t\treturn await interfaceCodec.flush();\n\t\t\t} finally {\n\t\t\t\tworkerData.onTaskFinished();\n\t\t\t}\n\t\t},\n\t\tabort() {\n\t\t\tworkerData.onTaskFinished();\n\t\t}\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, config) {\n\tlet messageTask;\n\tconst workerOptions = { type: \"module\" };\n\tif (!workerData.interface) {\n\t\tif (!classicWorkersSupported) {\n\t\t\tworkerData.worker = getWorker(workerOptions, config.baseURL);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tworkerData.worker = getWorker({}, config.baseURL);\n\t\t\t} catch (error) {\n\t\t\t\tclassicWorkersSupported = false;\n\t\t\t\tworkerData.worker = getWorker(workerOptions, config.baseURL);\n\t\t\t}\n\t\t}\n\t\tworkerData.worker.addEventListener(MESSAGE_EVENT_TYPE, onMessage, false);\n\t\tworkerData.interface = {\n\t\t\tappend(data) {\n\t\t\t\treturn initAndSendMessage({ type: MESSAGE_APPEND, data });\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\treturn initAndSendMessage({ type: MESSAGE_FLUSH });\n\t\t\t},\n\t\t\tabort() {\n\t\t\t\tworkerData.onTaskFinished();\n\t\t\t}\n\t\t};\n\t}\n\treturn workerData.interface;\n\n\tfunction getWorker(options, baseURL) {\n\t\tlet url, scriptUrl;\n\t\turl = workerData.scripts[0];\n\t\tif (typeof url == \"function\") {\n\t\t\turl = url();\n\t\t}\n\t\ttry {\n\t\t\tscriptUrl = new URL(url, baseURL);\n\t\t} catch (error) {\n\t\t\tscriptUrl = url;\n\t\t}\n\t\treturn new Worker(scriptUrl, options);\n\t}\n\n\tasync function initAndSendMessage(message) {\n\t\tif (!messageTask) {\n\t\t\tconst options = workerData.options;\n\t\t\tconst scripts = workerData.scripts.slice(1);\n\t\t\tawait sendMessage({ scripts, type: MESSAGE_INIT, options, config: { chunkSize: config.chunkSize } });\n\t\t}\n\t\treturn sendMessage(message);\n\t}\n\n\tfunction sendMessage(message) {\n\t\tconst worker = workerData.worker;\n\t\tconst result = new Promise((resolve, reject) => messageTask = { resolve, reject });\n\t\ttry {\n\t\t\tif (message.data) {\n\t\t\t\ttry {\n\t\t\t\t\tmessage.data = message.data.buffer;\n\t\t\t\t\tworker.postMessage(message, [message.data]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tworker.postMessage(message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tmessageTask.reject(error);\n\t\t\tmessageTask = null;\n\t\t\tworkerData.onTaskFinished();\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction onMessage(event) {\n\t\tconst message = event.data;\n\t\tif (messageTask) {\n\t\t\tconst reponseError = message.error;\n\t\t\tconst type = message.type;\n\t\t\tif (reponseError) {\n\t\t\t\tconst error = new Error(reponseError.message);\n\t\t\t\terror.stack = reponseError.stack;\n\t\t\t\tmessageTask.reject(error);\n\t\t\t\tmessageTask = null;\n\t\t\t\tworkerData.onTaskFinished();\n\t\t\t} else if (type == MESSAGE_INIT || type == MESSAGE_FLUSH || type == MESSAGE_APPEND) {\n\t\t\t\tconst data = message.data;\n\t\t\t\tif (type == MESSAGE_FLUSH) {\n\t\t\t\t\tmessageTask.resolve({ data: new Uint8Array(data), signature: message.signature });\n\t\t\t\t\tmessageTask = null;\n\t\t\t\t\tworkerData.onTaskFinished();\n\t\t\t\t} else {\n\t\t\t\t\tmessageTask.resolve(data && new Uint8Array(data));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { CODEC_INFLATE, CODEC_DEFLATE, ERR_INVALID_SIGNATURE, ERR_INVALID_PASSWORD } from \"./codec.js\";\nimport getWorker from \"./codec-pool-worker.js\";\n\nlet pool = [];\nlet pendingRequests = [];\n\nexport {\n\tcreateCodec,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n};\n\nfunction createCodec(codecConstructor, options, config) {\n\tconst streamCopy = !options.compressed && !options.signed && !options.encrypted;\n\tconst webWorker = !streamCopy && (options.useWebWorkers || (options.useWebWorkers === undefined && config.useWebWorkers));\n\tconst scripts = webWorker && config.workerScripts ? config.workerScripts[options.codecType] : [];\n\tif (pool.length < config.maxWorkers) {\n\t\tconst workerData = {};\n\t\tpool.push(workerData);\n\t\treturn getWorker(workerData, codecConstructor, options, config, onTaskFinished, webWorker, scripts);\n\t} else {\n\t\tconst workerData = pool.find(workerData => !workerData.busy);\n\t\tif (workerData) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\treturn getWorker(workerData, codecConstructor, options, config, onTaskFinished, webWorker, scripts);\n\t\t} else {\n\t\t\treturn new Promise(resolve => pendingRequests.push({ resolve, codecConstructor, options, webWorker, scripts }));\n\t\t}\n\t}\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, codecConstructor, options, webWorker, scripts }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(getWorker(workerData, codecConstructor, options, config, onTaskFinished, webWorker, scripts));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tif (Number.isFinite(config.terminateWorkerTimeout) && config.terminateWorkerTimeout >= 0) {\n\t\t\t\tworkerData.terminateTimeout = setTimeout(() => {\n\t\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\t\tworkerData.terminate();\n\t\t\t\t}, config.terminateWorkerTimeout);\n\t\t\t}\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tif (workerData.terminateTimeout) {\n\t\tclearTimeout(workerData.terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nfunction terminateWorkers() {\n\tpool.forEach(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\tworkerData.terminate();\n\t});\n}","\n/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport default (library, options = {}, registerDataHandler) => {\n\treturn {\n\t\tDeflate: createCodecClass(library.Deflate, options.deflate, registerDataHandler),\n\t\tInflate: createCodecClass(library.Inflate, options.inflate, registerDataHandler)\n\t};\n};\n\nfunction createCodecClass(constructor, constructorOptions, registerDataHandler) {\n\treturn class {\n\n\t\tconstructor(options) {\n\t\t\tconst codecAdapter = this;\n\t\t\tconst onData = data => {\n\t\t\t\tif (codecAdapter.pendingData) {\n\t\t\t\t\tconst pendingData = codecAdapter.pendingData;\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(pendingData.length + data.length);\n\t\t\t\t\tcodecAdapter.pendingData.set(pendingData, 0);\n\t\t\t\t\tcodecAdapter.pendingData.set(data, pendingData.length);\n\t\t\t\t} else {\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(data);\n\t\t\t\t}\n\t\t\t};\n\t\t\tcodecAdapter.codec = new constructor(Object.assign({}, constructorOptions, options));\n\t\t\tregisterDataHandler(codecAdapter.codec, onData);\n\t\t}\n\t\tasync append(data) {\n\t\t\tthis.codec.push(data);\n\t\t\treturn getResponse(this);\n\t\t}\n\t\tasync flush() {\n\t\t\tthis.codec.push(new Uint8Array(0), true);\n\t\t\treturn getResponse(this);\n\t\t}\n\t};\n\n\tfunction getResponse(codec) {\n\t\tif (codec.pendingData) {\n\t\t\tconst output = codec.pendingData;\n\t\t\tcodec.pendingData = null;\n\t\t\treturn output;\n\t\t} else {\n\t\t\treturn new Uint8Array(0);\n\t\t}\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, FileReader, atob, btoa, XMLHttpRequest, document, fetch */\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n}\n\nclass Writer extends Stream {\n\n\twriteUint8Array(array) {\n\t\tthis.size += array.length;\n\t}\n}\n\nclass TextReader extends Reader {\n\n\tconstructor(text) {\n\t\tsuper();\n\t\tthis.blobReader = new BlobReader(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tthis.blobReader.init();\n\t\tthis.size = this.blobReader.size;\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\treturn this.blobReader.readUint8Array(offset, length);\n\t}\n}\n\nclass TextWriter extends Writer {\n\n\tconstructor(encoding) {\n\t\tsuper();\n\t\tthis.encoding = encoding;\n\t\tthis.blob = new Blob([], { type: CONTENT_TYPE_TEXT_PLAIN });\n\t}\n\n\tasync writeUint8Array(array) {\n\t\tsuper.writeUint8Array(array);\n\t\tthis.blob = new Blob([this.blob, array.buffer], { type: CONTENT_TYPE_TEXT_PLAIN });\n\t}\n\n\tgetData() {\n\t\tif (this.blob.text) {\n\t\t\treturn this.blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treader.onload = event => resolve(event.target.result);\n\t\t\t\treader.onerror = () => reject(reader.error);\n\t\t\t\treader.readAsText(this.blob, this.encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tthis.dataURI = dataURI;\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tthis.dataStart = dataURI.indexOf(\",\") + 1;\n\t\tthis.size = Math.floor((dataEnd - this.dataStart) * 0.75);\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(this.dataURI.substring(start + this.dataStart, Math.ceil((offset + length) / 3) * 4 + this.dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t}\n\t\treturn dataArray;\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tthis.data = \"data:\" + (contentType || \"\") + \";base64,\";\n\t\tthis.pending = [];\n\t}\n\n\tasync writeUint8Array(array) {\n\t\tsuper.writeUint8Array(array);\n\t\tlet indexArray = 0;\n\t\tlet dataString = this.pending;\n\t\tconst delta = this.pending.length;\n\t\tthis.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\tthis.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length > 2) {\n\t\t\tthis.data += btoa(dataString);\n\t\t} else {\n\t\t\tthis.pending = dataString;\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tthis.blob = blob;\n\t\tthis.size = blob.size;\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tif (this.blob.arrayBuffer) {\n\t\t\treturn new Uint8Array(await this.blob.slice(offset, offset + length).arrayBuffer());\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treader.onload = event => resolve(new Uint8Array(event.target.result));\n\t\t\t\treader.onerror = () => reject(reader.error);\n\t\t\t\treader.readAsArrayBuffer(this.blob.slice(offset, offset + length));\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass BlobWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tthis.contentType = contentType;\n\t\tthis.arrayBuffers = [];\n\t}\n\n\tasync writeUint8Array(array) {\n\t\tsuper.writeUint8Array(array);\n\t\tthis.arrayBuffers.push(array.buffer);\n\t}\n\n\tgetData() {\n\t\tif (!this.blob) {\n\t\t\tthis.blob = new Blob(this.arrayBuffers, { type: this.contentType });\n\t\t}\n\t\treturn this.blob;\n\t}\n}\n\nclass WritableStreamWriter extends Writer {\n\tconstructor(writableStream) {\n\t\tsuper();\n\t\tthis.writableStream = writableStream;\n\t\tthis.writer = writableStream.getWriter();\n\t}\n\n\tasync writeUint8Array(array) {\n\t\tawait this.writer.ready;\n\t\treturn this.writer.write(array);\n\t}\n\n\tasync getData() {\n\t\tawait this.writer.ready;\n\t\tawait this.writer.close();\n\t\treturn this.writableStream;\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tthis.url = url;\n\t\tthis.preventHeadRequest = options.preventHeadRequest;\n\t\tthis.useRangeHeader = options.useRangeHeader;\n\t\tthis.forceRangeRequests = options.forceRangeRequests;\n\t\tthis.options = Object.assign({}, options);\n\t\tdelete this.options.preventHeadRequest;\n\t\tdelete this.options.useRangeHeader;\n\t\tdelete this.options.forceRangeRequests;\n\t\tdelete this.options.useXHR;\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t}\n\n\tasync readUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tthis.url = url;\n\t\tthis.preventHeadRequest = options.preventHeadRequest;\n\t\tthis.useRangeHeader = options.useRangeHeader;\n\t\tthis.forceRangeRequests = options.forceRangeRequests;\n\t\tthis.options = options;\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n\n\tasync readUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tif (isHttpFamily(httpReader.url) && (httpReader.useRangeHeader || httpReader.forceRangeRequests)) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader));\n\t\tif (!httpReader.forceRangeRequests && response.headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = response.headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === undefined) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tif (httpReader.useRangeHeader || httpReader.forceRangeRequests) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\tif (response.status != 206) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t}\n\t\treturn new Uint8Array(await response.arrayBuffer());\n\t} else {\n\t\tif (!httpReader.data) {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + index + \"-\" + (index + length - 1) });\n}\n\nfunction getHeaders(httpReader) {\n\tlet headers = httpReader.options.headers;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail.error), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tthis.url = url;\n\t\tif (options.useXHR) {\n\t\t\tthis.reader = new XHRReader(url, options);\n\t\t} else {\n\t\t\tthis.reader = new FetchReader(url, options);\n\t\t}\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait this.reader.init();\n\t}\n\n\tasync readUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tthis.array = array;\n\t\tthis.size = array.length;\n\t}\n\n\tasync readUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.array = new Uint8Array(0);\n\t}\n\n\tasync writeUint8Array(array) {\n\t\tsuper.writeUint8Array(array);\n\t\tconst previousArray = this.array;\n\t\tthis.array = new Uint8Array(previousArray.length + array.length);\n\t\tthis.array.set(previousArray);\n\t\tthis.array.set(array, previousArray.length);\n\t}\n\n\tgetData() {\n\t\treturn this.array;\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tif (typeof document != \"undefined\") {\n\t\tconst anchor = document.createElement(\"a\");\n\t\tanchor.href = url;\n\t\treturn anchor.protocol == \"http:\" || anchor.protocol == \"https:\";\n\t} else {\n\t\treturn /^https?:\\/\\//i.test(url);\n\t}\n}\n\nexport {\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tWritableStreamWriter,\n\tERR_HTTP_RANGE\n};\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = 0x08074b50;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst ZIP64_TOTAL_NUMBER_OF_DISKS = 1;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\n\nconst BITFLAG_ENCRYPTED = 0x01;\nconst BITFLAG_LEVEL = 0x06;\nconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\nconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tZIP64_TOTAL_NUMBER_OF_DISKS,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\n\nexport default stringValue => {\n\tlet result = \"\";\n\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\tresult += CP437[stringValue[indexCharacter]];\n\t}\n\treturn result;\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder, FileReader, Blob */\n\nimport decodeCP437 from \"./cp437-decode.js\";\n\nexport default decodeText;\n\nasync function decodeText(value, encoding) {\n\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\n\t\treturn decodeCP437(value);\n\t} else if (typeof TextDecoder == \"undefined\") {\n\t\tconst fileReader = new FileReader();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfileReader.onload = event => resolve(event.target.result);\n\t\t\tfileReader.onerror = () => reject(fileReader.error);\n\t\t\tfileReader.readAsText(new Blob([value]));\n\t\t});\n\t} else {\n\t\treturn new TextDecoder(encoding).decode(value);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MINIMUM_CHUNK_SIZE = 64;\nconst ERR_ABORT = \"Abort error\";\n\nexport {\n\tERR_ABORT,\n\tprocessData\n};\n\nasync function processData(codec, reader, writer, offset, inputLength, config, options) {\n\tconst chunkSize = Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n\treturn processChunk();\n\n\tasync function processChunk(chunkOffset = 0, outputLength = 0) {\n\t\tconst signal = options.signal;\n\t\tif (chunkOffset < inputLength) {\n\t\t\ttestAborted(signal, codec);\n\t\t\tconst inputData = await reader.readUint8Array(chunkOffset + offset, Math.min(chunkSize, inputLength - chunkOffset));\n\t\t\tconst chunkLength = inputData.length;\n\t\t\ttestAborted(signal, codec);\n\t\t\tconst data = await codec.append(inputData);\n\t\t\ttestAborted(signal, codec);\n\t\t\toutputLength += await writeData(writer, data);\n\t\t\tif (options.onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\toptions.onprogress(chunkOffset + chunkLength, inputLength);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn processChunk(chunkOffset + chunkSize, outputLength);\n\t\t} else {\n\t\t\tconst result = await codec.flush();\n\t\t\toutputLength += await writeData(writer, result.data);\n\t\t\treturn { signature: result.signature, length: outputLength };\n\t\t}\n\t}\n}\n\nfunction testAborted(signal, codec) {\n\tif (signal && signal.aborted) {\n\t\tcodec.abort();\n\t\tthrow new Error(ERR_ABORT);\n\t}\n}\n\nasync function writeData(writer, data) {\n\tif (data.length) {\n\t\tawait writer.writeUint8Array(data);\n\t}\n\treturn data.length;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAMES = [\n\t\"filename\", \"rawFilename\", \"directory\", \"encrypted\", \"compressedSize\", \"uncompressedSize\",\n\t\"lastModDate\", \"rawLastModDate\", \"comment\", \"rawComment\", \"signature\", \"extraField\",\n\t\"rawExtraField\", \"bitFlag\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\",\n\t\"extraFieldAES\", \"filenameUTF8\", \"commentUTF8\", \"offset\", \"zip64\", \"compressionMethod\",\n\t\"extraFieldNTFS\", \"lastAccessDate\", \"creationDate\", \"extraFieldExtendedTimestamp\",\n\t\"version\", \"versionMadeBy\", \"msDosCompatible\", \"internalFileAttribute\", \"externalFileAttribute\"];\n\nexport default class Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt */\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tDIRECTORY_SIGNATURE\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\nimport { createCodec, CODEC_INFLATE, ERR_INVALID_SIGNATURE, ERR_INVALID_PASSWORD } from \"./codecs/codec-pool.js\";\nimport decodeText from \"./util/decode-text.js\";\nimport Crc32 from \"./codecs/crc32.js\";\nimport { processData } from \"./engine.js\";\nimport Entry from \"./zip-entry.js\";\n\nconst ERR_BAD_FORMAT = \"File format is not recognized\";\nconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\nconst ERR_EOCDR_ZIP64_NOT_FOUND = \"End of Zip64 central directory not found\";\nconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\nconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\nconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\nconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\nconst ERR_ENCRYPTED = \"File contains encrypted entry\";\nconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\nconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\nconst CHARSET_UTF8 = \"utf-8\";\nconst CHARSET_CP437 = \"cp437\";\nconst ZIP64_PROPERTIES = [\"uncompressedSize\", \"compressedSize\", \"offset\"];\n\nclass ZipReader {\n\n\tconstructor(reader, options = {}) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\toptions,\n\t\t\tconfig: getConfiguration()\n\t\t});\n\t}\n\n\tasync getEntries(options = {}) {\n\t\tconst zipReader = this;\n\t\tconst reader = zipReader.reader;\n\t\tif (!reader.initialized) {\n\t\t\tawait reader.init();\n\t\t}\n\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\n\t\tif (!endOfDirectoryInfo) {\n\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\n\t\t}\n\t\tconst endOfDirectoryView = getDataView(endOfDirectoryInfo);\n\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\n\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\n\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\n\t\tlet prependedDataLength = 0;\n\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS) {\n\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\n\t\t\tconst endOfDirectoryLocatorView = getDataView(endOfDirectoryLocatorArray);\n\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) != ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\n\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH);\n\t\t\tlet endOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH);\n\t\t\t\tendOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t}\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\n\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\n\t\t\tdirectoryDataOffset -= directoryDataLength;\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tlet offset = 0;\n\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength);\n\t\tlet directoryView = getDataView(directoryArray);\n\t\tif (directoryDataLength) {\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength);\n\t\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t\t}\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst entries = [];\n\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\n\t\t\tconst fileEntry = new ZipEntry(reader, zipReader.config, zipReader.options);\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\n\t\t\t}\n\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\n\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\n\t\t\tconst filenameOffset = offset + 46;\n\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\n\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\n\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\n\t\t\tconst msDosCompatible = (versionMadeBy & 0) == 0;\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tversionMadeBy,\n\t\t\t\tmsDosCompatible,\n\t\t\t\tcompressedSize: 0,\n\t\t\t\tuncompressedSize: 0,\n\t\t\t\tcommentLength: getUint16(directoryView, offset + 32),\n\t\t\t\tdirectory: msDosCompatible && ((getUint8(directoryView, offset + 38) & FILE_ATTR_MSDOS_DIR_MASK) == FILE_ATTR_MSDOS_DIR_MASK),\n\t\t\t\toffset: getUint32(directoryView, offset + 42) + prependedDataLength,\n\t\t\t\tinternalFileAttribute: getUint32(directoryView, offset + 34),\n\t\t\t\texternalFileAttribute: getUint32(directoryView, offset + 38),\n\t\t\t\trawFilename: directoryArray.subarray(filenameOffset, extraFieldOffset),\n\t\t\t\tfilenameUTF8: languageEncodingFlag,\n\t\t\t\tcommentUTF8: languageEncodingFlag,\n\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset)\n\t\t\t});\n\t\t\tconst endOffset = commentOffset + fileEntry.commentLength;\n\t\t\tfileEntry.rawComment = directoryArray.subarray(commentOffset, endOffset);\n\t\t\tconst filenameEncoding = getOptionValue(zipReader, options, \"filenameEncoding\");\n\t\t\tconst commentEncoding = getOptionValue(zipReader, options, \"commentEncoding\");\n\t\t\tconst [filename, comment] = await Promise.all([\n\t\t\t\tdecodeText(fileEntry.rawFilename, fileEntry.filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437),\n\t\t\t\tdecodeText(fileEntry.rawComment, fileEntry.commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437)\n\t\t\t]);\n\t\t\tfileEntry.filename = filename;\n\t\t\tfileEntry.comment = comment;\n\t\t\tif (!fileEntry.directory && fileEntry.filename.endsWith(DIRECTORY_SIGNATURE)) {\n\t\t\t\tfileEntry.directory = true;\n\t\t\t}\n\t\t\tawait readCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\n\t\t\tconst entry = new Entry(fileEntry);\n\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, options);\n\t\t\tentries.push(entry);\n\t\t\toffset = endOffset;\n\t\t\tif (options.onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\toptions.onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn entries;\n\t}\n\n\tasync close() {\n\t}\n}\n\nexport {\n\tZipReader,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n};\n\nclass ZipEntry {\n\n\tconstructor(reader, config, options) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\tconfig,\n\t\t\toptions\n\t\t});\n\t}\n\n\tasync getData(writer, fileEntry, options = {}) {\n\t\tconst zipEntry = this;\n\t\tconst {\n\t\t\treader,\n\t\t\toffset,\n\t\t\textraFieldAES,\n\t\t\tcompressionMethod,\n\t\t\tconfig,\n\t\t\tbitFlag,\n\t\t\tsignature,\n\t\t\trawLastModDate,\n\t\t\tcompressedSize\n\t\t} = zipEntry;\n\t\tconst localDirectory = zipEntry.localDirectory = {};\n\t\tif (!reader.initialized) {\n\t\t\tawait reader.init();\n\t\t}\n\t\tlet dataArray = await readUint8Array(reader, offset, 30);\n\t\tconst dataView = getDataView(dataArray);\n\t\tlet password = getOptionValue(zipEntry, options, \"password\");\n\t\tpassword = password && password.length && password;\n\t\tif (extraFieldAES) {\n\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t\t}\n\t\t}\n\t\tif (compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t}\n\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\n\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\n\t\t}\n\t\treadCommonHeader(localDirectory, dataView, 4);\n\t\tdataArray = await readUint8Array(reader, offset, 30 + localDirectory.filenameLength + localDirectory.extraFieldLength);\n\t\tlocalDirectory.rawExtraField = dataArray.subarray(30 + localDirectory.filenameLength);\n\t\tawait readCommonFooter(zipEntry, localDirectory, dataView, 4);\n\t\tfileEntry.lastAccessDate = localDirectory.lastAccessDate;\n\t\tfileEntry.creationDate = localDirectory.creationDate;\n\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted;\n\t\tconst zipCrypto = encrypted && !extraFieldAES;\n\t\tif (encrypted) {\n\t\t\tif (!zipCrypto && extraFieldAES.strength === undefined) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\n\t\t\t} else if (!password) {\n\t\t\t\tthrow new Error(ERR_ENCRYPTED);\n\t\t\t}\n\t\t}\n\t\tconst codec = await createCodec(config.Inflate, {\n\t\t\tcodecType: CODEC_INFLATE,\n\t\t\tpassword,\n\t\t\tzipCrypto,\n\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\n\t\t\tsigned: getOptionValue(zipEntry, options, \"checkSignature\"),\n\t\t\tpasswordVerification: zipCrypto && (bitFlag.dataDescriptor ? ((rawLastModDate >>> 8) & 0xFF) : ((signature >>> 24) & 0xFF)),\n\t\t\tsignature,\n\t\t\tcompressed: compressionMethod != 0,\n\t\t\tencrypted,\n\t\t\tuseWebWorkers: getOptionValue(zipEntry, options, \"useWebWorkers\")\n\t\t}, config);\n\t\tif (!writer.initialized) {\n\t\t\tawait writer.init();\n\t\t}\n\t\tconst signal = getOptionValue(zipEntry, options, \"signal\");\n\t\tconst dataOffset = offset + 30 + localDirectory.filenameLength + localDirectory.extraFieldLength;\n\t\tawait processData(codec, reader, writer, dataOffset, compressedSize, config, { onprogress: options.onprogress, signal });\n\t\treturn writer.getData();\n\t}\n}\n\nfunction readCommonHeader(directory, dataView, offset) {\n\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\n\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\n\tconst rawLastModDate = getUint32(dataView, offset + 6);\n\tObject.assign(directory, {\n\t\tencrypted,\n\t\tversion: getUint16(dataView, offset),\n\t\tbitFlag: {\n\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\n\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\n\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\n\t\t},\n\t\trawLastModDate,\n\t\tlastModDate: getDate(rawLastModDate),\n\t\tfilenameLength: getUint16(dataView, offset + 22),\n\t\textraFieldLength: getUint16(dataView, offset + 24)\n\t});\n}\n\nasync function readCommonFooter(fileEntry, directory, dataView, offset) {\n\tconst rawExtraField = directory.rawExtraField;\n\tconst extraField = directory.extraField = new Map();\n\tconst rawExtraFieldView = getDataView(new Uint8Array(rawExtraField));\n\tlet offsetExtraField = 0;\n\ttry {\n\t\twhile (offsetExtraField < rawExtraField.length) {\n\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\n\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\n\t\t\textraField.set(type, {\n\t\t\t\ttype,\n\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\n\t\t\t});\n\t\t\toffsetExtraField += 4 + size;\n\t\t}\n\t} catch (error) {\n\t\t// ignored\n\t}\n\tconst compressionMethod = getUint16(dataView, offset + 4);\n\tdirectory.signature = getUint32(dataView, offset + 10);\n\tdirectory.uncompressedSize = getUint32(dataView, offset + 18);\n\tdirectory.compressedSize = getUint32(dataView, offset + 14);\n\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\n\tif (extraFieldZip64) {\n\t\treadExtraFieldZip64(extraFieldZip64, directory);\n\t\tdirectory.extraFieldZip64 = extraFieldZip64;\n\t}\n\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\n\tif (extraFieldUnicodePath) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodePath, \"filename\", \"rawFilename\", directory, fileEntry);\n\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\n\t}\n\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\n\tif (extraFieldUnicodeComment) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodeComment, \"comment\", \"rawComment\", directory, fileEntry);\n\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\n\t}\n\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\n\tif (extraFieldAES) {\n\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\n\t\tdirectory.extraFieldAES = extraFieldAES;\n\t} else {\n\t\tdirectory.compressionMethod = compressionMethod;\n\t}\n\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\n\tif (extraFieldNTFS) {\n\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\n\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\n\t}\n\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\tif (extraFieldExtendedTimestamp) {\n\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory);\n\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\n\t}\n}\n\nfunction readExtraFieldZip64(extraFieldZip64, directory) {\n\tdirectory.zip64 = true;\n\tconst extraFieldView = getDataView(extraFieldZip64.data);\n\textraFieldZip64.values = [];\n\tfor (let indexValue = 0; indexValue < Math.floor(extraFieldZip64.data.length / 8); indexValue++) {\n\t\textraFieldZip64.values.push(getBigUint64(extraFieldView, 0 + indexValue * 8));\n\t}\n\tconst missingProperties = ZIP64_PROPERTIES.filter(propertyName => directory[propertyName] == MAX_32_BITS);\n\tfor (let indexMissingProperty = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\n\t\textraFieldZip64[missingProperties[indexMissingProperty]] = extraFieldZip64.values[indexMissingProperty];\n\t}\n\tZIP64_PROPERTIES.forEach(propertyName => {\n\t\tif (directory[propertyName] == MAX_32_BITS) {\n\t\t\tif (extraFieldZip64[propertyName] !== undefined) {\n\t\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName];\n\t\t\t} else {\n\t\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t}\n\t});\n}\n\nasync function readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\n\tconst extraFieldView = getDataView(extraFieldUnicode.data);\n\textraFieldUnicode.version = getUint8(extraFieldView, 0);\n\textraFieldUnicode.signature = getUint32(extraFieldView, 1);\n\tconst crc32 = new Crc32();\n\tcrc32.append(fileEntry[rawPropertyName]);\n\tconst dataViewSignature = getDataView(new Uint8Array(4));\n\tdataViewSignature.setUint32(0, crc32.get(), true);\n\textraFieldUnicode[propertyName] = await decodeText(extraFieldUnicode.data.subarray(5));\n\textraFieldUnicode.valid = !fileEntry.bitFlag.languageEncodingFlag && extraFieldUnicode.signature == getUint32(dataViewSignature, 0);\n\tif (extraFieldUnicode.valid) {\n\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\n\t\tdirectory[propertyName + \"UTF8\"] = true;\n\t}\n}\n\nfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\n\tconst extraFieldView = getDataView(extraFieldAES.data);\n\textraFieldAES.vendorVersion = getUint8(extraFieldView, 0);\n\textraFieldAES.vendorId = getUint8(extraFieldView, 2);\n\tconst strength = getUint8(extraFieldView, 4);\n\textraFieldAES.strength = strength;\n\textraFieldAES.originalCompressionMethod = compressionMethod;\n\tdirectory.compressionMethod = extraFieldAES.compressionMethod = getUint16(extraFieldView, 5);\n}\n\nfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\n\tconst extraFieldView = getDataView(extraFieldNTFS.data);\n\tlet offsetExtraField = 4;\n\tlet tag1Data;\n\ttry {\n\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\n\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\n\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\n\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\n\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\n\t\t\t}\n\t\t\toffsetExtraField += 4 + attributeSize;\n\t\t}\n\t} catch (error) {\n\t\t// ignored\n\t}\n\ttry {\n\t\tif (tag1Data && tag1Data.length == 24) {\n\t\t\tconst tag1View = getDataView(tag1Data);\n\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\n\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\n\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\n\t\t\tObject.assign(extraFieldNTFS, {\n\t\t\t\trawLastModDate,\n\t\t\t\trawLastAccessDate,\n\t\t\t\trawCreationDate\n\t\t\t});\n\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\n\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\n\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\n\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\n\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\n\t\t\tObject.assign(directory, extraFieldData);\n\t\t}\n\t} catch (error) {\n\t\t// ignored\n\t}\n}\n\nfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory) {\n\tconst extraFieldView = getDataView(extraFieldExtendedTimestamp.data);\n\tconst flags = getUint8(extraFieldView, 0);\n\tconst timeProperties = [];\n\tconst timeRawProperties = [];\n\tif ((flags & 0x1) == 0x1) {\n\t\ttimeProperties.push(\"lastModDate\");\n\t\ttimeRawProperties.push(\"rawLastModDate\");\n\t}\n\tif ((flags & 0x2) == 0x2) {\n\t\ttimeProperties.push(\"lastAccessDate\");\n\t\ttimeRawProperties.push(\"rawLastAccessDate\");\n\t}\n\tif ((flags & 0x4) == 0x4) {\n\t\ttimeProperties.push(\"creationDate\");\n\t\ttimeRawProperties.push(\"rawCreationDate\");\n\t}\n\tlet offset = 1;\n\ttimeProperties.forEach((propertyName, indexProperty) => {\n\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\n\t\t\tconst time = getUint32(extraFieldView, offset);\n\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\n\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\n\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\n\t\t}\n\t\toffset += 4;\n\t});\n}\n\nasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\n\tconst signatureArray = new Uint8Array(4);\n\tconst signatureView = getDataView(signatureArray);\n\tsetUint32(signatureView, 0, signature);\n\tconst maximumBytes = minimumBytes + maximumLength;\n\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\n\n\tasync function seek(length) {\n\t\tconst offset = startOffset - length;\n\t\tconst bytes = await readUint8Array(reader, offset, length);\n\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\n\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\n\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\n\t\t\t\treturn {\n\t\t\t\t\toffset: offset + indexByte,\n\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getOptionValue(zipReader, options, name) {\n\treturn options[name] === undefined ? zipReader.options[name] : options[name];\n}\n\nfunction getDate(timeRaw) {\n\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\n\ttry {\n\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\n\t} catch (error) {\n\t\t// ignored\n\t}\n}\n\nfunction getDateNTFS(timeRaw) {\n\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\n}\n\nfunction getUint8(view, offset) {\n\treturn view.getUint8(offset);\n}\n\nfunction getUint16(view, offset) {\n\treturn view.getUint16(offset, true);\n}\n\nfunction getUint32(view, offset) {\n\treturn view.getUint32(offset, true);\n}\n\nfunction getBigUint64(view, offset) {\n\treturn Number(view.getBigUint64(offset, true));\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}\n\nfunction readUint8Array(reader, offset, size) {\n\treturn reader.readUint8Array(offset, size);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt, FileReader */\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_TOTAL_NUMBER_OF_DISKS,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\nimport { CODEC_DEFLATE, createCodec } from \"./codecs/codec-pool.js\";\nimport encodeText from \"./util/encode-text.js\";\nimport { BlobWriter } from \"./io.js\";\nimport { processData } from \"./engine.js\";\nimport Entry from \"./zip-entry.js\";\n\nconst ERR_DUPLICATED_NAME = \"File already exists\";\nconst ERR_INVALID_COMMENT = \"Zip file comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_COMMENT = \"File entry comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_NAME = \"File entry name exceeds 64KB\";\nconst ERR_INVALID_VERSION = \"Version exceeds 65535\";\nconst ERR_INVALID_ENCRYPTION_STRENGTH = \"The strength must equal 1, 2, or 3\";\nconst ERR_INVALID_EXTRAFIELD_TYPE = \"Extra field type exceeds 65535\";\nconst ERR_INVALID_EXTRAFIELD_DATA = \"Extra field data exceeds 64KB\";\nconst ERR_UNSUPPORTED_FORMAT = \"Zip64 is not supported\";\n\nconst EXTRAFIELD_DATA_AES = new Uint8Array([0x07, 0x00, 0x02, 0x00, 0x41, 0x45, 0x03, 0x00, 0x00]);\nconst EXTRAFIELD_LENGTH_ZIP64 = 24;\n\nlet workers = 0;\n\nclass ZipWriter {\n\n\tconstructor(writer, options = {}) {\n\t\tObject.assign(this, {\n\t\t\twriter,\n\t\t\toptions,\n\t\t\tconfig: getConfiguration(),\n\t\t\tfiles: new Map(),\n\t\t\toffset: writer.size,\n\t\t\tpendingCompressedSize: 0,\n\t\t\tpendingEntries: []\n\t\t});\n\t}\n\n\tasync add(name = \"\", reader, options = {}) {\n\t\tconst zipWriter = this;\n\t\tif (workers < zipWriter.config.maxWorkers) {\n\t\t\tworkers++;\n\t\t\ttry {\n\t\t\t\treturn await addFile(zipWriter, name, reader, options);\n\t\t\t} finally {\n\t\t\t\tworkers--;\n\t\t\t\tconst pendingEntry = zipWriter.pendingEntries.shift();\n\t\t\t\tif (pendingEntry) {\n\t\t\t\t\tzipWriter.add(pendingEntry.name, pendingEntry.reader, pendingEntry.options)\n\t\t\t\t\t\t.then(pendingEntry.resolve)\n\t\t\t\t\t\t.catch(pendingEntry.reject);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn new Promise((resolve, reject) => zipWriter.pendingEntries.push({ name, reader, options, resolve, reject }));\n\t\t}\n\t}\n\n\tasync close(comment = new Uint8Array(0), options = {}) {\n\t\tawait closeFile(this, comment, options);\n\t\treturn this.writer.getData();\n\t}\n}\n\nexport {\n\tZipWriter,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT\n};\n\nasync function addFile(zipWriter, name, reader, options) {\n\tname = name.trim();\n\tif (options.directory && (!name.endsWith(DIRECTORY_SIGNATURE))) {\n\t\tname += DIRECTORY_SIGNATURE;\n\t} else {\n\t\toptions.directory = name.endsWith(DIRECTORY_SIGNATURE);\n\t}\n\tif (zipWriter.files.has(name)) {\n\t\tthrow new Error(ERR_DUPLICATED_NAME);\n\t}\n\tconst rawFilename = encodeText(name);\n\tif (rawFilename.length > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_NAME);\n\t}\n\tconst comment = options.comment || \"\";\n\tconst rawComment = encodeText(comment);\n\tif (rawComment.length > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_COMMENT);\n\t}\n\tconst version = zipWriter.options.version || options.version || 0;\n\tif (version > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst versionMadeBy = zipWriter.options.versionMadeBy || options.versionMadeBy || 20;\n\tif (versionMadeBy > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst lastModDate = getOptionValue(zipWriter, options, \"lastModDate\") || new Date();\n\tconst lastAccessDate = getOptionValue(zipWriter, options, \"lastAccessDate\");\n\tconst creationDate = getOptionValue(zipWriter, options, \"creationDate\");\n\tconst password = getOptionValue(zipWriter, options, \"password\");\n\tconst encryptionStrength = getOptionValue(zipWriter, options, \"encryptionStrength\") || 3;\n\tconst zipCrypto = getOptionValue(zipWriter, options, \"zipCrypto\");\n\tif (password !== undefined && encryptionStrength !== undefined && (encryptionStrength < 1 || encryptionStrength > 3)) {\n\t\tthrow new Error(ERR_INVALID_ENCRYPTION_STRENGTH);\n\t}\n\tlet rawExtraField = new Uint8Array(0);\n\tconst extraField = options.extraField;\n\tif (extraField) {\n\t\tlet extraFieldSize = 0;\n\t\tlet offset = 0;\n\t\textraField.forEach(data => extraFieldSize += 4 + data.length);\n\t\trawExtraField = new Uint8Array(extraFieldSize);\n\t\textraField.forEach((data, type) => {\n\t\t\tif (type > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_TYPE);\n\t\t\t}\n\t\t\tif (data.length > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_DATA);\n\t\t\t}\n\t\t\tarraySet(rawExtraField, new Uint16Array([type]), offset);\n\t\t\tarraySet(rawExtraField, new Uint16Array([data.length]), offset + 2);\n\t\t\tarraySet(rawExtraField, data, offset + 4);\n\t\t\toffset += 4 + data.length;\n\t\t});\n\t}\n\tlet extendedTimestamp = getOptionValue(zipWriter, options, \"extendedTimestamp\");\n\tif (extendedTimestamp === undefined) {\n\t\textendedTimestamp = true;\n\t}\n\tlet maximumCompressedSize = 0;\n\tlet keepOrder = getOptionValue(zipWriter, options, \"keepOrder\");\n\tif (keepOrder === undefined) {\n\t\tkeepOrder = true;\n\t}\n\tlet uncompressedSize = 0;\n\tlet msDosCompatible = getOptionValue(zipWriter, options, \"msDosCompatible\");\n\tif (msDosCompatible === undefined) {\n\t\tmsDosCompatible = true;\n\t}\n\tconst internalFileAttribute = getOptionValue(zipWriter, options, \"internalFileAttribute\") || 0;\n\tconst externalFileAttribute = getOptionValue(zipWriter, options, \"externalFileAttribute\") || 0;\n\tif (reader) {\n\t\tif (!reader.initialized) {\n\t\t\tawait reader.init();\n\t\t}\n\t\tuncompressedSize = reader.size;\n\t\tmaximumCompressedSize = getMaximumCompressedSize(uncompressedSize);\n\t}\n\tlet zip64 = options.zip64 || zipWriter.options.zip64 || false;\n\tif (zipWriter.offset + zipWriter.pendingCompressedSize >= MAX_32_BITS ||\n\t\tuncompressedSize >= MAX_32_BITS ||\n\t\tmaximumCompressedSize >= MAX_32_BITS) {\n\t\tif (options.zip64 === false || zipWriter.options.zip64 === false || !keepOrder) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tzipWriter.pendingCompressedSize += maximumCompressedSize;\n\tawait Promise.resolve();\n\tconst level = getOptionValue(zipWriter, options, \"level\");\n\tconst useWebWorkers = getOptionValue(zipWriter, options, \"useWebWorkers\");\n\tconst bufferedWrite = getOptionValue(zipWriter, options, \"bufferedWrite\");\n\tlet dataDescriptor = getOptionValue(zipWriter, options, \"dataDescriptor\");\n\tlet dataDescriptorSignature = getOptionValue(zipWriter, options, \"dataDescriptorSignature\");\n\tconst signal = getOptionValue(zipWriter, options, \"signal\");\n\tif (dataDescriptor === undefined) {\n\t\tdataDescriptor = true;\n\t}\n\tif (dataDescriptor && dataDescriptorSignature === undefined) {\n\t\tdataDescriptorSignature = true;\n\t}\n\tconst fileEntry = await getFileEntry(zipWriter, name, reader, Object.assign({}, options, {\n\t\trawFilename,\n\t\trawComment,\n\t\tversion,\n\t\tversionMadeBy,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\trawExtraField,\n\t\tzip64,\n\t\tpassword,\n\t\tlevel,\n\t\tuseWebWorkers,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tzipCrypto,\n\t\tbufferedWrite,\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature,\n\t\tsignal,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute\n\t}));\n\tif (maximumCompressedSize) {\n\t\tzipWriter.pendingCompressedSize -= maximumCompressedSize;\n\t}\n\tObject.assign(fileEntry, { name, comment, extraField });\n\treturn new Entry(fileEntry);\n}\n\nasync function getFileEntry(zipWriter, name, reader, options) {\n\tconst files = zipWriter.files;\n\tconst writer = zipWriter.writer;\n\tconst previousFileEntry = Array.from(files.values()).pop();\n\tlet fileEntry = {};\n\tlet bufferedWrite;\n\tlet resolveLockUnbufferedWrite;\n\tlet resolveLockCurrentFileEntry;\n\tfiles.set(name, fileEntry);\n\ttry {\n\t\tlet lockPreviousFileEntry;\n\t\tlet fileWriter;\n\t\tlet lockCurrentFileEntry;\n\t\tif (options.keepOrder) {\n\t\t\tlockPreviousFileEntry = previousFileEntry && previousFileEntry.lock;\n\t\t}\n\t\tfileEntry.lock = lockCurrentFileEntry = new Promise(resolve => resolveLockCurrentFileEntry = resolve);\n\t\tif (options.bufferedWrite || zipWriter.lockWrite || !options.dataDescriptor) {\n\t\t\tfileWriter = new BlobWriter();\n\t\t\tfileWriter.init();\n\t\t\tbufferedWrite = true;\n\t\t} else {\n\t\t\tzipWriter.lockWrite = new Promise(resolve => resolveLockUnbufferedWrite = resolve);\n\t\t\tif (!writer.initialized) {\n\t\t\t\tawait writer.init();\n\t\t\t}\n\t\t\tfileWriter = writer;\n\t\t}\n\t\tfileEntry = await createFileEntry(reader, fileWriter, zipWriter.config, options);\n\t\tfileEntry.lock = lockCurrentFileEntry;\n\t\tfiles.set(name, fileEntry);\n\t\tfileEntry.filename = name;\n\t\tif (bufferedWrite) {\n\t\t\tlet indexWrittenData = 0;\n\t\t\tconst blob = fileWriter.getData();\n\t\t\tawait Promise.all([zipWriter.lockWrite, lockPreviousFileEntry]);\n\t\t\tlet pendingFileEntry;\n\t\t\tdo {\n\t\t\t\tpendingFileEntry = Array.from(files.values()).find(fileEntry => fileEntry.writingBufferedData);\n\t\t\t\tif (pendingFileEntry) {\n\t\t\t\t\tawait pendingFileEntry.lock;\n\t\t\t\t}\n\t\t\t} while (pendingFileEntry && pendingFileEntry.lock);\n\t\t\tfileEntry.writingBufferedData = true;\n\t\t\tif (!options.dataDescriptor) {\n\t\t\t\tconst headerLength = 26;\n\t\t\t\tconst arrayBuffer = await sliceAsArrayBuffer(blob, 0, headerLength);\n\t\t\t\tconst arrayBufferView = new DataView(arrayBuffer);\n\t\t\t\tif (!fileEntry.encrypted || options.zipCrypto) {\n\t\t\t\t\tsetUint32(arrayBufferView, 14, fileEntry.signature);\n\t\t\t\t}\n\t\t\t\tif (fileEntry.zip64) {\n\t\t\t\t\tsetUint32(arrayBufferView, 18, MAX_32_BITS);\n\t\t\t\t\tsetUint32(arrayBufferView, 22, MAX_32_BITS);\n\t\t\t\t} else {\n\t\t\t\t\tsetUint32(arrayBufferView, 18, fileEntry.compressedSize);\n\t\t\t\t\tsetUint32(arrayBufferView, 22, fileEntry.uncompressedSize);\n\t\t\t\t}\n\t\t\t\tawait writer.writeUint8Array(new Uint8Array(arrayBuffer));\n\t\t\t\tindexWrittenData = headerLength;\n\t\t\t}\n\t\t\tawait writeBlob(writer, blob, indexWrittenData);\n\t\t\tdelete fileEntry.writingBufferedData;\n\t\t}\n\t\tfileEntry.offset = zipWriter.offset;\n\t\tif (fileEntry.zip64) {\n\t\t\tconst rawExtraFieldZip64View = getDataView(fileEntry.rawExtraFieldZip64);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, 20, BigInt(fileEntry.offset));\n\t\t} else if (fileEntry.offset >= MAX_32_BITS) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t}\n\t\tzipWriter.offset += fileEntry.length;\n\t\treturn fileEntry;\n\t} catch (error) {\n\t\tif ((bufferedWrite && fileEntry.writingBufferedData) || (!bufferedWrite && fileEntry.dataWritten)) {\n\t\t\terror.corruptedEntry = zipWriter.hasCorruptedEntries = true;\n\t\t\tif (fileEntry.uncompressedSize) {\n\t\t\t\tzipWriter.offset += fileEntry.uncompressedSize;\n\t\t\t}\n\t\t}\n\t\tfiles.delete(name);\n\t\tthrow error;\n\t} finally {\n\t\tresolveLockCurrentFileEntry();\n\t\tif (resolveLockUnbufferedWrite) {\n\t\t\tresolveLockUnbufferedWrite();\n\t\t}\n\t}\n}\n\nasync function createFileEntry(reader, writer, config, options) {\n\tconst {\n\t\trawFilename,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature,\n\t\tdirectory,\n\t\tversion,\n\t\tversionMadeBy,\n\t\trawComment,\n\t\trawExtraField,\n\t\tuseWebWorkers,\n\t\tonprogress,\n\t\tsignal,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute\n\t} = options;\n\tconst encrypted = Boolean(password && password.length);\n\tconst compressed = level !== 0 && !directory;\n\tlet rawExtraFieldAES;\n\tif (encrypted && !zipCrypto) {\n\t\trawExtraFieldAES = new Uint8Array(EXTRAFIELD_DATA_AES.length + 2);\n\t\tconst extraFieldAESView = getDataView(rawExtraFieldAES);\n\t\tsetUint16(extraFieldAESView, 0, EXTRAFIELD_TYPE_AES);\n\t\tarraySet(rawExtraFieldAES, EXTRAFIELD_DATA_AES, 2);\n\t\tsetUint8(extraFieldAESView, 8, encryptionStrength);\n\t} else {\n\t\trawExtraFieldAES = new Uint8Array(0);\n\t}\n\tlet rawExtraFieldNTFS;\n\tlet rawExtraFieldExtendedTimestamp;\n\tif (extendedTimestamp) {\n\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9 + (lastAccessDate ? 4 : 0) + (creationDate ? 4 : 0));\n\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\tsetUint16(extraFieldExtendedTimestampView, 2, rawExtraFieldExtendedTimestamp.length - 4);\n\t\tconst extraFieldExtendedTimestampFlag = 0x1 + (lastAccessDate ? 0x2 : 0) + (creationDate ? 0x4 : 0);\n\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(options.lastModDate.getTime() / 1000));\n\t\tif (lastAccessDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 9, Math.floor(lastAccessDate.getTime() / 1000));\n\t\t}\n\t\tif (creationDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 13, Math.floor(creationDate.getTime() / 1000));\n\t\t}\n\t\ttry {\n\t\t\trawExtraFieldNTFS = new Uint8Array(36);\n\t\t\tconst extraFieldNTFSView = getDataView(rawExtraFieldNTFS);\n\t\t\tconst lastModTimeNTFS = getTimeNTFS(options.lastModDate);\n\t\t\tsetUint16(extraFieldNTFSView, 0, EXTRAFIELD_TYPE_NTFS);\n\t\t\tsetUint16(extraFieldNTFSView, 2, 32);\n\t\t\tsetUint16(extraFieldNTFSView, 8, EXTRAFIELD_TYPE_NTFS_TAG1);\n\t\t\tsetUint16(extraFieldNTFSView, 10, 24);\n\t\t\tsetBigUint64(extraFieldNTFSView, 12, lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 20, getTimeNTFS(lastAccessDate) || lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 28, getTimeNTFS(creationDate) || lastModTimeNTFS);\n\t\t} catch (error) {\n\t\t\trawExtraFieldNTFS = new Uint8Array(0);\n\t\t}\n\t} else {\n\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array(0);\n\t}\n\tconst fileEntry = {\n\t\tversion: version || VERSION_DEFLATE,\n\t\tversionMadeBy,\n\t\tzip64,\n\t\tdirectory: Boolean(directory),\n\t\tfilenameUTF8: true,\n\t\trawFilename,\n\t\tcommentUTF8: true,\n\t\trawComment,\n\t\trawExtraFieldZip64: zip64 ? new Uint8Array(EXTRAFIELD_LENGTH_ZIP64 + 4) : new Uint8Array(0),\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\trawExtraField,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute\n\t};\n\tlet uncompressedSize = fileEntry.uncompressedSize = 0;\n\tlet bitFlag = BITFLAG_LANG_ENCODING_FLAG;\n\tif (dataDescriptor) {\n\t\tbitFlag = bitFlag | BITFLAG_DATA_DESCRIPTOR;\n\t}\n\tlet compressionMethod = COMPRESSION_METHOD_STORE;\n\tif (compressed) {\n\t\tcompressionMethod = COMPRESSION_METHOD_DEFLATE;\n\t}\n\tif (zip64) {\n\t\tfileEntry.version = fileEntry.version > VERSION_ZIP64 ? fileEntry.version : VERSION_ZIP64;\n\t}\n\tif (encrypted) {\n\t\tbitFlag = bitFlag | BITFLAG_ENCRYPTED;\n\t\tif (!zipCrypto) {\n\t\t\tfileEntry.version = fileEntry.version > VERSION_AES ? fileEntry.version : VERSION_AES;\n\t\t\tcompressionMethod = COMPRESSION_METHOD_AES;\n\t\t\tif (compressed) {\n\t\t\t\tfileEntry.rawExtraFieldAES[9] = COMPRESSION_METHOD_DEFLATE;\n\t\t\t}\n\t\t}\n\t}\n\tfileEntry.compressionMethod = compressionMethod;\n\tconst headerArray = fileEntry.headerArray = new Uint8Array(26);\n\tconst headerView = getDataView(headerArray);\n\tsetUint16(headerView, 0, fileEntry.version);\n\tsetUint16(headerView, 2, bitFlag);\n\tsetUint16(headerView, 4, compressionMethod);\n\tconst dateArray = new Uint32Array(1);\n\tconst dateView = getDataView(dateArray);\n\tlet lastModDate;\n\tif (options.lastModDate < MIN_DATE) {\n\t\tlastModDate = MIN_DATE;\n\t} else if (options.lastModDate > MAX_DATE) {\n\t\tlastModDate = MAX_DATE;\n\t} else {\n\t\tlastModDate = options.lastModDate;\n\t}\n\tsetUint16(dateView, 0, (((lastModDate.getHours() << 6) | lastModDate.getMinutes()) << 5) | lastModDate.getSeconds() / 2);\n\tsetUint16(dateView, 2, ((((lastModDate.getFullYear() - 1980) << 4) | (lastModDate.getMonth() + 1)) << 5) | lastModDate.getDate());\n\tconst rawLastModDate = dateArray[0];\n\tsetUint32(headerView, 6, rawLastModDate);\n\tsetUint16(headerView, 22, rawFilename.length);\n\tconst extraFieldLength = rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length + rawExtraFieldNTFS.length + fileEntry.rawExtraField.length;\n\tsetUint16(headerView, 24, extraFieldLength);\n\tconst localHeaderArray = new Uint8Array(30 + rawFilename.length + extraFieldLength);\n\tconst localHeaderView = getDataView(localHeaderArray);\n\tsetUint32(localHeaderView, 0, LOCAL_FILE_HEADER_SIGNATURE);\n\tarraySet(localHeaderArray, headerArray, 4);\n\tarraySet(localHeaderArray, rawFilename, 30);\n\tarraySet(localHeaderArray, rawExtraFieldAES, 30 + rawFilename.length);\n\tarraySet(localHeaderArray, rawExtraFieldExtendedTimestamp, 30 + rawFilename.length + rawExtraFieldAES.length);\n\tarraySet(localHeaderArray, rawExtraFieldNTFS, 30 + rawFilename.length + rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length);\n\tarraySet(localHeaderArray, fileEntry.rawExtraField, 30 + rawFilename.length + rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length + rawExtraFieldNTFS.length);\n\tlet result;\n\tlet compressedSize = 0;\n\tif (reader) {\n\t\tuncompressedSize = fileEntry.uncompressedSize = reader.size;\n\t\tconst codec = await createCodec(config.Deflate, {\n\t\t\tcodecType: CODEC_DEFLATE,\n\t\t\tlevel,\n\t\t\tpassword,\n\t\t\tencryptionStrength,\n\t\t\tzipCrypto: encrypted && zipCrypto,\n\t\t\tpasswordVerification: encrypted && zipCrypto && (rawLastModDate >> 8) & 0xFF,\n\t\t\tsigned: true,\n\t\t\tcompressed,\n\t\t\tencrypted,\n\t\t\tuseWebWorkers\n\t\t}, config);\n\t\tawait writer.writeUint8Array(localHeaderArray);\n\t\tfileEntry.dataWritten = true;\n\t\tresult = await processData(codec, reader, writer, 0, uncompressedSize, config, { onprogress, signal });\n\t\tcompressedSize = result.length;\n\t} else {\n\t\tawait writer.writeUint8Array(localHeaderArray);\n\t\tfileEntry.dataWritten = true;\n\t}\n\tlet dataDescriptorArray = new Uint8Array(0);\n\tlet dataDescriptorView, dataDescriptorOffset = 0;\n\tif (dataDescriptor) {\n\t\tdataDescriptorArray = new Uint8Array(zip64 ? (dataDescriptorSignature ? 24 : 20) : (dataDescriptorSignature ? 16 : 12));\n\t\tdataDescriptorView = getDataView(dataDescriptorArray);\n\t\tif (dataDescriptorSignature) {\n\t\t\tdataDescriptorOffset = 4;\n\t\t\tsetUint32(dataDescriptorView, 0, DATA_DESCRIPTOR_RECORD_SIGNATURE);\n\t\t}\n\t}\n\tif (reader) {\n\t\tconst signature = result.signature;\n\t\tif ((!encrypted || zipCrypto) && signature !== undefined) {\n\t\t\tsetUint32(headerView, 10, signature);\n\t\t\tfileEntry.signature = signature;\n\t\t\tif (dataDescriptor) {\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset, signature);\n\t\t\t}\n\t\t}\n\t\tif (zip64) {\n\t\t\tconst rawExtraFieldZip64View = getDataView(fileEntry.rawExtraFieldZip64);\n\t\t\tsetUint16(rawExtraFieldZip64View, 0, EXTRAFIELD_TYPE_ZIP64);\n\t\t\tsetUint16(rawExtraFieldZip64View, 2, EXTRAFIELD_LENGTH_ZIP64);\n\t\t\tsetUint32(headerView, 14, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, 12, BigInt(compressedSize));\n\t\t\tsetUint32(headerView, 18, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, 4, BigInt(uncompressedSize));\n\t\t\tif (dataDescriptor) {\n\t\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 4, BigInt(compressedSize));\n\t\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 12, BigInt(uncompressedSize));\n\t\t\t}\n\t\t} else {\n\t\t\tsetUint32(headerView, 14, compressedSize);\n\t\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\t\tif (dataDescriptor) {\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 4, compressedSize);\n\t\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 8, uncompressedSize);\n\t\t\t}\n\t\t}\n\t}\n\tif (dataDescriptor) {\n\t\tawait writer.writeUint8Array(dataDescriptorArray);\n\t}\n\tconst length = localHeaderArray.length + compressedSize + dataDescriptorArray.length;\n\tObject.assign(fileEntry, { compressedSize, lastModDate, rawLastModDate, creationDate, lastAccessDate, encrypted, length });\n\treturn fileEntry;\n}\n\nasync function closeFile(zipWriter, comment, options) {\n\tconst writer = zipWriter.writer;\n\tconst files = zipWriter.files;\n\tlet offset = 0;\n\tlet directoryDataLength = 0;\n\tlet directoryOffset = zipWriter.offset;\n\tlet filesLength = files.size;\n\tfor (const [, fileEntry] of files) {\n\t\tdirectoryDataLength += 46 +\n\t\t\tfileEntry.rawFilename.length +\n\t\t\tfileEntry.rawComment.length +\n\t\t\tfileEntry.rawExtraFieldZip64.length +\n\t\t\tfileEntry.rawExtraFieldAES.length +\n\t\t\tfileEntry.rawExtraFieldExtendedTimestamp.length +\n\t\t\tfileEntry.rawExtraFieldNTFS.length +\n\t\t\tfileEntry.rawExtraField.length;\n\t}\n\tlet zip64 = options.zip64 || zipWriter.options.zip64 || false;\n\tif (directoryOffset >= MAX_32_BITS || directoryDataLength >= MAX_32_BITS || filesLength >= MAX_16_BITS) {\n\t\tif (options.zip64 === false || zipWriter.options.zip64 === false) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tconst directoryArray = new Uint8Array(directoryDataLength + (zip64 ? ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH : END_OF_CENTRAL_DIR_LENGTH));\n\tconst directoryView = getDataView(directoryArray);\n\tif (comment && comment.length) {\n\t\tif (comment.length <= MAX_16_BITS) {\n\t\t\tsetUint16(directoryView, offset + 20, comment.length);\n\t\t} else {\n\t\t\tthrow new Error(ERR_INVALID_COMMENT);\n\t\t}\n\t}\n\tfor (const [indexFileEntry, fileEntry] of Array.from(files.values()).entries()) {\n\t\tconst {\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawExtraField,\n\t\t\trawComment,\n\t\t\tversionMadeBy,\n\t\t\theaderArray,\n\t\t\tdirectory,\n\t\t\tzip64,\n\t\t\tmsDosCompatible,\n\t\t\tinternalFileAttribute,\n\t\t\texternalFileAttribute\n\t\t} = fileEntry;\n\t\tlet rawExtraFieldExtendedTimestamp;\n\t\tlet rawExtraFieldNTFS;\n\t\tif (fileEntry.extendedTimestamp) {\n\t\t\trawExtraFieldNTFS = fileEntry.rawExtraFieldNTFS;\n\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9);\n\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, rawExtraFieldExtendedTimestamp.length - 4);\n\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, 0x1);\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(fileEntry.lastModDate.getTime() / 1000));\n\t\t} else {\n\t\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array(0);\n\t\t}\n\t\tconst extraFieldLength = rawExtraFieldZip64.length + rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length + rawExtraFieldNTFS.length + rawExtraField.length;\n\t\tsetUint32(directoryView, offset, CENTRAL_FILE_HEADER_SIGNATURE);\n\t\tsetUint16(directoryView, offset + 4, versionMadeBy);\n\t\tarraySet(directoryArray, headerArray, offset + 6);\n\t\tsetUint16(directoryView, offset + 30, extraFieldLength);\n\t\tsetUint16(directoryView, offset + 32, rawComment.length);\n\t\tsetUint32(directoryView, offset + 34, internalFileAttribute);\n\t\tif (externalFileAttribute) {\n\t\t\tsetUint32(directoryView, offset + 38, externalFileAttribute);\n\t\t} else if (directory && msDosCompatible) {\n\t\t\tsetUint8(directoryView, offset + 38, FILE_ATTR_MSDOS_DIR_MASK);\n\t\t}\n\t\tif (zip64) {\n\t\t\tsetUint32(directoryView, offset + 42, MAX_32_BITS);\n\t\t} else {\n\t\t\tsetUint32(directoryView, offset + 42, fileEntry.offset);\n\t\t}\n\t\tarraySet(directoryArray, rawFilename, offset + 46);\n\t\tarraySet(directoryArray, rawExtraFieldZip64, offset + 46 + rawFilename.length);\n\t\tarraySet(directoryArray, rawExtraFieldAES, offset + 46 + rawFilename.length + rawExtraFieldZip64.length);\n\t\tarraySet(directoryArray, rawExtraFieldExtendedTimestamp, offset + 46 + rawFilename.length + rawExtraFieldZip64.length + rawExtraFieldAES.length);\n\t\tarraySet(directoryArray, rawExtraFieldNTFS, offset + 46 + rawFilename.length + rawExtraFieldZip64.length + rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length);\n\t\tarraySet(directoryArray, rawExtraField, offset + 46 + rawFilename.length + rawExtraFieldZip64.length + rawExtraFieldAES.length + rawExtraFieldExtendedTimestamp.length + rawExtraFieldNTFS.length);\n\t\tarraySet(directoryArray, rawComment, offset + 46 + rawFilename.length + extraFieldLength);\n\t\toffset += 46 + rawFilename.length + extraFieldLength + rawComment.length;\n\t\tif (options.onprogress) {\n\t\t\ttry {\n\t\t\t\toptions.onprogress(indexFileEntry + 1, files.size, new Entry(fileEntry));\n\t\t\t} catch (error) {\n\t\t\t\t// ignored\n\t\t\t}\n\t\t}\n\t}\n\tif (zip64) {\n\t\tsetUint32(directoryView, offset, ZIP64_END_OF_CENTRAL_DIR_SIGNATURE);\n\t\tsetBigUint64(directoryView, offset + 4, BigInt(44));\n\t\tsetUint16(directoryView, offset + 12, 45);\n\t\tsetUint16(directoryView, offset + 14, 45);\n\t\tsetBigUint64(directoryView, offset + 24, BigInt(filesLength));\n\t\tsetBigUint64(directoryView, offset + 32, BigInt(filesLength));\n\t\tsetBigUint64(directoryView, offset + 40, BigInt(directoryDataLength));\n\t\tsetBigUint64(directoryView, offset + 48, BigInt(directoryOffset));\n\t\tsetUint32(directoryView, offset + 56, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE);\n\t\tsetBigUint64(directoryView, offset + 64, BigInt(directoryOffset) + BigInt(directoryDataLength));\n\t\tsetUint32(directoryView, offset + 72, ZIP64_TOTAL_NUMBER_OF_DISKS);\n\t\tfilesLength = MAX_16_BITS;\n\t\tdirectoryOffset = MAX_32_BITS;\n\t\tdirectoryDataLength = MAX_32_BITS;\n\t\toffset += 76;\n\t}\n\tsetUint32(directoryView, offset, END_OF_CENTRAL_DIR_SIGNATURE);\n\tsetUint16(directoryView, offset + 8, filesLength);\n\tsetUint16(directoryView, offset + 10, filesLength);\n\tsetUint32(directoryView, offset + 12, directoryDataLength);\n\tsetUint32(directoryView, offset + 16, directoryOffset);\n\tawait writer.writeUint8Array(directoryArray);\n\tif (comment && comment.length) {\n\t\tawait writer.writeUint8Array(comment);\n\t}\n}\n\nfunction sliceAsArrayBuffer(blob, start, end) {\n\tif (blob.arrayBuffer) {\n\t\tif (start || end) {\n\t\t\treturn blob.slice(start, end).arrayBuffer();\n\t\t} else {\n\t\t\treturn blob.arrayBuffer();\n\t\t}\n\t} else {\n\t\tconst fileReader = new FileReader();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfileReader.onload = event => resolve(event.target.result);\n\t\t\tfileReader.onerror = () => reject(fileReader.error);\n\t\t\tfileReader.readAsArrayBuffer(start || end ? blob.slice(start, end) : blob);\n\t\t});\n\t}\n}\n\nasync function writeBlob(writer, blob, start = 0) {\n\tconst blockSize = 512 * 1024 * 1024;\n\tawait writeSlice();\n\n\tasync function writeSlice() {\n\t\tif (start < blob.size) {\n\t\t\tconst arrayBuffer = await sliceAsArrayBuffer(blob, start, start + blockSize);\n\t\t\tawait writer.writeUint8Array(new Uint8Array(arrayBuffer));\n\t\t\tstart += blockSize;\n\t\t\tawait writeSlice();\n\t\t}\n\t}\n}\n\nfunction getTimeNTFS(date) {\n\tif (date) {\n\t\treturn ((BigInt(date.getTime()) + BigInt(11644473600000)) * BigInt(10000));\n\t}\n}\n\nfunction getOptionValue(zipWriter, options, name) {\n\treturn options[name] === undefined ? zipWriter.options[name] : options[name];\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nfunction setUint8(view, offset, value) {\n\tview.setUint8(offset, value);\n}\n\nfunction setUint16(view, offset, value) {\n\tview.setUint16(offset, value, true);\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction setBigUint64(view, offset, value) {\n\tview.setBigUint64(offset, value, true);\n}\n\nfunction arraySet(array, typedArray, offset) {\n\tarray.set(typedArray, offset);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport { ERR_ABORT } from \"./engine.js\";\nimport {\n\tReader,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tBlobReader,\n\tBlobWriter,\n\tHttpReader\n} from \"./io.js\";\nimport { ZipReader } from \"./zip-reader.js\";\nimport { ZipWriter } from \"./zip-writer.js\";\n\nconst CHUNK_SIZE = 512 * 1024;\n\nclass ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tconst zipEntry = this;\n\t\tif (fs.root && parent && parent.getChildByName(name)) {\n\t\t\tthrow new Error(\"Entry filename already exists\");\n\t\t}\n\t\tif (!params) {\n\t\t\tparams = {};\n\t\t}\n\t\tObject.assign(zipEntry, {\n\t\t\tfs,\n\t\t\tname,\n\t\t\tdata: params.data,\n\t\t\tid: fs.entries.length,\n\t\t\tparent,\n\t\t\tchildren: [],\n\t\t\tuncompressedSize: 0\n\t\t});\n\t\tfs.entries.push(zipEntry);\n\t\tif (parent) {\n\t\t\tzipEntry.parent.children.push(zipEntry);\n\t\t}\n\t}\n\n\tmoveTo(target) {\n\t\t// deprecated\n\t\tconst zipEntry = this;\n\t\tzipEntry.fs.move(zipEntry, target);\n\t}\n\n\tgetFullname() {\n\t\treturn this.getRelativeName();\n\t}\n\n\tgetRelativeName(ancestor = this.fs.root) {\n\t\tconst zipEntry = this;\n\t\tlet relativeName = zipEntry.name;\n\t\tlet entry = zipEntry.parent;\n\t\twhile (entry && entry != ancestor) {\n\t\t\trelativeName = (entry.name ? entry.name + \"/\" : \"\") + relativeName;\n\t\t\tentry = entry.parent;\n\t\t}\n\t\treturn relativeName;\n\t}\n\n\tisDescendantOf(ancestor) {\n\t\tlet entry = this.parent;\n\t\twhile (entry && entry.id != ancestor.id) {\n\t\t\tentry = entry.parent;\n\t\t}\n\t\treturn Boolean(entry);\n\t}\n}\n\nclass ZipFileEntry extends ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tsuper(fs, name, params, parent);\n\t\tconst zipEntry = this;\n\t\tzipEntry.Reader = params.Reader;\n\t\tzipEntry.Writer = params.Writer;\n\t\tif (params.getData) {\n\t\t\tzipEntry.getData = params.getData;\n\t\t}\n\t}\n\n\tasync getData(writer, options = {}) {\n\t\tconst zipEntry = this;\n\t\tif (!writer || (writer.constructor == zipEntry.Writer && zipEntry.data)) {\n\t\t\treturn zipEntry.data;\n\t\t} else {\n\t\t\tzipEntry.reader = new zipEntry.Reader(zipEntry.data, options);\n\t\t\tawait zipEntry.reader.init();\n\t\t\tif (!writer.initialized) {\n\t\t\t\tawait writer.init();\n\t\t\t}\n\t\t\tzipEntry.uncompressedSize = zipEntry.reader.size;\n\t\t\treturn pipe(zipEntry.reader, writer);\n\t\t}\n\t}\n\n\tgetText(encoding, options) {\n\t\treturn this.getData(new TextWriter(encoding), options);\n\t}\n\n\tgetBlob(mimeType, options) {\n\t\treturn this.getData(new BlobWriter(mimeType), options);\n\t}\n\n\tgetData64URI(mimeType, options) {\n\t\treturn this.getData(new Data64URIWriter(mimeType), options);\n\t}\n\n\tgetUint8Array(options) {\n\t\treturn this.getData(new Uint8ArrayWriter(), options);\n\t}\n\n\treplaceBlob(blob) {\n\t\tObject.assign(this, {\n\t\t\tdata: blob,\n\t\t\tReader: BlobReader,\n\t\t\tWriter: BlobWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceText(text) {\n\t\tObject.assign(this, {\n\t\t\tdata: text,\n\t\t\tReader: TextReader,\n\t\t\tWriter: TextWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceData64URI(dataURI) {\n\t\tObject.assign(this, {\n\t\t\tdata: dataURI,\n\t\t\tReader: Data64URIReader,\n\t\t\tWriter: Data64URIWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceUint8Array(array) {\n\t\tObject.assign(this, {\n\t\t\tdata: array,\n\t\t\tReader: Uint8ArrayReader,\n\t\t\tWriter: Uint8ArrayWriter,\n\t\t\treader: null\n\t\t});\n\t}\n}\n\nclass ZipDirectoryEntry extends ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tsuper(fs, name, params, parent);\n\t\tthis.directory = true;\n\t}\n\n\taddDirectory(name) {\n\t\treturn addChild(this, name, null, true);\n\t}\n\n\taddText(name, text) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: text,\n\t\t\tReader: TextReader,\n\t\t\tWriter: TextWriter\n\t\t});\n\t}\n\n\taddBlob(name, blob) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: blob,\n\t\t\tReader: BlobReader,\n\t\t\tWriter: BlobWriter\n\t\t});\n\t}\n\n\taddData64URI(name, dataURI) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: dataURI,\n\t\t\tReader: Data64URIReader,\n\t\t\tWriter: Data64URIWriter\n\t\t});\n\t}\n\n\taddUint8Array(name, array) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: array,\n\t\t\tReader: Uint8ArrayReader,\n\t\t\tWriter: Uint8ArrayWriter\n\t\t});\n\t}\n\n\taddHttpContent(name, url, options = {}) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: url,\n\t\t\tReader: class extends HttpReader {\n\t\t\t\tconstructor(url) {\n\t\t\t\t\tsuper(url, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync addFileSystemEntry(fileSystemEntry) {\n\t\treturn addFileSystemEntry(this, fileSystemEntry);\n\t}\n\n\tasync addData(name, params) {\n\t\treturn addChild(this, name, params);\n\t}\n\n\tasync importBlob(blob, options = {}) {\n\t\tawait this.importZip(new BlobReader(blob), options);\n\t}\n\n\tasync importData64URI(dataURI, options = {}) {\n\t\tawait this.importZip(new Data64URIReader(dataURI), options);\n\t}\n\n\tasync importUint8Array(array, options = {}) {\n\t\tawait this.importZip(new Uint8ArrayReader(array), options);\n\t}\n\n\tasync importHttpContent(url, options = {}) {\n\t\tawait this.importZip(new HttpReader(url, options), options);\n\t}\n\n\tasync exportBlob(options = {}) {\n\t\treturn this.exportZip(new BlobWriter(\"application/zip\"), options);\n\t}\n\n\tasync exportData64URI(options = {}) {\n\t\treturn this.exportZip(new Data64URIWriter(\"application/zip\"), options);\n\t}\n\n\tasync exportUint8Array(options = {}) {\n\t\treturn this.exportZip(new Uint8ArrayWriter(), options);\n\t}\n\n\tasync importZip(reader, options) {\n\t\tif (!reader.initialized) {\n\t\t\tawait reader.init();\n\t\t}\n\t\tconst zipReader = new ZipReader(reader, options);\n\t\tconst entries = await zipReader.getEntries();\n\t\tentries.forEach((entry) => {\n\t\t\tlet parent = this;\n\t\t\tconst path = entry.filename.split(\"/\");\n\t\t\tconst name = path.pop();\n\t\t\tpath.forEach(pathPart => parent = parent.getChildByName(pathPart) || new ZipDirectoryEntry(this.fs, pathPart, null, parent));\n\t\t\tif (!entry.directory) {\n\t\t\t\taddChild(parent, name, {\n\t\t\t\t\tdata: entry,\n\t\t\t\t\tReader: getZipBlobReader(Object.assign({}, options))\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tasync exportZip(writer, options) {\n\t\tconst zipEntry = this;\n\t\tawait initReaders(zipEntry);\n\t\tawait writer.init();\n\t\tconst zipWriter = new ZipWriter(writer, options);\n\t\tawait exportZip(zipWriter, zipEntry, getTotalSize([zipEntry], \"uncompressedSize\"), options);\n\t\tawait zipWriter.close();\n\t\treturn writer.getData();\n\t}\n\n\tgetChildByName(name) {\n\t\tconst children = this.children;\n\t\tfor (let childIndex = 0; childIndex < children.length; childIndex++) {\n\t\t\tconst child = children[childIndex];\n\t\t\tif (child.name == name) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nclass FS {\n\n\tconstructor() {\n\t\tresetFS(this);\n\t}\n\n\tget children() {\n\t\treturn this.root.children;\n\t}\n\n\tremove(entry) {\n\t\tdetach(entry);\n\t\tthis.entries[entry.id] = null;\n\t}\n\n\tmove(entry, destination) {\n\t\tif (entry == this.root) {\n\t\t\tthrow new Error(\"Root directory cannot be moved\");\n\t\t} else {\n\t\t\tif (destination.directory) {\n\t\t\t\tif (!destination.isDescendantOf(entry)) {\n\t\t\t\t\tif (entry != destination) {\n\t\t\t\t\t\tif (destination.getChildByName(entry.name)) {\n\t\t\t\t\t\t\tthrow new Error(\"Entry filename already exists\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdetach(entry);\n\t\t\t\t\t\tentry.parent = destination;\n\t\t\t\t\t\tdestination.children.push(entry);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Entry is a ancestor of target entry\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Target entry is not a directory\");\n\t\t\t}\n\t\t}\n\t}\n\n\tfind(fullname) {\n\t\tconst path = fullname.split(\"/\");\n\t\tlet node = this.root;\n\t\tfor (let index = 0; node && index < path.length; index++) {\n\t\t\tnode = node.getChildByName(path[index]);\n\t\t}\n\t\treturn node;\n\t}\n\n\tgetById(id) {\n\t\treturn this.entries[id];\n\t}\n\n\tgetChildByName(name) {\n\t\treturn this.root.getChildByName(name);\n\t}\n\n\taddDirectory(name) {\n\t\treturn this.root.addDirectory(name);\n\t}\n\n\taddText(name, text) {\n\t\treturn this.root.addText(name, text);\n\t}\n\n\taddBlob(name, blob) {\n\t\treturn this.root.addBlob(name, blob);\n\t}\n\n\taddData64URI(name, dataURI) {\n\t\treturn this.root.addData64URI(name, dataURI);\n\t}\n\n\taddHttpContent(name, url, options) {\n\t\treturn this.root.addHttpContent(name, url, options);\n\t}\n\n\tasync addFileSystemEntry(fileSystemEntry) {\n\t\treturn this.root.addFileSystemEntry(fileSystemEntry);\n\t}\n\n\tasync addData(name, params) {\n\t\treturn this.root.addData(name, params);\n\t}\n\n\tasync importBlob(blob, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importBlob(blob, options);\n\t}\n\n\tasync importData64URI(dataURI, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importData64URI(dataURI, options);\n\t}\n\n\tasync importHttpContent(url, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importHttpContent(url, options);\n\t}\n\n\tasync exportBlob(options) {\n\t\treturn this.root.exportBlob(options);\n\t}\n\n\tasync exportData64URI(options) {\n\t\treturn this.root.exportData64URI(options);\n\t}\n}\n\nconst fs = { FS, ZipDirectoryEntry, ZipFileEntry };\nexport { fs };\n\nfunction getTotalSize(entries, propertyName) {\n\tlet size = 0;\n\tentries.forEach(process);\n\treturn size;\n\n\tfunction process(entry) {\n\t\tsize += entry[propertyName];\n\t\tif (entry.children) {\n\t\t\tentry.children.forEach(process);\n\t\t}\n\t}\n}\n\nfunction getZipBlobReader(options) {\n\treturn class extends Reader {\n\n\t\tconstructor(entry, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.entry = entry;\n\t\t\tthis.options = options;\n\t\t}\n\n\t\tasync init() {\n\t\t\tconst zipBlobReader = this;\n\t\t\tzipBlobReader.size = zipBlobReader.entry.uncompressedSize;\n\t\t\tconst data = await zipBlobReader.entry.getData(new BlobWriter(), Object.assign({}, zipBlobReader.options, options));\n\t\t\tzipBlobReader.data = data;\n\t\t\tzipBlobReader.blobReader = new BlobReader(data);\n\t\t}\n\n\t\tasync readUint8Array(index, length) {\n\t\t\treturn this.blobReader.readUint8Array(index, length);\n\t\t}\n\t};\n}\n\nasync function initReaders(entry) {\n\tif (entry.children.length) {\n\t\tfor (const child of entry.children) {\n\t\t\tif (child.directory) {\n\t\t\t\tawait initReaders(child);\n\t\t\t} else {\n\t\t\t\tchild.reader = new child.Reader(child.data);\n\t\t\t\tawait child.reader.init();\n\t\t\t\tchild.uncompressedSize = child.reader.size;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction detach(entry) {\n\tconst children = entry.parent.children;\n\tchildren.forEach((child, index) => {\n\t\tif (child.id == entry.id) {\n\t\t\tchildren.splice(index, 1);\n\t\t}\n\t});\n}\n\nasync function exportZip(zipWriter, entry, totalSize, options) {\n\tconst selectedEntry = entry;\n\tconst entryOffsets = new Map();\n\tawait process(zipWriter, entry);\n\n\tasync function process(zipWriter, entry) {\n\t\tawait exportChild();\n\n\t\tasync function exportChild() {\n\t\t\tif (options.bufferedWrite) {\n\t\t\t\tawait Promise.all(entry.children.map(processChild));\n\t\t\t} else {\n\t\t\t\tfor (const child of entry.children) {\n\t\t\t\t\tawait processChild(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync function processChild(child) {\n\t\t\tconst name = options.relativePath ? child.getRelativeName(selectedEntry) : child.getFullname();\n\t\t\tawait zipWriter.add(name, child.reader, Object.assign({\n\t\t\t\tdirectory: child.directory\n\t\t\t}, Object.assign({}, options, {\n\t\t\t\tonprogress: indexProgress => {\n\t\t\t\t\tif (options.onprogress) {\n\t\t\t\t\t\tentryOffsets.set(name, indexProgress);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toptions.onprogress(Array.from(entryOffsets.values()).reduce((previousValue, currentValue) => previousValue + currentValue), totalSize);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t// ignored\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})));\n\t\t\tawait process(zipWriter, child);\n\t\t}\n\t}\n}\n\nasync function addFileSystemEntry(zipEntry, fileSystemEntry) {\n\tif (fileSystemEntry.isDirectory) {\n\t\tconst entry = zipEntry.addDirectory(fileSystemEntry.name);\n\t\tawait addDirectory(entry, fileSystemEntry);\n\t\treturn entry;\n\t} else {\n\t\treturn new Promise((resolve, reject) => fileSystemEntry.file(file => resolve(zipEntry.addBlob(fileSystemEntry.name, file)), reject));\n\t}\n\n\tasync function addDirectory(zipEntry, fileEntry) {\n\t\tconst children = await getChildren(fileEntry);\n\t\tfor (const child of children) {\n\t\t\tif (child.isDirectory) {\n\t\t\t\tawait addDirectory(zipEntry.addDirectory(child.name), child);\n\t\t\t} else {\n\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\tchild.file(file => {\n\t\t\t\t\t\tconst childZipEntry = zipEntry.addBlob(child.name, file);\n\t\t\t\t\t\tchildZipEntry.uncompressedSize = file.size;\n\t\t\t\t\t\tresolve(childZipEntry);\n\t\t\t\t\t}, reject);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getChildren(fileEntry) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet entries = [];\n\t\t\tif (fileEntry.isDirectory) {\n\t\t\t\treadEntries(fileEntry.createReader());\n\t\t\t}\n\t\t\tif (fileEntry.isFile) {\n\t\t\t\tresolve(entries);\n\t\t\t}\n\n\t\t\tfunction readEntries(directoryReader) {\n\t\t\t\tdirectoryReader.readEntries(temporaryEntries => {\n\t\t\t\t\tif (!temporaryEntries.length) {\n\t\t\t\t\t\tresolve(entries);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentries = entries.concat(temporaryEntries);\n\t\t\t\t\t\treadEntries(directoryReader);\n\t\t\t\t\t}\n\t\t\t\t}, reject);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction resetFS(fs) {\n\tfs.entries = [];\n\tfs.root = new ZipDirectoryEntry(fs);\n}\n\nasync function pipe(reader, writer) {\n\treturn copyChunk();\n\n\tasync function copyChunk(chunkIndex = 0) {\n\t\tconst index = chunkIndex * CHUNK_SIZE;\n\t\tif (index < reader.size) {\n\t\t\tconst array = await reader.readUint8Array(index, Math.min(CHUNK_SIZE, reader.size - index));\n\t\t\tawait writer.writeUint8Array(array);\n\t\t\treturn copyChunk(chunkIndex + 1);\n\t\t} else {\n\t\t\treturn writer.getData();\n\t\t}\n\t}\n}\n\nfunction addChild(parent, name, params, directory) {\n\tif (parent.directory) {\n\t\treturn directory ? new ZipDirectoryEntry(parent.fs, name, params, parent) : new ZipFileEntry(parent.fs, name, params, parent);\n\t} else {\n\t\tthrow new Error(\"Parent entry is not a directory\");\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { configure } from \"./core/configuration.js\";\nimport configureWebWorker from \"./z-worker-inline.js\";\nimport getMimeType from \"./core/util/default-mime-type.js\";\nimport initShimAsyncCodec from \"./core/util/stream-codec-shim.js\";\nimport { terminateWorkers } from \"./core/codecs/codec-pool.js\";\n\nlet baseURL;\ntry {\n\tbaseURL = import.meta.url;\n} catch (error) {\n\t// ignored\n}\nconfigure({ baseURL });\nconfigureWebWorker(configure);\n\nexport * from \"./core/io.js\";\nexport * from \"./core/zip-reader.js\";\nexport * from \"./core/zip-writer.js\";\nexport * from \"./core/zip-fs-core.js\";\nexport {\n\tconfigure,\n\tgetMimeType,\n\tinitShimAsyncCodec,\n\tterminateWorkers\n};","var t=t=>{if(\"function\"==typeof URL.createObjectURL){const e=()=>URL.createObjectURL(new Blob(['const{Array:t,Object:e,Math:n,Error:r,Uint8Array:i,Uint16Array:o,Uint32Array:s,Int32Array:f,DataView:c,TextEncoder:l,crypto:u,postMessage:a}=globalThis,w=[];for(let t=0;256>t;t++){let e=t;for(let t=0;8>t;t++)1&e?e=e>>>1^3988292384:e>>>=1;w[t]=e}class h{constructor(t){this.t=t||-1}append(t){let e=0|this.t;for(let n=0,r=0|t.length;r>n;n++)e=e>>>8^w[255&(e^t[n])];this.t=e}get(){return~this.t}}const d={concat(t,e){if(0===t.length||0===e.length)return t.concat(e);const n=t[t.length-1],r=d.i(n);return 32===r?t.concat(e):d.o(e,r,0|n,t.slice(0,t.length-1))},l(t){const e=t.length;if(0===e)return 0;const n=t[e-1];return 32*(e-1)+d.i(n)},u(t,e){if(32*t.length<e)return t;const r=(t=t.slice(0,n.ceil(e/32))).length;return e&=31,r>0&&e&&(t[r-1]=d.h(e,t[r-1]&2147483648>>e-1,1)),t},h:(t,e,n)=>32===t?e:(n?0|e:e<<32-t)+1099511627776*t,i:t=>n.round(t/1099511627776)||32,o(t,e,n,r){for(void 0===r&&(r=[]);e>=32;e-=32)r.push(n),n=0;if(0===e)return r.concat(t);for(let i=0;i<t.length;i++)r.push(n|t[i]>>>e),n=t[i]<<32-e;const i=t.length?t[t.length-1]:0,o=d.i(i);return r.push(d.h(e+o&31,e+o>32?n:r.pop(),1)),r}},p={p:{k(t){const e=d.l(t)/8,n=new i(e);let r;for(let i=0;e>i;i++)0==(3&i)&&(r=t[i/4]),n[i]=r>>>24,r<<=8;return n},g(t){const e=[];let n,r=0;for(n=0;n<t.length;n++)r=r<<8|t[n],3==(3&n)&&(e.push(r),r=0);return 3&n&&e.push(d.h(8*(3&n),r)),e}}},y={v:function(t){t?(this.m=t.m.slice(0),this.S=t.S.slice(0),this._=t._):this.reset()}};y.v.prototype={blockSize:512,reset:function(){const t=this;return t.m=this.I.slice(0),t.S=[],t._=0,t},update:function(t){const e=this;\"string\"==typeof t&&(t=p.A.g(t));const n=e.S=d.concat(e.S,t),i=e._,o=e._=i+d.l(t);if(o>9007199254740991)throw new r(\"Cannot hash more than 2^53 - 1 bits\");const f=new s(n);let c=0;for(let t=e.blockSize+i-(e.blockSize+i&e.blockSize-1);o>=t;t+=e.blockSize)e.C(f.subarray(16*c,16*(c+1))),c+=1;return n.splice(0,16*c),e},V:function(){const t=this;let e=t.S;const r=t.m;e=d.concat(e,[d.h(1,1)]);for(let t=e.length+2;15&t;t++)e.push(0);for(e.push(n.floor(t._/4294967296)),e.push(0|t._);e.length;)t.C(e.splice(0,16));return t.reset(),r},I:[1732584193,4023233417,2562383102,271733878,3285377520],B:[1518500249,1859775393,2400959708,3395469782],D:(t,e,n,r)=>t>19?t>39?t>59?t>79?void 0:e^n^r:e&n|e&r|n&r:e^n^r:e&n|~e&r,U:(t,e)=>e<<t|e>>>32-t,C:function(e){const r=this,i=r.m,o=t(80);for(let t=0;16>t;t++)o[t]=e[t];let s=i[0],f=i[1],c=i[2],l=i[3],u=i[4];for(let t=0;79>=t;t++){16>t||(o[t]=r.U(1,o[t-3]^o[t-8]^o[t-14]^o[t-16]));const e=r.U(5,s)+r.D(t,f,c,l)+u+o[t]+r.B[n.floor(t/20)]|0;u=l,l=c,c=r.U(30,f),f=s,s=e}i[0]=i[0]+s|0,i[1]=i[1]+f|0,i[2]=i[2]+c|0,i[3]=i[3]+l|0,i[4]=i[4]+u|0}};const b={getRandomValues(t){const e=new s(t.buffer),r=t=>{let e=987654321;const r=4294967295;return()=>(e=36969*(65535&e)+(e>>16)&r,(((e<<16)+(t=18e3*(65535&t)+(t>>16)&r)&r)/4294967296+.5)*(n.random()>.5?1:-1))};for(let i,o=0;o<t.length;o+=4){let t=r(4294967296*(i||n.random()));i=987654071*t(),e[o/4]=4294967296*t()|0}return t}},k={importKey:t=>new k.M(p.p.g(t)),P(t,e,n,i){if(n=n||1e4,0>i||0>n)throw new r(\"invalid params to pbkdf2\");const o=1+(i>>5)<<2;let s,f,l,u,a;const w=new ArrayBuffer(o);let h=new c(w),y=0;const b=d;for(e=p.p.g(e),a=1;(o||1)>y;a++){for(s=f=t.encrypt(b.concat(e,[a])),l=1;n>l;l++)for(f=t.encrypt(f),u=0;u<f.length;u++)s[u]^=f[u];for(l=0;(o||1)>y&&l<s.length;l++)h.setInt32(y,s[l]),y+=4}return w.slice(0,i/8)},M:class{constructor(t){const e=this,n=e.R=y.v,r=[[],[]],i=n.prototype.blockSize/32;e.H=[new n,new n],t.length>i&&(t=n.hash(t));for(let e=0;i>e;e++)r[0][e]=909522486^t[e],r[1][e]=1549556828^t[e];e.H[0].update(r[0]),e.H[1].update(r[1]),e.K=new n(e.H[0])}reset(){const t=this;t.K=new t.R(t.H[0]),t.L=!1}update(t){this.L=!0,this.K.update(t)}digest(){const t=this,e=t.K.V(),n=new t.R(t.H[1]).update(e).V();return t.reset(),n}encrypt(t){if(this.L)throw new r(\"encrypt on already updated hmac called!\");return this.update(t),this.digest(t)}}},g={name:\"PBKDF2\"},v=e.assign({hash:{name:\"HMAC\"}},g),m=e.assign({iterations:1e3,hash:{name:\"SHA-1\"}},g),S=[\"deriveBits\"],z=[8,12,16],_=[16,24,32],I=[0,0,0,0],A=void 0!==u,C=A&&void 0!==u.subtle,V=p.p,B=class{constructor(t){const e=this;e.T=[[[],[],[],[],[]],[[],[],[],[],[]]],e.T[0][0][0]||e.j();const n=e.T[0][4],i=e.T[1],o=t.length;let s,f,c,l=1;if(4!==o&&6!==o&&8!==o)throw new r(\"invalid aes key size\");for(e.B=[f=t.slice(0),c=[]],s=o;4*o+28>s;s++){let t=f[s-1];(s%o==0||8===o&&s%o==4)&&(t=n[t>>>24]<<24^n[t>>16&255]<<16^n[t>>8&255]<<8^n[255&t],s%o==0&&(t=t<<8^t>>>24^l<<24,l=l<<1^283*(l>>7))),f[s]=f[s-o]^t}for(let t=0;s;t++,s--){const e=f[3&t?s:s-4];c[t]=4>=s||4>t?e:i[0][n[e>>>24]]^i[1][n[e>>16&255]]^i[2][n[e>>8&255]]^i[3][n[255&e]]}}encrypt(t){return this.F(t,0)}decrypt(t){return this.F(t,1)}j(){const t=this.T[0],e=this.T[1],n=t[4],r=e[4],i=[],o=[];let s,f,c,l;for(let t=0;256>t;t++)o[(i[t]=t<<1^283*(t>>7))^t]=t;for(let u=s=0;!n[u];u^=f||1,s=o[s]||1){let o=s^s<<1^s<<2^s<<3^s<<4;o=o>>8^255&o^99,n[u]=o,r[o]=u,l=i[c=i[f=i[u]]];let a=16843009*l^65537*c^257*f^16843008*u,w=257*i[o]^16843008*o;for(let n=0;4>n;n++)t[n][u]=w=w<<24^w>>>8,e[n][o]=a=a<<24^a>>>8}for(let n=0;5>n;n++)t[n]=t[n].slice(0),e[n]=e[n].slice(0)}F(t,e){if(4!==t.length)throw new r(\"invalid aes block size\");const n=this.B[e],i=n.length/4-2,o=[0,0,0,0],s=this.T[e],f=s[0],c=s[1],l=s[2],u=s[3],a=s[4];let w,h,d,p=t[0]^n[0],y=t[e?3:1]^n[1],b=t[2]^n[2],k=t[e?1:3]^n[3],g=4;for(let t=0;i>t;t++)w=f[p>>>24]^c[y>>16&255]^l[b>>8&255]^u[255&k]^n[g],h=f[y>>>24]^c[b>>16&255]^l[k>>8&255]^u[255&p]^n[g+1],d=f[b>>>24]^c[k>>16&255]^l[p>>8&255]^u[255&y]^n[g+2],k=f[k>>>24]^c[p>>16&255]^l[y>>8&255]^u[255&b]^n[g+3],g+=4,p=w,y=h,b=d;for(let t=0;4>t;t++)o[e?3&-t:t]=a[p>>>24]<<24^a[y>>16&255]<<16^a[b>>8&255]<<8^a[255&k]^n[g++],w=p,p=y,y=b,b=k,k=w;return o}},E=class{constructor(t,e){this.O=t,this.W=e,this.q=e}reset(){this.q=this.W}update(t){return this.G(this.O,t,this.q)}J(t){if(255==(t>>24&255)){let e=t>>16&255,n=t>>8&255,r=255&t;255===e?(e=0,255===n?(n=0,255===r?r=0:++r):++n):++e,t=0,t+=e<<16,t+=n<<8,t+=r}else t+=1<<24;return t}N(t){0===(t[0]=this.J(t[0]))&&(t[1]=this.J(t[1]))}G(t,e,n){let r;if(!(r=e.length))return[];const i=d.l(e);for(let i=0;r>i;i+=4){this.N(n);const r=t.encrypt(n);e[i]^=r[0],e[i+1]^=r[1],e[i+2]^=r[2],e[i+3]^=r[3]}return d.u(e,i)}},D=k.M;class U{constructor(t,n,r){e.assign(this,{password:t,signed:n,X:r-1,Y:new i(0)})}async append(e){const n=this;if(n.password){const i=K(e,0,z[n.X]+2);await(async(t,e,n)=>{await R(t,n,K(e,0,z[t.X]));const i=K(e,z[t.X]),o=t.keys.passwordVerification;if(o[0]!=i[0]||o[1]!=i[1])throw new r(\"Invalid pasword\")})(n,i,n.password),n.password=null,n.Z=new E(new B(n.keys.key),t.from(I)),n.$=new D(n.keys.tt),e=K(e,z[n.X]+2)}return P(n,e,new i(e.length-10-(e.length-10)%16),0,10,!0)}flush(){const t=this,e=t.Y,n=K(e,0,e.length-10),r=K(e,e.length-10);let o=new i(0);if(n.length){const e=V.g(n);t.$.update(e);const r=t.Z.update(e);o=V.k(r)}let s=!0;if(t.signed){const e=K(V.k(t.$.digest()),0,10);for(let t=0;10>t;t++)e[t]!=r[t]&&(s=!1)}return{valid:s,data:o}}}class M{constructor(t,n){e.assign(this,{password:t,X:n-1,Y:new i(0)})}async append(e){const n=this;let r=new i(0);n.password&&(r=await(async(t,e)=>{const n=(r=new i(z[t.X]),A&&\"function\"==typeof u.getRandomValues?u.getRandomValues(r):b.getRandomValues(r));var r;return await R(t,e,n),H(n,t.keys.passwordVerification)})(n,n.password),n.password=null,n.Z=new E(new B(n.keys.key),t.from(I)),n.$=new D(n.keys.tt));const o=new i(r.length+e.length-e.length%16);return o.set(r,0),P(n,e,o,r.length,0)}flush(){const t=this;let e=new i(0);if(t.Y.length){const n=t.Z.update(V.g(t.Y));t.$.update(n),e=V.k(n)}const n=K(V.k(t.$.digest()),0,10);return{data:H(e,n),signature:n}}}function P(t,e,n,r,o,s){const f=e.length-o;let c;for(t.Y.length&&(e=H(t.Y,e),n=((t,e)=>{if(e&&e>t.length){const n=t;(t=new i(e)).set(n,0)}return t})(n,f-f%16)),c=0;f-16>=c;c+=16){const i=V.g(K(e,c,c+16));s&&t.$.update(i);const o=t.Z.update(i);s||t.$.update(o),n.set(V.k(o),c+r)}return t.Y=K(e,c),n}async function R(t,n,r){const o=(t=>{if(void 0===l){const e=new i((t=unescape(encodeURIComponent(t))).length);for(let n=0;n<e.length;n++)e[n]=t.charCodeAt(n);return e}return(new l).encode(t)})(n),s=await(async(t,e,n,r,i)=>A&&C&&\"function\"==typeof u.subtle.importKey?u.subtle.importKey(\"raw\",e,n,!1,i):k.importKey(e))(0,o,v,0,S),f=await(async(t,e,n)=>A&&C&&\"function\"==typeof u.subtle.deriveBits?await u.subtle.deriveBits(t,e,n):k.P(e,t.salt,m.iterations,n))(e.assign({salt:r},m),s,8*(2*_[t.X]+2)),c=new i(f);t.keys={key:V.g(K(c,0,_[t.X])),tt:V.g(K(c,_[t.X],2*_[t.X])),passwordVerification:K(c,2*_[t.X])}}function H(t,e){let n=t;return t.length+e.length&&(n=new i(t.length+e.length),n.set(t,0),n.set(e,t.length)),n}function K(t,e,n){return t.subarray(e,n)}class L{constructor(t,n){e.assign(this,{password:t,passwordVerification:n}),F(this,t)}append(t){const e=this;if(e.password){const n=j(e,t.subarray(0,12));if(e.password=null,n[11]!=e.passwordVerification)throw new r(\"Invalid pasword\");t=t.subarray(12)}return j(e,t)}flush(){return{valid:!0,data:new i(0)}}}class T{constructor(t,n){e.assign(this,{password:t,passwordVerification:n}),F(this,t)}append(t){const e=this;let n,r;if(e.password){e.password=null;const o=u.getRandomValues(new i(12));o[11]=e.passwordVerification,n=new i(t.length+o.length),n.set(x(e,o),0),r=12}else n=new i(t.length),r=0;return n.set(x(e,t),r),n}flush(){return{data:new i(0)}}}function j(t,e){const n=new i(e.length);for(let r=0;r<e.length;r++)n[r]=W(t)^e[r],O(t,n[r]);return n}function x(t,e){const n=new i(e.length);for(let r=0;r<e.length;r++)n[r]=W(t)^e[r],O(t,e[r]);return n}function F(t,e){t.keys=[305419896,591751049,878082192],t.et=new h(t.keys[0]),t.nt=new h(t.keys[2]);for(let n=0;n<e.length;n++)O(t,e.charCodeAt(n))}function O(t,e){t.et.append([e]),t.keys[0]=~t.et.get(),t.keys[1]=G(t.keys[1]+q(t.keys[0])),t.keys[1]=G(n.imul(t.keys[1],134775813)+1),t.nt.append([t.keys[1]>>>24]),t.keys[2]=~t.nt.get()}function W(t){const e=2|t.keys[2];return q(n.imul(e,1^e)>>>8)}function q(t){return 255&t}function G(t){return 4294967295&t}class J{constructor(t,{signature:n,password:r,signed:i,compressed:o,zipCrypto:s,passwordVerification:f,encryptionStrength:c},{rt:l}){const u=!!r;e.assign(this,{signature:n,encrypted:u,signed:i,compressed:o,it:o&&new t({rt:l}),ot:i&&new h,zipCrypto:s,decrypt:u&&s?new L(r,f):new U(r,i,c)})}async append(t){const e=this;return e.encrypted&&t.length&&(t=await e.decrypt.append(t)),e.compressed&&t.length&&(t=await e.it.append(t)),(!e.encrypted||e.zipCrypto)&&e.signed&&t.length&&e.ot.append(t),t}async flush(){const t=this;let e,n=new i(0);if(t.encrypted){const e=t.decrypt.flush();if(!e.valid)throw new r(\"Invalid signature\");n=e.data}if((!t.encrypted||t.zipCrypto)&&t.signed){const n=new c(new i(4).buffer);if(e=t.ot.get(),n.setUint32(0,e),t.signature!=n.getUint32(0,!1))throw new r(\"Invalid signature\")}return t.compressed&&(n=await t.it.append(n)||new i(0),await t.it.flush()),{data:n,signature:e}}}class N{constructor(t,{encrypted:n,signed:r,compressed:i,level:o,zipCrypto:s,password:f,passwordVerification:c,encryptionStrength:l},{rt:u}){e.assign(this,{encrypted:n,signed:r,compressed:i,st:i&&new t({level:o||5,rt:u}),ot:r&&new h,zipCrypto:s,encrypt:n&&s?new T(f,c):new M(f,l)})}async append(t){const e=this;let n=t;return e.compressed&&t.length&&(n=await e.st.append(t)),e.encrypted&&n.length&&(n=await e.encrypt.append(n)),(!e.encrypted||e.zipCrypto)&&e.signed&&t.length&&e.ot.append(t),n}async flush(){const t=this;let e,n=new i(0);if(t.compressed&&(n=await t.st.flush()||new i(0)),t.encrypted){n=await t.encrypt.append(n);const r=t.encrypt.flush();e=r.signature;const o=new i(n.length+r.data.length);o.set(n,0),o.set(r.data,n.length),n=o}return t.encrypted&&!t.zipCrypto||!t.signed||(e=t.ot.get()),{data:n,signature:e}}}const Q={init(t){t.scripts&&t.scripts.length&&importScripts.apply(void 0,t.scripts);const e=t.options;let n;self.initCodec&&self.initCodec(),e.codecType.startsWith(\"deflate\")?n=self.Deflate:e.codecType.startsWith(\"inflate\")&&(n=self.Inflate),X=((t,e,n)=>e.codecType.startsWith(\"deflate\")?new N(t,e,n):e.codecType.startsWith(\"inflate\")?new J(t,e,n):void 0)(n,e,t.config)},append:async t=>({data:await X.append(t.data)}),flush:()=>X.flush()};let X;function Y(e){return Z(e.map((([e,n])=>new t(e).fill(n,0,e))))}function Z(e){return e.reduce(((e,n)=>e.concat(t.isArray(n)?Z(n):n)),[])}addEventListener(\"message\",(async t=>{const e=t.data,n=e.type,r=Q[n];if(r)try{e.data&&(e.data=new i(e.data));const t=await r(e)||{};if(t.type=n,t.data)try{t.data=t.data.buffer,a(t,[t.data])}catch(e){a(t)}else a(t)}catch(t){a({type:n,error:{message:t.message,stack:t.stack}})}}));const $=[0,1,2,3].concat(...Y([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function tt(){const t=this;function e(t,e){let n=0;do{n|=1&t,t>>>=1,n<<=1}while(--e>0);return n>>>1}t.ft=r=>{const i=t.ct,o=t.ut.lt,s=t.ut.at;let f,c,l,u=-1;for(r.wt=0,r.ht=573,f=0;s>f;f++)0!==i[2*f]?(r.dt[++r.wt]=u=f,r.yt[f]=0):i[2*f+1]=0;for(;2>r.wt;)l=r.dt[++r.wt]=2>u?++u:0,i[2*l]=1,r.yt[l]=0,r.bt--,o&&(r.kt-=o[2*l+1]);for(t.gt=u,f=n.floor(r.wt/2);f>=1;f--)r.vt(i,f);l=s;do{f=r.dt[1],r.dt[1]=r.dt[r.wt--],r.vt(i,1),c=r.dt[1],r.dt[--r.ht]=f,r.dt[--r.ht]=c,i[2*l]=i[2*f]+i[2*c],r.yt[l]=n.max(r.yt[f],r.yt[c])+1,i[2*f+1]=i[2*c+1]=l,r.dt[1]=l++,r.vt(i,1)}while(r.wt>=2);r.dt[--r.ht]=r.dt[1],(e=>{const n=t.ct,r=t.ut.lt,i=t.ut.St,o=t.ut.zt,s=t.ut._t;let f,c,l,u,a,w,h=0;for(u=0;15>=u;u++)e.It[u]=0;for(n[2*e.dt[e.ht]+1]=0,f=e.ht+1;573>f;f++)c=e.dt[f],u=n[2*n[2*c+1]+1]+1,u>s&&(u=s,h++),n[2*c+1]=u,c>t.gt||(e.It[u]++,a=0,o>c||(a=i[c-o]),w=n[2*c],e.bt+=w*(u+a),r&&(e.kt+=w*(r[2*c+1]+a)));if(0!==h){do{for(u=s-1;0===e.It[u];)u--;e.It[u]--,e.It[u+1]+=2,e.It[s]--,h-=2}while(h>0);for(u=s;0!==u;u--)for(c=e.It[u];0!==c;)l=e.dt[--f],l>t.gt||(n[2*l+1]!=u&&(e.bt+=(u-n[2*l+1])*n[2*l],n[2*l+1]=u),c--)}})(r),((t,n,r)=>{const i=[];let o,s,f,c=0;for(o=1;15>=o;o++)i[o]=c=c+r[o-1]<<1;for(s=0;n>=s;s++)f=t[2*s+1],0!==f&&(t[2*s]=e(i[f]++,f))})(i,t.gt,r.It)}}function et(t,e,n,r,i){const o=this;o.lt=t,o.St=e,o.zt=n,o.at=r,o._t=i}tt.At=[0,1,2,3,4,5,6,7].concat(...Y([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),tt.Ct=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],tt.Vt=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],tt.Bt=t=>256>t?$[t]:$[256+(t>>>7)],tt.Et=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],tt.Dt=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],tt.Ut=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],tt.Mt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const nt=Y([[144,8],[112,9],[24,7],[8,8]]);et.Pt=Z([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((t,e)=>[t,nt[e]])));const rt=Y([[30,5]]);function it(t,e,n,r,i){const o=this;o.Rt=t,o.Ht=e,o.Kt=n,o.Lt=r,o.Tt=i}et.jt=Z([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((t,e)=>[t,rt[e]]))),et.xt=new et(et.Pt,tt.Et,257,286,15),et.Ft=new et(et.jt,tt.Dt,0,30,15),et.Ot=new et(null,tt.Ut,0,19,7);const ot=[new it(0,0,0,0,0),new it(4,4,8,4,1),new it(4,5,16,8,1),new it(4,6,32,32,1),new it(4,4,16,16,2),new it(8,16,32,32,2),new it(8,16,128,128,2),new it(8,32,128,256,2),new it(32,128,258,1024,2),new it(32,258,258,4096,2)],st=[\"need dictionary\",\"stream end\",\"\",\"\",\"stream error\",\"data error\",\"\",\"buffer error\",\"\",\"\"];function ft(t,e,n,r){const i=t[2*e],o=t[2*n];return o>i||i==o&&r[e]<=r[n]}function ct(){const t=this;let e,r,s,f,c,l,u,a,w,h,d,p,y,b,k,g,v,m,S,z,_,I,A,C,V,B,E,D,U,M,P,R,H;const K=new tt,L=new tt,T=new tt;let j,x,F,O,W,q;function G(){let e;for(e=0;286>e;e++)P[2*e]=0;for(e=0;30>e;e++)R[2*e]=0;for(e=0;19>e;e++)H[2*e]=0;P[512]=1,t.bt=t.kt=0,x=F=0}function J(t,e){let n,r=-1,i=t[1],o=0,s=7,f=4;0===i&&(s=138,f=3),t[2*(e+1)+1]=65535;for(let c=0;e>=c;c++)n=i,i=t[2*(c+1)+1],++o<s&&n==i||(f>o?H[2*n]+=o:0!==n?(n!=r&&H[2*n]++,H[32]++):o>10?H[36]++:H[34]++,o=0,r=n,0===i?(s=138,f=3):n==i?(s=6,f=3):(s=7,f=4))}function N(e){t.Wt[t.pending++]=e}function Q(t){N(255&t),N(t>>>8&255)}function X(t,e){let n;const r=e;q>16-r?(n=t,W|=n<<q&65535,Q(W),W=n>>>16-q,q+=r-16):(W|=t<<q&65535,q+=r)}function Y(t,e){const n=2*t;X(65535&e[n],65535&e[n+1])}function Z(t,e){let n,r,i=-1,o=t[1],s=0,f=7,c=4;for(0===o&&(f=138,c=3),n=0;e>=n;n++)if(r=o,o=t[2*(n+1)+1],++s>=f||r!=o){if(c>s)do{Y(r,H)}while(0!=--s);else 0!==r?(r!=i&&(Y(r,H),s--),Y(16,H),X(s-3,2)):s>10?(Y(18,H),X(s-11,7)):(Y(17,H),X(s-3,3));s=0,i=r,0===o?(f=138,c=3):r==o?(f=6,c=3):(f=7,c=4)}}function $(){16==q?(Q(W),W=0,q=0):8>q||(N(255&W),W>>>=8,q-=8)}function nt(e,r){let i,o,s;if(t.qt[x]=e,t.Gt[x]=255&r,x++,0===e?P[2*r]++:(F++,e--,P[2*(tt.At[r]+256+1)]++,R[2*tt.Bt(e)]++),0==(8191&x)&&E>2){for(i=8*x,o=_-v,s=0;30>s;s++)i+=R[2*s]*(5+tt.Dt[s]);if(i>>>=3,F<n.floor(x/2)&&i<n.floor(o/2))return!0}return x==j-1}function rt(e,n){let r,i,o,s,f=0;if(0!==x)do{r=t.qt[f],i=t.Gt[f],f++,0===r?Y(i,e):(o=tt.At[i],Y(o+256+1,e),s=tt.Et[o],0!==s&&(i-=tt.Ct[o],X(i,s)),r--,o=tt.Bt(r),Y(o,n),s=tt.Dt[o],0!==s&&(r-=tt.Vt[o],X(r,s)))}while(x>f);Y(256,e),O=e[513]}function it(){q>8?Q(W):q>0&&N(255&W),W=0,q=0}function ct(e,n,r){X(0+(r?1:0),3),((e,n)=>{it(),O=8,Q(n),Q(~n),t.Wt.set(a.subarray(e,e+n),t.pending),t.pending+=n})(e,n)}function lt(n){((e,n,r)=>{let i,o,s=0;E>0?(K.ft(t),L.ft(t),s=(()=>{let e;for(J(P,K.gt),J(R,L.gt),T.ft(t),e=18;e>=3&&0===H[2*tt.Mt[e]+1];e--);return t.bt+=14+3*(e+1),e})(),i=t.bt+3+7>>>3,o=t.kt+3+7>>>3,o>i||(i=o)):i=o=n+5,n+4>i||-1==e?o==i?(X(2+(r?1:0),3),rt(et.Pt,et.jt)):(X(4+(r?1:0),3),((t,e,n)=>{let r;for(X(t-257,5),X(e-1,5),X(n-4,4),r=0;n>r;r++)X(H[2*tt.Mt[r]+1],3);Z(P,t-1),Z(R,e-1)})(K.gt+1,L.gt+1,s+1),rt(P,R)):ct(e,n,r),G(),r&&it()})(0>v?-1:v,_-v,n),v=_,e.Jt()}function ut(){let t,n,r,i;do{if(i=w-A-_,0===i&&0===_&&0===A)i=c;else if(-1==i)i--;else if(_>=c+c-262){a.set(a.subarray(c,c+c),0),I-=c,_-=c,v-=c,t=y,r=t;do{n=65535&d[--r],d[r]=c>n?0:n-c}while(0!=--t);t=c,r=t;do{n=65535&h[--r],h[r]=c>n?0:n-c}while(0!=--t);i+=c}if(0===e.Nt)return;t=e.Qt(a,_+A,i),A+=t,3>A||(p=255&a[_],p=(p<<g^255&a[_+1])&k)}while(262>A&&0!==e.Nt)}function at(t){let e,n,r=V,i=_,o=C;const s=_>c-262?_-(c-262):0;let f=M;const l=u,w=_+258;let d=a[i+o-1],p=a[i+o];U>C||(r>>=2),f>A&&(f=A);do{if(e=t,a[e+o]==p&&a[e+o-1]==d&&a[e]==a[i]&&a[++e]==a[i+1]){i+=2,e++;do{}while(a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&a[++i]==a[++e]&&w>i);if(n=258-(w-i),i=w-258,n>o){if(I=t,o=n,n>=f)break;d=a[i+o-1],p=a[i+o]}}}while((t=65535&h[t&l])>s&&0!=--r);return o>A?A:o}t.yt=[],t.It=[],t.dt=[],P=[],R=[],H=[],t.vt=(e,n)=>{const r=t.dt,i=r[n];let o=n<<1;for(;o<=t.wt&&(o<t.wt&&ft(e,r[o+1],r[o],t.yt)&&o++,!ft(e,i,r[o],t.yt));)r[n]=r[o],n=o,o<<=1;r[n]=i},t.Xt=(e,S,I,x,F,J)=>(x||(x=8),F||(F=8),J||(J=0),e.Yt=null,-1==S&&(S=6),1>F||F>9||8!=x||9>I||I>15||0>S||S>9||0>J||J>2?-2:(e.Zt=t,l=I,c=1<<l,u=c-1,b=F+7,y=1<<b,k=y-1,g=n.floor((b+3-1)/3),a=new i(2*c),h=[],d=[],j=1<<F+6,t.Wt=new i(4*j),s=4*j,t.qt=new o(j),t.Gt=new i(j),E=S,D=J,(e=>(e.$t=e.te=0,e.Yt=null,t.pending=0,t.ee=0,r=113,f=0,K.ct=P,K.ut=et.xt,L.ct=R,L.ut=et.Ft,T.ct=H,T.ut=et.Ot,W=0,q=0,O=8,G(),(()=>{w=2*c,d[y-1]=0;for(let t=0;y-1>t;t++)d[t]=0;B=ot[E].Ht,U=ot[E].Rt,M=ot[E].Kt,V=ot[E].Lt,_=0,v=0,A=0,m=C=2,z=0,p=0})(),0))(e))),t.ne=()=>42!=r&&113!=r&&666!=r?-2:(t.Gt=null,t.qt=null,t.Wt=null,d=null,h=null,a=null,t.Zt=null,113==r?-3:0),t.re=(t,e,n)=>{let r=0;return-1==e&&(e=6),0>e||e>9||0>n||n>2?-2:(ot[E].Tt!=ot[e].Tt&&0!==t.$t&&(r=t.st(1)),E!=e&&(E=e,B=ot[E].Ht,U=ot[E].Rt,M=ot[E].Kt,V=ot[E].Lt),D=n,r)},t.ie=(t,e,n)=>{let i,o=n,s=0;if(!e||42!=r)return-2;if(3>o)return 0;for(o>c-262&&(o=c-262,s=n-o),a.set(e.subarray(s,s+o),0),_=o,v=o,p=255&a[0],p=(p<<g^255&a[1])&k,i=0;o-3>=i;i++)p=(p<<g^255&a[i+2])&k,h[i&u]=d[p],d[p]=i;return 0},t.st=(n,i)=>{let o,w,b,V,U;if(i>4||0>i)return-2;if(!n.oe||!n.se&&0!==n.Nt||666==r&&4!=i)return n.Yt=st[4],-2;if(0===n.fe)return n.Yt=st[7],-5;var M;if(e=n,V=f,f=i,42==r&&(w=8+(l-8<<4)<<8,b=(E-1&255)>>1,b>3&&(b=3),w|=b<<6,0!==_&&(w|=32),w+=31-w%31,r=113,N((M=w)>>8&255),N(255&M)),0!==t.pending){if(e.Jt(),0===e.fe)return f=-1,0}else if(0===e.Nt&&V>=i&&4!=i)return e.Yt=st[7],-5;if(666==r&&0!==e.Nt)return n.Yt=st[7],-5;if(0!==e.Nt||0!==A||0!=i&&666!=r){switch(U=-1,ot[E].Tt){case 0:U=(t=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=A){if(ut(),0===A&&0==t)return 0;if(0===A)break}if(_+=A,A=0,n=v+r,(0===_||_>=n)&&(A=_-n,_=n,lt(!1),0===e.fe))return 0;if(_-v>=c-262&&(lt(!1),0===e.fe))return 0}return lt(4==t),0===e.fe?4==t?2:0:4==t?3:1})(i);break;case 1:U=(t=>{let n,r=0;for(;;){if(262>A){if(ut(),262>A&&0==t)return 0;if(0===A)break}if(3>A||(p=(p<<g^255&a[_+2])&k,r=65535&d[p],h[_&u]=d[p],d[p]=_),0===r||(_-r&65535)>c-262||2!=D&&(m=at(r)),3>m)n=nt(0,255&a[_]),A--,_++;else if(n=nt(_-I,m-3),A-=m,m>B||3>A)_+=m,m=0,p=255&a[_],p=(p<<g^255&a[_+1])&k;else{m--;do{_++,p=(p<<g^255&a[_+2])&k,r=65535&d[p],h[_&u]=d[p],d[p]=_}while(0!=--m);_++}if(n&&(lt(!1),0===e.fe))return 0}return lt(4==t),0===e.fe?4==t?2:0:4==t?3:1})(i);break;case 2:U=(t=>{let n,r,i=0;for(;;){if(262>A){if(ut(),262>A&&0==t)return 0;if(0===A)break}if(3>A||(p=(p<<g^255&a[_+2])&k,i=65535&d[p],h[_&u]=d[p],d[p]=_),C=m,S=I,m=2,0!==i&&B>C&&c-262>=(_-i&65535)&&(2!=D&&(m=at(i)),5>=m&&(1==D||3==m&&_-I>4096)&&(m=2)),3>C||m>C)if(0!==z){if(n=nt(0,255&a[_-1]),n&&lt(!1),_++,A--,0===e.fe)return 0}else z=1,_++,A--;else{r=_+A-3,n=nt(_-1-S,C-3),A-=C-1,C-=2;do{++_>r||(p=(p<<g^255&a[_+2])&k,i=65535&d[p],h[_&u]=d[p],d[p]=_)}while(0!=--C);if(z=0,m=2,_++,n&&(lt(!1),0===e.fe))return 0}}return 0!==z&&(n=nt(0,255&a[_-1]),z=0),lt(4==t),0===e.fe?4==t?2:0:4==t?3:1})(i)}if(2!=U&&3!=U||(r=666),0==U||2==U)return 0===e.fe&&(f=-1),0;if(1==U){if(1==i)X(2,3),Y(256,et.Pt),$(),9>1+O+10-q&&(X(2,3),Y(256,et.Pt),$()),O=7;else if(ct(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(e.Jt(),0===e.fe)return f=-1,0}}return 4!=i?0:1}}function lt(){const t=this;t.ce=0,t.le=0,t.Nt=0,t.$t=0,t.fe=0,t.te=0}function ut(t){const e=new lt,o=(s=t&&t.rt?t.rt:65536)+5*(n.floor(s/16383)+1);var s;const f=new i(o);let c=t?t.level:-1;void 0===c&&(c=-1),e.Xt(c),e.oe=f,this.append=(t,n)=>{let s,c,l=0,u=0,a=0;const w=[];if(t.length){e.ce=0,e.se=t,e.Nt=t.length;do{if(e.le=0,e.fe=o,s=e.st(0),0!=s)throw new r(\"deflating: \"+e.Yt);e.le&&(e.le==o?w.push(new i(f)):w.push(f.slice(0,e.le))),a+=e.le,n&&e.ce>0&&e.ce!=l&&(n(e.ce),l=e.ce)}while(e.Nt>0||0===e.fe);return w.length>1?(c=new i(a),w.forEach((t=>{c.set(t,u),u+=t.length}))):c=w[0]||new i(0),c}},this.flush=()=>{let t,n,s=0,c=0;const l=[];do{if(e.le=0,e.fe=o,t=e.st(4),1!=t&&0!=t)throw new r(\"deflating: \"+e.Yt);o-e.fe>0&&l.push(f.slice(0,e.le)),c+=e.le}while(e.Nt>0||0===e.fe);return e.ne(),n=new i(c),l.forEach((t=>{n.set(t,s),s+=t.length})),n}}lt.prototype={Xt:function(t,e){const n=this;return n.Zt=new ct,e||(e=15),n.Zt.Xt(n,t,e)},st:function(t){const e=this;return e.Zt?e.Zt.st(e,t):-2},ne:function(){const t=this;if(!t.Zt)return-2;const e=t.Zt.ne();return t.Zt=null,e},re:function(t,e){const n=this;return n.Zt?n.Zt.re(n,t,e):-2},ie:function(t,e){const n=this;return n.Zt?n.Zt.ie(n,t,e):-2},Qt:function(t,e,n){const r=this;let i=r.Nt;return i>n&&(i=n),0===i?0:(r.Nt-=i,t.set(r.se.subarray(r.ce,r.ce+i),e),r.ce+=i,r.$t+=i,i)},Jt:function(){const t=this;let e=t.Zt.pending;e>t.fe&&(e=t.fe),0!==e&&(t.oe.set(t.Zt.Wt.subarray(t.Zt.ee,t.Zt.ee+e),t.le),t.le+=e,t.Zt.ee+=e,t.te+=e,t.fe-=e,t.Zt.pending-=e,0===t.Zt.pending&&(t.Zt.ee=0))}};const at=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],wt=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],ht=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],dt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],pt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],yt=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],bt=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function kt(){let t,e,n,r,i,o;function s(t,e,s,f,c,l,u,a,w,h,d){let p,y,b,k,g,v,m,S,z,_,I,A,C,V,B;_=0,g=s;do{n[t[e+_]]++,_++,g--}while(0!==g);if(n[0]==s)return u[0]=-1,a[0]=0,0;for(S=a[0],v=1;15>=v&&0===n[v];v++);for(m=v,v>S&&(S=v),g=15;0!==g&&0===n[g];g--);for(b=g,S>g&&(S=g),a[0]=S,V=1<<v;g>v;v++,V<<=1)if(0>(V-=n[v]))return-3;if(0>(V-=n[g]))return-3;for(n[g]+=V,o[1]=v=0,_=1,C=2;0!=--g;)o[C]=v+=n[_],C++,_++;g=0,_=0;do{0!==(v=t[e+_])&&(d[o[v]++]=g),_++}while(++g<s);for(s=o[b],o[0]=g=0,_=0,k=-1,A=-S,i[0]=0,I=0,B=0;b>=m;m++)for(p=n[m];0!=p--;){for(;m>A+S;){if(k++,A+=S,B=b-A,B=B>S?S:B,(y=1<<(v=m-A))>p+1&&(y-=p+1,C=m,B>v))for(;++v<B&&(y<<=1)>n[++C];)y-=n[C];if(B=1<<v,h[0]+B>1440)return-3;i[k]=I=h[0],h[0]+=B,0!==k?(o[k]=g,r[0]=v,r[1]=S,v=g>>>A-S,r[2]=I-i[k-1]-v,w.set(r,3*(i[k-1]+v))):u[0]=I}for(r[1]=m-A,s>_?d[_]<f?(r[0]=256>d[_]?0:96,r[2]=d[_++]):(r[0]=l[d[_]-f]+16+64,r[2]=c[d[_++]-f]):r[0]=192,y=1<<m-A,v=g>>>A;B>v;v+=y)w.set(r,3*(I+v));for(v=1<<m-1;0!=(g&v);v>>>=1)g^=v;for(g^=v,z=(1<<A)-1;(g&z)!=o[k];)k--,A-=S,z=(1<<A)-1}return 0!==V&&1!=b?-5:0}function c(s){let c;for(t||(t=[],e=[],n=new f(16),r=[],i=new f(15),o=new f(16)),e.length<s&&(e=[]),c=0;s>c;c++)e[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;i.set(n.subarray(0,15),0),o.set(n.subarray(0,16),0)}this.ue=(n,r,i,o,f)=>{let l;return c(19),t[0]=0,l=s(n,0,19,19,null,null,i,r,o,t,e),-3==l?f.Yt=\"oversubscribed dynamic bit lengths tree\":-5!=l&&0!==r[0]||(f.Yt=\"incomplete dynamic bit lengths tree\",l=-3),l},this.ae=(n,r,i,o,f,l,u,a,w)=>{let h;return c(288),t[0]=0,h=s(i,0,n,257,dt,pt,l,o,a,t,e),0!=h||0===o[0]?(-3==h?w.Yt=\"oversubscribed literal/length tree\":-4!=h&&(w.Yt=\"incomplete literal/length tree\",h=-3),h):(c(288),h=s(i,n,r,0,yt,bt,u,f,a,t,e),0!=h||0===f[0]&&n>257?(-3==h?w.Yt=\"oversubscribed distance tree\":-5==h?(w.Yt=\"incomplete distance tree\",h=-3):-4!=h&&(w.Yt=\"empty distance tree with lengths\",h=-3),h):0)}}function gt(){const t=this;let e,n,r,i,o=0,s=0,f=0,c=0,l=0,u=0,a=0,w=0,h=0,d=0;function p(t,e,n,r,i,o,s,f){let c,l,u,a,w,h,d,p,y,b,k,g,v,m,S,z;d=f.ce,p=f.Nt,w=s.we,h=s.he,y=s.write,b=y<s.read?s.read-y-1:s.end-y,k=at[t],g=at[e];do{for(;20>h;)p--,w|=(255&f.de(d++))<<h,h+=8;if(c=w&k,l=n,u=r,z=3*(u+c),0!==(a=l[z]))for(;;){if(w>>=l[z+1],h-=l[z+1],0!=(16&a)){for(a&=15,v=l[z+2]+(w&at[a]),w>>=a,h-=a;15>h;)p--,w|=(255&f.de(d++))<<h,h+=8;for(c=w&g,l=i,u=o,z=3*(u+c),a=l[z];;){if(w>>=l[z+1],h-=l[z+1],0!=(16&a)){for(a&=15;a>h;)p--,w|=(255&f.de(d++))<<h,h+=8;if(m=l[z+2]+(w&at[a]),w>>=a,h-=a,b-=v,m>y){S=y-m;do{S+=s.end}while(0>S);if(a=s.end-S,v>a){if(v-=a,y-S>0&&a>y-S)do{s.pe[y++]=s.pe[S++]}while(0!=--a);else s.pe.set(s.pe.subarray(S,S+a),y),y+=a,S+=a,a=0;S=0}}else S=y-m,y-S>0&&2>y-S?(s.pe[y++]=s.pe[S++],s.pe[y++]=s.pe[S++],v-=2):(s.pe.set(s.pe.subarray(S,S+2),y),y+=2,S+=2,v-=2);if(y-S>0&&v>y-S)do{s.pe[y++]=s.pe[S++]}while(0!=--v);else s.pe.set(s.pe.subarray(S,S+v),y),y+=v,S+=v,v=0;break}if(0!=(64&a))return f.Yt=\"invalid distance code\",v=f.Nt-p,v=v>h>>3?h>>3:v,p+=v,d-=v,h-=v<<3,s.we=w,s.he=h,f.Nt=p,f.$t+=d-f.ce,f.ce=d,s.write=y,-3;c+=l[z+2],c+=w&at[a],z=3*(u+c),a=l[z]}break}if(0!=(64&a))return 0!=(32&a)?(v=f.Nt-p,v=v>h>>3?h>>3:v,p+=v,d-=v,h-=v<<3,s.we=w,s.he=h,f.Nt=p,f.$t+=d-f.ce,f.ce=d,s.write=y,1):(f.Yt=\"invalid literal/length code\",v=f.Nt-p,v=v>h>>3?h>>3:v,p+=v,d-=v,h-=v<<3,s.we=w,s.he=h,f.Nt=p,f.$t+=d-f.ce,f.ce=d,s.write=y,-3);if(c+=l[z+2],c+=w&at[a],z=3*(u+c),0===(a=l[z])){w>>=l[z+1],h-=l[z+1],s.pe[y++]=l[z+2],b--;break}}else w>>=l[z+1],h-=l[z+1],s.pe[y++]=l[z+2],b--}while(b>=258&&p>=10);return v=f.Nt-p,v=v>h>>3?h>>3:v,p+=v,d-=v,h-=v<<3,s.we=w,s.he=h,f.Nt=p,f.$t+=d-f.ce,f.ce=d,s.write=y,0}t.init=(t,o,s,f,c,l)=>{e=0,a=t,w=o,r=s,h=f,i=c,d=l,n=null},t.ye=(t,y,b)=>{let k,g,v,m,S,z,_,I=0,A=0,C=0;for(C=y.ce,m=y.Nt,I=t.we,A=t.he,S=t.write,z=S<t.read?t.read-S-1:t.end-S;;)switch(e){case 0:if(z>=258&&m>=10&&(t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,b=p(a,w,r,h,i,d,t,y),C=y.ce,m=y.Nt,I=t.we,A=t.he,S=t.write,z=S<t.read?t.read-S-1:t.end-S,0!=b)){e=1==b?7:9;break}f=a,n=r,s=h,e=1;case 1:for(k=f;k>A;){if(0===m)return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);b=0,m--,I|=(255&y.de(C++))<<A,A+=8}if(g=3*(s+(I&at[k])),I>>>=n[g+1],A-=n[g+1],v=n[g],0===v){c=n[g+2],e=6;break}if(0!=(16&v)){l=15&v,o=n[g+2],e=2;break}if(0==(64&v)){f=v,s=g/3+n[g+2];break}if(0!=(32&v)){e=7;break}return e=9,y.Yt=\"invalid literal/length code\",b=-3,t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);case 2:for(k=l;k>A;){if(0===m)return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);b=0,m--,I|=(255&y.de(C++))<<A,A+=8}o+=I&at[k],I>>=k,A-=k,f=w,n=i,s=d,e=3;case 3:for(k=f;k>A;){if(0===m)return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);b=0,m--,I|=(255&y.de(C++))<<A,A+=8}if(g=3*(s+(I&at[k])),I>>=n[g+1],A-=n[g+1],v=n[g],0!=(16&v)){l=15&v,u=n[g+2],e=4;break}if(0==(64&v)){f=v,s=g/3+n[g+2];break}return e=9,y.Yt=\"invalid distance code\",b=-3,t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);case 4:for(k=l;k>A;){if(0===m)return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);b=0,m--,I|=(255&y.de(C++))<<A,A+=8}u+=I&at[k],I>>=k,A-=k,e=5;case 5:for(_=S-u;0>_;)_+=t.end;for(;0!==o;){if(0===z&&(S==t.end&&0!==t.read&&(S=0,z=S<t.read?t.read-S-1:t.end-S),0===z&&(t.write=S,b=t.be(y,b),S=t.write,z=S<t.read?t.read-S-1:t.end-S,S==t.end&&0!==t.read&&(S=0,z=S<t.read?t.read-S-1:t.end-S),0===z)))return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);t.pe[S++]=t.pe[_++],z--,_==t.end&&(_=0),o--}e=0;break;case 6:if(0===z&&(S==t.end&&0!==t.read&&(S=0,z=S<t.read?t.read-S-1:t.end-S),0===z&&(t.write=S,b=t.be(y,b),S=t.write,z=S<t.read?t.read-S-1:t.end-S,S==t.end&&0!==t.read&&(S=0,z=S<t.read?t.read-S-1:t.end-S),0===z)))return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);b=0,t.pe[S++]=c,z--,e=0;break;case 7:if(A>7&&(A-=8,m++,C--),t.write=S,b=t.be(y,b),S=t.write,z=S<t.read?t.read-S-1:t.end-S,t.read!=t.write)return t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);e=8;case 8:return b=1,t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);case 9:return b=-3,t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b);default:return b=-2,t.we=I,t.he=A,y.Nt=m,y.$t+=C-y.ce,y.ce=C,t.write=S,t.be(y,b)}},t.ke=()=>{}}kt.ge=(t,e,n,r)=>(t[0]=9,e[0]=5,n[0]=wt,r[0]=ht,0);const vt=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function mt(t,e){const n=this;let r,o=0,s=0,c=0,l=0;const u=[0],a=[0],w=new gt;let h=0,d=new f(4320);const p=new kt;n.he=0,n.we=0,n.pe=new i(e),n.end=e,n.read=0,n.write=0,n.reset=(t,e)=>{e&&(e[0]=0),6==o&&w.ke(t),o=0,n.he=0,n.we=0,n.read=n.write=0},n.reset(t,null),n.be=(t,e)=>{let r,i,o;return i=t.le,o=n.read,r=(o>n.write?n.end:n.write)-o,r>t.fe&&(r=t.fe),0!==r&&-5==e&&(e=0),t.fe-=r,t.te+=r,t.oe.set(n.pe.subarray(o,o+r),i),i+=r,o+=r,o==n.end&&(o=0,n.write==n.end&&(n.write=0),r=n.write-o,r>t.fe&&(r=t.fe),0!==r&&-5==e&&(e=0),t.fe-=r,t.te+=r,t.oe.set(n.pe.subarray(o,o+r),i),i+=r,o+=r),t.le=i,n.read=o,e},n.ye=(t,e)=>{let i,f,y,b,k,g,v,m;for(b=t.ce,k=t.Nt,f=n.we,y=n.he,g=n.write,v=g<n.read?n.read-g-1:n.end-g;;){let S,z,_,I,A,C,V,B;switch(o){case 0:for(;3>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,o=1;break;case 1:S=[],z=[],_=[[]],I=[[]],kt.ge(S,z,_,I),w.init(S[0],z[0],_[0],0,I[0],0),f>>>=3,y-=3,o=6;break;case 2:f>>>=3,y-=3,o=3;break;case 3:return f>>>=3,y-=3,o=9,t.Yt=\"invalid block type\",e=-3,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e)}break;case 1:for(;32>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return o=9,t.Yt=\"invalid stored block lengths\",e=-3,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);s=65535&f,f=y=0,o=0!==s?2:0!==h?7:0;break;case 2:if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);if(0===v&&(g==n.end&&0!==n.read&&(g=0,v=g<n.read?n.read-g-1:n.end-g),0===v&&(n.write=g,e=n.be(t,e),g=n.write,v=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,v=g<n.read?n.read-g-1:n.end-g),0===v)))return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);if(e=0,i=s,i>k&&(i=k),i>v&&(i=v),n.pe.set(t.Qt(b,i),g),b+=i,k-=i,g+=i,v-=i,0!=(s-=i))break;o=0!==h?7:0;break;case 3:for(;14>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return o=9,t.Yt=\"too many length or distance symbols\",e=-3,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(m=0;i>m;m++)r[m]=0;f>>>=14,y-=14,l=0,o=4;case 4:for(;4+(c>>>10)>l;){for(;3>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}r[vt[l++]]=7&f,f>>>=3,y-=3}for(;19>l;)r[vt[l++]]=0;if(u[0]=7,i=p.ue(r,u,a,d,t),0!=i)return-3==(e=i)&&(r=null,o=9),n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);l=0,o=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>l;){let s,w;for(i=u[0];i>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}if(i=d[3*(a[0]+(f&at[i]))+1],w=d[3*(a[0]+(f&at[i]))+2],16>w)f>>>=i,y-=i,r[l++]=w;else{for(m=18==w?7:w-14,s=18==w?11:3;i+m>y;){if(0===k)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);e=0,k--,f|=(255&t.de(b++))<<y,y+=8}if(f>>>=i,y-=i,s+=f&at[m],f>>>=m,y-=m,m=l,i=c,m+s>258+(31&i)+(i>>5&31)||16==w&&1>m)return r=null,o=9,t.Yt=\"invalid bit length repeat\",e=-3,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);w=16==w?r[m-1]:0;do{r[m++]=w}while(0!=--s);l=m}}if(a[0]=-1,A=[],C=[],V=[],B=[],A[0]=9,C[0]=6,i=c,i=p.ae(257+(31&i),1+(i>>5&31),r,A,C,V,B,d,t),0!=i)return-3==i&&(r=null,o=9),e=i,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);w.init(A[0],C[0],d,V[0],d,B[0]),o=6;case 6:if(n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,1!=(e=w.ye(n,t,e)))return n.be(t,e);if(e=0,w.ke(t),b=t.ce,k=t.Nt,f=n.we,y=n.he,g=n.write,v=g<n.read?n.read-g-1:n.end-g,0===h){o=0;break}o=7;case 7:if(n.write=g,e=n.be(t,e),g=n.write,v=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);o=8;case 8:return e=1,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);case 9:return e=-3,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e);default:return e=-2,n.we=f,n.he=y,t.Nt=k,t.$t+=b-t.ce,t.ce=b,n.write=g,n.be(t,e)}}},n.ke=t=>{n.reset(t,null),n.pe=null,d=null},n.ve=(t,e,r)=>{n.pe.set(t.subarray(e,e+r),0),n.read=n.write=r},n.me=()=>1==o?1:0}const St=[0,0,255,255];function zt(){const t=this;function e(t){return t&&t.Se?(t.$t=t.te=0,t.Yt=null,t.Se.mode=7,t.Se.ze.reset(t,null),0):-2}t.mode=0,t.method=0,t._e=[0],t.Ie=0,t.marker=0,t.Ae=0,t.Ce=e=>(t.ze&&t.ze.ke(e),t.ze=null,0),t.Ve=(n,r)=>(n.Yt=null,t.ze=null,8>r||r>15?(t.Ce(n),-2):(t.Ae=r,n.Se.ze=new mt(n,1<<r),e(n),0)),t.it=(t,e)=>{let n,r;if(!t||!t.Se||!t.se)return-2;const i=t.Se;for(e=4==e?-5:0,n=-5;;)switch(i.mode){case 0:if(0===t.Nt)return n;if(n=e,t.Nt--,t.$t++,8!=(15&(i.method=t.de(t.ce++)))){i.mode=13,t.Yt=\"unknown compression method\",i.marker=5;break}if(8+(i.method>>4)>i.Ae){i.mode=13,t.Yt=\"invalid win size\",i.marker=5;break}i.mode=1;case 1:if(0===t.Nt)return n;if(n=e,t.Nt--,t.$t++,r=255&t.de(t.ce++),((i.method<<8)+r)%31!=0){i.mode=13,t.Yt=\"incorrect header check\",i.marker=5;break}if(0==(32&r)){i.mode=7;break}i.mode=2;case 2:if(0===t.Nt)return n;n=e,t.Nt--,t.$t++,i.Ie=(255&t.de(t.ce++))<<24&4278190080,i.mode=3;case 3:if(0===t.Nt)return n;n=e,t.Nt--,t.$t++,i.Ie+=(255&t.de(t.ce++))<<16&16711680,i.mode=4;case 4:if(0===t.Nt)return n;n=e,t.Nt--,t.$t++,i.Ie+=(255&t.de(t.ce++))<<8&65280,i.mode=5;case 5:return 0===t.Nt?n:(n=e,t.Nt--,t.$t++,i.Ie+=255&t.de(t.ce++),i.mode=6,2);case 6:return i.mode=13,t.Yt=\"need dictionary\",i.marker=0,-2;case 7:if(n=i.ze.ye(t,n),-3==n){i.mode=13,i.marker=0;break}if(0==n&&(n=e),1!=n)return n;n=e,i.ze.reset(t,i._e),i.mode=12;case 12:return t.Nt=0,1;case 13:return-3;default:return-2}},t.Be=(t,e,n)=>{let r=0,i=n;if(!t||!t.Se||6!=t.Se.mode)return-2;const o=t.Se;return i<1<<o.Ae||(i=(1<<o.Ae)-1,r=n-i),o.ze.ve(e,r,i),o.mode=7,0},t.Ee=t=>{let n,r,i,o,s;if(!t||!t.Se)return-2;const f=t.Se;if(13!=f.mode&&(f.mode=13,f.marker=0),0===(n=t.Nt))return-5;for(r=t.ce,i=f.marker;0!==n&&4>i;)t.de(r)==St[i]?i++:i=0!==t.de(r)?0:4-i,r++,n--;return t.$t+=r-t.ce,t.ce=r,t.Nt=n,f.marker=i,4!=i?-3:(o=t.$t,s=t.te,e(t),t.$t=o,t.te=s,f.mode=7,0)},t.De=t=>t&&t.Se&&t.Se.ze?t.Se.ze.me():-2}function _t(){}function It(t){const e=new _t,o=t&&t.rt?n.floor(2*t.rt):131072,s=new i(o);let f=!1;e.Ve(),e.oe=s,this.append=(t,n)=>{const c=[];let l,u,a=0,w=0,h=0;if(0!==t.length){e.ce=0,e.se=t,e.Nt=t.length;do{if(e.le=0,e.fe=o,0!==e.Nt||f||(e.ce=0,f=!0),l=e.it(0),f&&-5===l){if(0!==e.Nt)throw new r(\"inflating: bad input\")}else if(0!==l&&1!==l)throw new r(\"inflating: \"+e.Yt);if((f||1===l)&&e.Nt===t.length)throw new r(\"inflating: bad input\");e.le&&(e.le===o?c.push(new i(s)):c.push(s.slice(0,e.le))),h+=e.le,n&&e.ce>0&&e.ce!=a&&(n(e.ce),a=e.ce)}while(e.Nt>0||0===e.fe);return c.length>1?(u=new i(h),c.forEach((t=>{u.set(t,w),w+=t.length}))):u=c[0]||new i(0),u}},this.flush=()=>{e.Ce()}}_t.prototype={Ve:function(t){const e=this;return e.Se=new zt,t||(t=15),e.Se.Ve(e,t)},it:function(t){const e=this;return e.Se?e.Se.it(e,t):-2},Ce:function(){const t=this;if(!t.Se)return-2;const e=t.Se.Ce(t);return t.Se=null,e},Ee:function(){const t=this;return t.Se?t.Se.Ee(t):-2},Be:function(t,e){const n=this;return n.Se?n.Se.Be(n,t,e):-2},de:function(t){return this.se[t]},Qt:function(t,e){return this.se.subarray(t,t+e)}},self.initCodec=()=>{self.Deflate=ut,self.Inflate=It};\\n'],{type:\"text/javascript\"}));t({workerScripts:{inflate:[e],deflate:[e]}})}};export{t as default};\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Deflate from \"./lib/core/codecs/deflate.js\";\nimport Inflate from \"./lib/core/codecs/inflate.js\";\nimport { configure } from \"./lib/core/configuration.js\";\nimport getMimeType from \"./lib/core/util/mime-type.js\";\nimport { terminateWorkers } from \"./lib/core/codecs/codec-pool.js\";\n\nconfigure({ Deflate, Inflate });\n\nexport {\n\tfs,\n\tconfigure,\n\tinitShimAsyncCodec,\n\tZipReader,\n\tZipWriter,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tWritableStreamWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tUint8ArrayWriter,\n\tUint8ArrayReader,\n\tERR_HTTP_RANGE,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT,\n\tERR_ABORT\n} from \"./lib/zip-fs.js\";\nexport { getMimeType, terminateWorkers };","<script>\n  export let file;\n\n  import * as zip from \"@zip.js/zip.js\";\n  console.log(file, zip);\n  const reader = new zip.ZipReader(new zip.BlobReader(file));\n  reader.getEntries().then((entries) => {\n    entries = entries\n      .filter((entry) => !entry.directory && entry.filename)\n      .sort((entry1, entry2) => entry1.filename.localeCompare(entry2.filename));\n    console.log(entries);\n  });\n</script>\n\n<div class=\"main-container\">Hi</div>\n\n<style>\n  .main-container {\n    display: flex;\n  }\n</style>\n","<script>\n  import Hero from \"./components/Hero.svelte\";\n  import Reader from \"./components/Reader.svelte\";\n  let file = null;\n</script>\n\n{#if file == null}\n  <Hero bind:file />\n{:else}\n  <Reader bind:file />\n{/if}\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","self","this","call","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","type","indexOf","splice","$set","$$props","obj","$$set","keys","div1","form","div0","p0","p1","label","input","preventDefault","file","handleFile","f","$$invalidate","console","log","e","files","dataTransfer","LITERALS","END_BLOCK","Z_STREAM_ERROR","Z_BUF_ERROR","extractArray","array","flatArray","reduce","concat","isArray","_dist_code","Tree","that","bi_reverse","code","len","res","build_tree","s","tree","dyn_tree","stree","stat_desc","static_tree","elems","n","max_code","heap_len","heap_max","heap","depth","opt_len","static_len","Math","floor","pqdownheap","max","extra","extra_bits","base","extra_base","max_length","h","bits","xbits","overflow","bl_count","gen_bitlen","next_code","gen_codes","StaticTree","_length_code","base_length","base_dist","d_code","dist","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree2_second_part","static_ltree","static_dtree_second_part","static_dtree","static_l_desc","static_d_desc","static_bl_desc","Config","good_length","max_lazy","nice_length","max_chain","func","config_table","z_errmsg","BUSY_STATE","FINISH_STATE","MAX_MATCH","MIN_LOOKAHEAD","smaller","tn2","tm2","Deflate","strm","status","pending_buf_size","last_flush","w_size","w_bits","w_mask","win","window_size","prev","head","ins_h","hash_size","hash_bits","hash_mask","hash_shift","block_start","match_length","prev_match","match_available","strstart","match_start","lookahead","prev_length","max_chain_length","max_lazy_match","level","strategy","good_match","nice_match","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","lit_bufsize","last_lit","matches","last_eob_len","bi_buf","bi_valid","init_block","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","put_byte","pending_buf","pending","put_short","w","send_bits","val","send_code","c2","send_tree","bi_flush","_tr_tally","lc","out_length","in_length","dcode","dist_buf","lc_buf","compress_block","ltree","dtree","lx","bi_windup","_tr_stored_block","buf","stored_len","eof","header","set","subarray","copy_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","flush_block_only","flush_pending","fill_window","more","avail_in","read_buf","longest_match","cur_match","match","chain_length","scan","best_len","limit","_nice_match","wmask","strend","scan_end1","scan_end","deflateReset","total_in","total_out","msg","pending_out","MIN_MATCH","lm_init","k","v","j","deflateInit","_level","_method","memLevel","_strategy","dstate","Uint8Array","Uint16Array","deflateEnd","deflateParams","err","deflate","deflateSetDictionary","dictionary","dictLength","_strm","level_flags","old_flush","bstate","next_out","next_in","Z_NEED_DICT","avail_out","max_start","max_block_size","deflate_stored","bflush","hash_head","deflate_fast","max_insert","deflate_slow","STATIC_TREES","ZStream","next_in_index","next_out_index","ZStream$1","prototype","start","size","Z_DATA_ERROR","inflate_mask","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","BMAX","InfTree","hn","r","u","x","huft_build","bindex","t","hp","g","mask","q","xp","y","z","initWorkArea","vsize","Int32Array","inflate_trees_bits","bb","tb","result","inflate_trees_dynamic","nl","nd","bl","bd","tl","td","inflate_trees_fixed","InfCodes","mode","tree_index","need","lit","get","lbits","dbits","ltree_index","dtree_index","inflate_fast","tl_index","td_index","tp","tp_index","ml","md","tp_index_t_3","bitb","bitk","write","read","end","read_byte","proc","tindex","inflate_flush","free","border","InfBlocks","blens","left","table","codes","last","hufts","MANY","inftree","reset","bl_","bd_","tl_","td_","set_dictionary","sync_point","BAD","mark","Inflate","inflateReset","istate","blocks","method","was","marker","wbits","inflateEnd","inflateInit","inflate","inflateSetDictionary","inflateSync","inflateSyncPoint","DEFAULT_CONFIGURATION","chunkSize","maxWorkers","navigator","hardwareConcurrency","terminateWorkerTimeout","useWebWorkers","workerScripts","config","assign","getConfiguration","configure","configuration","baseURL","Error","application","annodex","bbolin","cap","dsptype","ecmascript","futuresplash","hta","javascript","m3g","mathematica","msaccess","msword","mxf","oda","ogg","pdf","postscript","rar","rtf","smil","xml","zip","applixware","exi","gxf","hyperstudio","ipfix","json","marc","mbox","mp21","mp4","onenote","oxps","pkcs10","pkcs8","pkixcmp","sdp","srgs","widget","winhlp","yang","envoy","fractals","olescript","audio","amr","basic","flac","midi","mpeg","mpegurl","adpcm","s3m","silk","webm","xm","mid","chemical","image","gif","ief","jpeg","pcx","png","tiff","bmp","cgm","g3fax","ktx","sgi","webp","pipeg","message","rfc822","model","iges","mesh","vrml","calendar","css","csv","h323","html","iuls","mathml","plain","richtext","scriptlet","texmacs","n3","sgml","troff","turtle","vcard","webviewhtml","video","avif","dl","dv","fli","gl","quicktime","h261","h263","h264","jpm","mj2","mimeTypes","hasOwnProperty","subtype","indexMimeType","Crc32","constructor","crc","offset","encodeText","TextEncoder","unescape","encodeURIComponent","charCodeAt","encode","bitArray","a1","a2","shift","getPartial","_shiftRight","slice","bitLength","clamp","ceil","partial","_end","round","carry","out","last2","shift2","codec","bytes","fromBits","arr","byteLength","tmp","toBits","hash","_h","_buffer","_length","sha1","blockSize","_init","utf8String","ol","Uint32Array","_block","finalize","_key","_f","_S","words","cipher","key","aes","_tables","_precompute","sbox","decTable","keyLen","encKey","decKey","rcon","encrypt","_crypt","decrypt","encTable","sboxInv","th","xInv","x2","x4","x8","tDec","tEnc","dir","nInnerRounds","t0","t1","t2","t3","b2","kIndex","random","getRandomValues","typedArray","buffer","m_w","m_z","rcache","_r","prf","iv","_prf","_initIv","_iv","calculate","incWord","word","b1","b3","incCounter","counter","misc","importKey","password","hmacSha1","pbkdf2","salt","ui","arrayBuffer","ArrayBuffer","DataView","outLength","setInt32","hmac","Hash","_hash","exKey","bs","_baseHash","_resultHash","_updated","digest","ERR_INVALID_PASSWORD","BLOCK_LENGTH","PBKDF2_ALGORITHM","BASE_KEY_ALGORITHM","DERIVED_BITS_ALGORITHM","iterations","DERIVED_BITS_USAGE","SALT_LENGTH","KEY_LENGTH","SIGNATURE_LENGTH","COUNTER_DEFAULT_VALUE","CRYPTO_API_SUPPORTED","crypto","SUBTLE_API_SUPPORTED","subtle","codecBytes","Aes","CtrGladman","ctrGladman","HmacSha1","AESDecrypt","signed","strength","pendingInput","async","aesCrypto","preamble","preambleArray","createKeys","passwordVerification","passwordVerificationKey","createDecryptionKeys","aesCtrGladman","authentication","chunkToDecrypt","originalSignature","decryptedChunkArray","encryptedChunk","decryptedChunk","valid","signature","indexSignature","AESEncrypt","createEncryptionKeys","output","encryptedChunkArray","paddingStart","paddingEnd","verifySignature","inputLength","inputArray","expand","inputChunk","outputChunk","encodedPassword","basekey","format","algorithm","extractable","keyUsages","derivedBits","baseKey","deriveBits","compositeKey","leftArray","rightArray","begin","HEADER_LENGTH","ZipCryptoDecrypt","zipCrypto","decryptedHeader","ZipCryptoEncrypt","getByte","updateKeys","crcKey0","crcKey2","byte","getInt32","getInt8","imul","temp","number","CODEC_DEFLATE","CODEC_INFLATE","ERR_INVALID_SIGNATURE","codecConstructor","compressed","encryptionStrength","encrypted","Boolean","crc32","dataViewSignature","setUint32","getUint32","inputData","newData","MESSAGE_INIT","MESSAGE_APPEND","MESSAGE_FLUSH","MESSAGE_EVENT_TYPE","classicWorkersSupported","getWorker","workerData","onTaskFinished","webWorker","scripts","busy","terminate","worker","interface","messageTask","workerOptions","error","onMessage","initAndSendMessage","abort","url","scriptUrl","URL","Worker","sendMessage","reject","postMessage","reponseError","stack","createWebWorkerInterface","interfaceCodec","codecType","startsWith","createCodec","createWorkerInterface","pool","pendingRequests","find","clearTerminateTimeout","Number","isFinite","terminateTimeout","setTimeout","clearTimeout","createCodecClass","constructorOptions","registerDataHandler","codecAdapter","pendingData","getResponse","ERR_HTTP_STATUS","ERR_HTTP_RANGE","CONTENT_TYPE_TEXT_PLAIN","HTTP_METHOD_GET","HTTP_RANGE_UNIT","Stream","initialized","Reader","Writer","writeUint8Array","TextReader","super","blobReader","BlobReader","Blob","readUint8Array","TextWriter","encoding","blob","getData","reader","FileReader","onload","onerror","readAsText","Data64URIReader","dataURI","dataEnd","charAt","dataStart","dataArray","atob","substring","delta","indexByte","Data64URIWriter","contentType","indexArray","dataString","String","fromCharCode","btoa","readAsArrayBuffer","BlobWriter","arrayBuffers","FetchReader","preventHeadRequest","useRangeHeader","forceRangeRequests","useXHR","initHttpReader","sendFetchRequest","getFetchRequestData","readUint8ArrayHttpReader","XHRReader","sendXMLHttpRequest","getXMLHttpRequestData","httpReader","sendRequest","getRequestData","href","protocol","test","isHttpFamily","response","getRangeHeaders","headers","contentSize","contentRangeHeader","splitHeader","trim","split","headerValue","getContentLength","getHeaders","Range","Symbol","iterator","fromEntries","contentLength","fetch","statusText","request","XMLHttpRequest","getAllResponseHeaders","replace","toUpperCase","detail","open","entry","entries","setRequestHeader","responseType","send","HttpReader","Uint8ArrayReader","Uint8ArrayWriter","previousArray","MAX_32_BITS","MAX_16_BITS","LOCAL_FILE_HEADER_SIGNATURE","DATA_DESCRIPTOR_RECORD_SIGNATURE","CENTRAL_FILE_HEADER_SIGNATURE","END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE","EXTRAFIELD_TYPE_AES","EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP","BITFLAG_LANG_ENCODING_FLAG","DIRECTORY_SIGNATURE","MAX_DATE","Date","MIN_DATE","CP437","decodeText","toLowerCase","stringValue","indexCharacter","decodeCP437","TextDecoder","fileReader","decode","ERR_ABORT","processData","writer","processChunk","chunkOffset","outputLength","signal","testAborted","min","chunkLength","writeData","onprogress","aborted","PROPERTY_NAMES","Entry","ERR_BAD_FORMAT","ERR_EOCDR_NOT_FOUND","ERR_EOCDR_ZIP64_NOT_FOUND","ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND","ERR_CENTRAL_DIRECTORY_NOT_FOUND","ERR_LOCAL_FILE_HEADER_NOT_FOUND","ERR_EXTRAFIELD_ZIP64_NOT_FOUND","ERR_ENCRYPTED","ERR_UNSUPPORTED_ENCRYPTION","ERR_UNSUPPORTED_COMPRESSION","CHARSET_UTF8","CHARSET_CP437","ZIP64_PROPERTIES","ZipReader","zipReader","endOfDirectoryInfo","startOffset","minimumBytes","maximumLength","signatureArray","view","getDataView","maximumBytes","seek","seekSignature","endOfDirectoryView","directoryDataLength","directoryDataOffset","filesLength","getUint16","prependedDataLength","endOfDirectoryLocatorView","getBigUint64","endOfDirectoryArray","expectedDirectoryDataOffset","originalDirectoryDataOffset","directoryArray","directoryView","indexFile","fileEntry","ZipEntry","readCommonHeader","languageEncodingFlag","bitFlag","filenameOffset","extraFieldOffset","filenameLength","commentOffset","extraFieldLength","versionMadeBy","msDosCompatible","compressedSize","uncompressedSize","commentLength","directory","getUint8","internalFileAttribute","externalFileAttribute","rawFilename","filenameUTF8","commentUTF8","rawExtraField","endOffset","rawComment","filenameEncoding","getOptionValue","commentEncoding","filename","comment","all","endsWith","readCommonFooter","zipEntry","extraFieldAES","compressionMethod","rawLastModDate","localDirectory","dataView","originalCompressionMethod","lastAccessDate","creationDate","dataDescriptor","dataOffset","rawBitFlag","version","lastModDate","getDate","extraField","rawExtraFieldView","offsetExtraField","extraFieldZip64","zip64","extraFieldView","values","indexValue","missingProperties","propertyName","indexMissingProperty","readExtraFieldZip64","extraFieldUnicodePath","readExtraFieldUnicode","extraFieldUnicodeComment","vendorVersion","vendorId","readExtraFieldAES","extraFieldNTFS","tag1Data","tagValue","attributeSize","tag1View","rawLastAccessDate","rawCreationDate","getDateNTFS","extraFieldData","readExtraFieldNTFS","extraFieldExtendedTimestamp","flags","timeProperties","timeRawProperties","indexProperty","time","rawPropertyName","readExtraFieldExtendedTimestamp","extraFieldUnicode","timeRaw","date","BigInt","ERR_DUPLICATED_NAME","ERR_INVALID_COMMENT","ERR_INVALID_ENTRY_COMMENT","ERR_INVALID_ENTRY_NAME","ERR_INVALID_VERSION","ERR_INVALID_ENCRYPTION_STRENGTH","ERR_INVALID_EXTRAFIELD_TYPE","ERR_INVALID_EXTRAFIELD_DATA","ERR_UNSUPPORTED_FORMAT","EXTRAFIELD_DATA_AES","workers","ZipWriter","pendingCompressedSize","pendingEntries","zipWriter","extraFieldSize","arraySet","extendedTimestamp","maximumCompressedSize","keepOrder","getMaximumCompressedSize","bufferedWrite","dataDescriptorSignature","previousFileEntry","resolveLockUnbufferedWrite","resolveLockCurrentFileEntry","lockPreviousFileEntry","fileWriter","lockCurrentFileEntry","lock","lockWrite","rawExtraFieldAES","rawExtraFieldNTFS","rawExtraFieldExtendedTimestamp","extraFieldAESView","setUint16","setUint8","extraFieldExtendedTimestampView","getTime","extraFieldNTFSView","lastModTimeNTFS","getTimeNTFS","setBigUint64","rawExtraFieldZip64","EXTRAFIELD_LENGTH_ZIP64","headerArray","headerView","dateArray","dateView","getHours","getMinutes","getSeconds","getFullYear","getMonth","localHeaderArray","dataWritten","dataDescriptorView","dataDescriptorArray","dataDescriptorOffset","rawExtraFieldZip64View","createFileEntry","indexWrittenData","pendingFileEntry","writingBufferedData","headerLength","sliceAsArrayBuffer","arrayBufferView","writeSlice","writeBlob","corruptedEntry","hasCorruptedEntries","getFileEntry","addFile","pendingEntry","catch","directoryOffset","END_OF_CENTRAL_DIR_LENGTH","indexFileEntry","closeFile","CHUNK_SIZE","fs","params","parent","getChildByName","id","moveTo","move","getFullname","getRelativeName","ancestor","relativeName","isDescendantOf","ZipFileEntry","copyChunk","chunkIndex","pipe","getText","getBlob","mimeType","getData64URI","getUint8Array","replaceBlob","replaceText","replaceData64URI","replaceUint8Array","ZipDirectoryEntry","addDirectory","addChild","addText","addBlob","addData64URI","addUint8Array","addHttpContent","fileSystemEntry","isDirectory","getChildren","child","childZipEntry","readEntries","directoryReader","temporaryEntries","createReader","isFile","addFileSystemEntry","importZip","exportZip","getEntries","path","pathPart","getZipBlobReader","initReaders","totalSize","selectedEntry","entryOffsets","process","exportChild","processChild","relativePath","indexProgress","previousValue","currentValue","getTotalSize","close","childIndex","FS","resetFS","remove","destination","fullname","getById","addData","importBlob","importData64URI","importHttpContent","exportBlob","exportData64URI","zipBlobReader","currentScript","src","baseURI","createObjectURL","bufsize","lastIndex","bufferIndex","bufferSize","buffers","chunk","nomoreinput","library","writableStream","getWriter","div","zip.ZipReader","zip.BlobReader","sort","entry1","entry2","localeCompare","body"],"mappings":"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,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAChJ,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAChJ,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAC9I,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAC9I,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAC9I,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAC/I,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAC/I,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EACjJ,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC7I,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAC7I,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAChJ,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAC/I,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAC9I,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAC9I,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAC/I,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAChJ,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EACjJ,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAChJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAC/I,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EACjJ,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EACjJ,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACjJ,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAChJ,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,EAAG,EAChJ,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,EAAG,EAAG,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"}